<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>WSL安装</title>
      <link href="/2022/12/12/WSL%E5%AE%89%E8%A3%85/"/>
      <url>/2022/12/12/WSL%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>[WSL安装]<a href="https://learn.microsoft.com/zh-cn/windows/wsl/install">https://learn.microsoft.com/zh-cn/windows/wsl/install</a><br>[运行出现——占位程序接收到错误数据]<a href="https://blog.csdn.net/qq_32461955/article/details/127858827">https://blog.csdn.net/qq_32461955/article/details/127858827</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>WSL是windows平台使用Linux系统的方式之一。通过安装子系统，使用命令行操作Linux。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>使用管理员身份运行power shell。</p><p>运行：</p><pre><code>wsl --install</code></pre><p>重启后即可。</p><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>点击开始菜单中的Ubuntu即可运行。（默认安装Ubuntu）</p><h2 id="查看wsl版本"><a href="#查看wsl版本" class="headerlink" title="查看wsl版本"></a>查看wsl版本</h2><pre><code>wsl -l -v</code></pre><h1 id="出现过的问题"><a href="#出现过的问题" class="headerlink" title="出现过的问题"></a>出现过的问题</h1><h2 id="占位程序接收到错误数据"><a href="#占位程序接收到错误数据" class="headerlink" title="占位程序接收到错误数据"></a>占位程序接收到错误数据</h2><p>显示：Error code: Wsl&#x2F;Service&#x2F;0x800706f7</p><p>解决方法：管理员身份运行power shell<br>输入：</p><pre><code>netsh winsock reset</code></pre><p>即可解决。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows子系统Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 库函数</title>
      <link href="/2022/11/27/Python-%E5%BA%93%E5%87%BD%E6%95%B0/"/>
      <url>/2022/11/27/Python-%E5%BA%93%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="自带函数"><a href="#自带函数" class="headerlink" title="自带函数"></a>自带函数</h1><h2 id="zip"><a href="#zip" class="headerlink" title="zip()"></a>zip()</h2><pre><code>zip([一个或者多个迭代器,...])</code></pre><p>打包为元组。<br>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = [1, 2, 3]</span><br><span class="line">b = [4, 5, 6]</span><br><span class="line">p = zip(a,b)</span><br><span class="line">&gt;&gt; p = [(1,4), (2,5),(3,6)]</span><br><span class="line">q = zip(*p)</span><br><span class="line">&gt;&gt; q = [(1,2,3),(4,5,6)]</span><br></pre></td></tr></table></figure><h1 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h1><h2 id="std"><a href="#std" class="headerlink" title="std"></a>std</h2><pre><code>numpy.std(a, axis=None)</code></pre><ul><li>a:计算a的标准差</li><li>axis: <ul><li>0 计算每一列的标准差</li><li>1 计算每一行的标准差</li><li>None 计算全局标准差</li></ul></li></ul><h2 id="digitize"><a href="#digitize" class="headerlink" title="digitize"></a>digitize</h2><pre><code>numpy.digitize(x, bins, right=False)</code></pre><p>返回一个和x相同大小的列表，返回值中的元素对应x元素落在bins区间的索引号。</p><h2 id="argmax-返回列表的最大值索引值"><a href="#argmax-返回列表的最大值索引值" class="headerlink" title="argmax 返回列表的最大值索引值"></a>argmax 返回列表的最大值索引值</h2><h2 id="random-随机数"><a href="#random-随机数" class="headerlink" title="random 随机数"></a>random 随机数</h2><h3 id="choice"><a href="#choice" class="headerlink" title="choice"></a>choice</h3><p>choice(a, size&#x3D;None, replace&#x3D;True, p&#x3D;None)</p><ul><li>a 序列</li><li>size 采样的数量，可以是整数，可以是tuple(m，n，k)</li><li>replace 采样的样本是否需要更换。False时样本不会重复。</li><li>p 一维数组，指定a中每个元素采样的概率。默认相同</li></ul><h1 id="tensorflow"><a href="#tensorflow" class="headerlink" title="tensorflow"></a>tensorflow</h1><h2 id="math"><a href="#math" class="headerlink" title="math"></a>math</h2><h2 id="clip-by-global-norm"><a href="#clip-by-global-norm" class="headerlink" title="clip_by_global_norm"></a>clip_by_global_norm</h2><pre><code>tf.clip_by_global_norm( t_list, clip_norm, use_norm=None, name=None)</code></pre><ul><li>t_list 元组、列表或者混合张量</li><li>clip_norm 一个标量，大于0。剪裁率</li><li>use_norm 浮点数标量<br>给定张量 t_list 的元组或列表，以及裁剪率 clip_norm，此操作返回裁剪张量列表 list_clipped 和 t_list<br>中所有张量的全局范数 (global_norm)。或者，如果您已经计算了 t_list 的全局范数，则可以使用 use_norm 指定全局范数。</li></ul><h3 id="reduce-mean"><a href="#reduce-mean" class="headerlink" title="reduce_mean"></a>reduce_mean</h3><pre><code>tf.math.reduce_mean(input_tensor, axis=None, keepdims=False, name=None)</code></pre><ul><li>input_tensor 输入的张量</li><li>axis <ul><li>缺省，则输出的值为张量所有值的平均值，为一个数字。</li><li>0，输出一个向量，沿着纵向取平均值</li><li>1，沿着横向取平均值</li></ul></li><li>keepdims true表示保留长度为1的缩减维度。</li></ul><h3 id="reduce-sum"><a href="#reduce-sum" class="headerlink" title="reduce_sum"></a>reduce_sum</h3><pre><code>tf.math.reduce_sum(input_tensor, axis=None, keepdims=False, name=None)</code></pre><p>输入与mean相同。</p><ul><li>axis <ul><li>缺省，表示张量的所有值相加</li><li>0，纵向相加</li><li>1，横向相加，返回横向量。</li></ul></li><li>keepdims 为True时，且axis为1，返回列向量</li></ul><h2 id="squeeze"><a href="#squeeze" class="headerlink" title="squeeze"></a>squeeze</h2><p><a href="https://www.tensorflow.org/api_docs/python/tf/squeeze">https://www.tensorflow.org/api_docs/python/tf/squeeze</a></p><pre><code>tf.squeeze(input, axis=None, name=None)</code></pre><p>给定一个输入张量。默认移除数量为1的维度。如果axis有值，则移除axis列表对应索引的值。</p><ul><li>input 输入，是一个张量。</li><li>axis 一个列表，指的是张量的索引。</li></ul><h2 id="kereas"><a href="#kereas" class="headerlink" title="kereas"></a>kereas</h2><h3 id="layers"><a href="#layers" class="headerlink" title="layers"></a>layers</h3><h4 id="Dense"><a href="#Dense" class="headerlink" title="Dense"></a>Dense</h4><pre><code>tf.keras.layers.Dense(    units,    activation=None,    use_bias=True,    kernel_initializer=&#39;glorot_uniform&#39;,    bias_initializer=&#39;zeros&#39;,    kernel_regularizer=None,    bias_regularizer=None,    activity_regularizer=None,    kernel_constraint=None,    bias_constraint=None,    **kwargs)</code></pre><ul><li>units 正整数，输出的维度</li><li>activation 激活函数<ul><li>sigmoid</li><li>relu</li><li>tf.nn.relu </li><li>tf.nn.softmax</li></ul></li><li>use_bias 布尔型 层是否使用bias向量<br>目前暂时只需要前两个参数。</li></ul><h4 id="Flatten"><a href="#Flatten" class="headerlink" title="Flatten"></a>Flatten</h4><pre><code>tf.keras.layers.Flatten()</code></pre><p>将2D层转化为1D向量，只是重排向量。</p><h4 id="Conv2D-定义卷积层"><a href="#Conv2D-定义卷积层" class="headerlink" title="Conv2D 定义卷积层"></a>Conv2D 定义卷积层</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">tf.keras.layers.Conv2D(</span><br><span class="line">    filters,</span><br><span class="line">    kernel_size,</span><br><span class="line">    strides=(1, 1),</span><br><span class="line">    padding=&#x27;valid&#x27;,</span><br><span class="line">    data_format=None,</span><br><span class="line">    dilation_rate=(1, 1),</span><br><span class="line">    groups=1,</span><br><span class="line">    activation=None,</span><br><span class="line">    use_bias=True,</span><br><span class="line">    kernel_initializer=&#x27;glorot_uniform&#x27;,</span><br><span class="line">    bias_initializer=&#x27;zeros&#x27;,</span><br><span class="line">    kernel_regularizer=None,</span><br><span class="line">    bias_regularizer=None,</span><br><span class="line">    activity_regularizer=None,</span><br><span class="line">    kernel_constraint=None,</span><br><span class="line">    bias_constraint=None,</span><br><span class="line">    **kwargs</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>filters 输出的维度。即输出的层的数量。</li><li>kernel_size 核的大小。可以是整数或者矩阵。</li><li>padding 是否填充0。指在输入层的周围填充0。<code>vaild</code>表示不填充，<code>same</code>表示填充一圈0。</li></ul><h4 id="MaxPool2D-定义最大池化层"><a href="#MaxPool2D-定义最大池化层" class="headerlink" title="MaxPool2D 定义最大池化层"></a>MaxPool2D 定义最大池化层</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tf.keras.layers.MaxPool2D(</span><br><span class="line">    pool_size=(2, 2),</span><br><span class="line">    strides=None,</span><br><span class="line">    padding=&#x27;valid&#x27;,</span><br><span class="line">    data_format=None,</span><br><span class="line">    **kwargs</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>pool_size 池化核大小</li><li>strides 池化核移动的步长</li></ul><h3 id="optimizers"><a href="#optimizers" class="headerlink" title="optimizers"></a>optimizers</h3><h4 id="SGD-随机梯度下降法"><a href="#SGD-随机梯度下降法" class="headerlink" title="SGD 随机梯度下降法"></a>SGD 随机梯度下降法</h4><pre><code>tf.keras.optimizers.SGD(learning_rate = 0.1)</code></pre><h3 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h3><h4 id="compile"><a href="#compile" class="headerlink" title="compile"></a>compile</h4><p>compile</p><h4 id="fit-测试拟合程度"><a href="#fit-测试拟合程度" class="headerlink" title="fit 测试拟合程度"></a>fit 测试拟合程度</h4><h4 id="evaluate"><a href="#evaluate" class="headerlink" title="evaluate"></a>evaluate</h4><pre><code>test_loss, test_acc = model.evaluate(x=test_images, y=test_labels)</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">evaluate(</span><br><span class="line">    x=None,</span><br><span class="line">    y=None,</span><br><span class="line">    batch_size=None,</span><br><span class="line">    verbose=&#x27;auto&#x27;,</span><br><span class="line">    sample_weight=None,</span><br><span class="line">    steps=None,</span><br><span class="line">    callbacks=None,</span><br><span class="line">    max_queue_size=10,</span><br><span class="line">    workers=1,</span><br><span class="line">    use_multiprocessing=False,</span><br><span class="line">    return_dict=False,</span><br><span class="line">    **kwargs</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>x 输入数据</li><li>y 目标数据</li></ul><h4 id="predict"><a href="#predict" class="headerlink" title="predict"></a>predict</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">predict(</span><br><span class="line">    x,</span><br><span class="line">    batch_size=None,</span><br><span class="line">    verbose=&#x27;auto&#x27;,</span><br><span class="line">    steps=None,</span><br><span class="line">    callbacks=None,</span><br><span class="line">    max_queue_size=10,</span><br><span class="line">    workers=1,</span><br><span class="line">    use_multiprocessing=False</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>x 输入的采样点，可以是：<ul><li>numpy矩阵，或者矩阵列表</li><li>tensorflow张量，或者张量列表</li><li>tf.data 数据集</li></ul></li></ul><h1 id="functools"><a href="#functools" class="headerlink" title="functools"></a>functools</h1><p>Python标准模块，提供了一些常用的高阶函数，也就是用于处理其它函数的特殊函数。</p><h2 id="partial"><a href="#partial" class="headerlink" title="partial"></a>partial</h2><pre><code>functools.partial(func[, *args][, **keywords])</code></pre><p>将对象的缺省默认值修改为args中的值。<br>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int(&#x27;10&#x27;) # 输出为10</span><br><span class="line">int2 = partial(int, base=2)  # base就是keywords</span><br><span class="line">int2(&#x27;10&#x27;) # 输出为2</span><br></pre></td></tr></table></figure><ul><li>func 可调用的对象或者函数。调用partial对象会转为使用新的参数和关键字参数调用func。</li><li>args 最左边的位置参数作为优先位置参数提供给partial对象调用。</li><li>keywords 对象被调用时提供关键字参数</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习初探</title>
      <link href="/2022/11/21/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%88%9D%E6%8E%A2/"/>
      <url>/2022/11/21/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%88%9D%E6%8E%A2/</url>
      
        <content type="html"><![CDATA[<p>来源于：</p><p><a href="http://introtodeeplearning.com/">MIT-Introduction to Deep Learning</a></p><p>代码为MIT课程练习LAB，可以使用Colab进行学习。链接：<br><a href="https://github.com/aamini/introtodeeplearning">MIT-Codes Github resposibility</a></p><p>Information：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Copyright 2022 MIT 6.S191 Introduction to Deep Learning. All Rights Reserved.</span><br><span class="line"># </span><br><span class="line"># Licensed under the MIT License. You may not use this file except in compliance</span><br><span class="line"># with the License. Use and/or modification of this code outside of 6.S191 must</span><br><span class="line"># reference:</span><br><span class="line">#</span><br><span class="line"># © MIT 6.S191: Introduction to Deep Learning</span><br><span class="line"># http://introtodeeplearning.com</span><br></pre></td></tr></table></figure><h1 id="Lab-1-Intro-to-TensorFlow-and-Music-Generation-with-RNNs"><a href="#Lab-1-Intro-to-TensorFlow-and-Music-Generation-with-RNNs" class="headerlink" title="Lab 1: Intro to TensorFlow and Music Generation with RNNs"></a>Lab 1: Intro to TensorFlow and Music Generation with RNNs</h1><h2 id="Part-1-Intro-to-TensorFlow"><a href="#Part-1-Intro-to-TensorFlow" class="headerlink" title="Part 1:Intro to TensorFlow"></a>Part 1:Intro to TensorFlow</h2><h3 id="创建tf值"><a href="#创建tf值" class="headerlink" title="创建tf值"></a>创建tf值</h3><ul><li><p><code> x=tf.constant(&#39;String&#39;, tf.string)</code>:<br>创建一个常量，这个常量可以是多维列表。<br><code>tf.string</code>表示为字符串,<code>tf.float64</code>表示浮点型。</p></li><li><p><code>x=tf.Variable(value)</code>:创建一个变量</p></li><li><p><code>tf.zeros([a, b, c])</code>:创建一个全是0的矩阵,列表中表示size。</p></li></ul><h3 id="查看tf变量属性"><a href="#查看tf变量属性" class="headerlink" title="查看tf变量属性"></a>查看tf变量属性</h3><ul><li><code>tf.rank(value).numpy()</code>:查看value的维数</li><li><code>tf.shape(value).numpy()</code>:查看value的大小</li></ul><h3 id="tf计算函数"><a href="#tf计算函数" class="headerlink" title="tf计算函数"></a>tf计算函数</h3><ul><li><code>tf.add(a, b)</code>: a+b</li><li><code>tf.subtract(a, b)</code>: a-b</li><li><code>tf.multiply(a, b)</code>: a*b</li></ul><h3 id="创建一个简单的神经网络"><a href="#创建一个简单的神经网络" class="headerlink" title="创建一个简单的神经网络"></a>创建一个简单的神经网络</h3><p>使用的输出公式: <code>y=sigmoid(xW+b)</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">### Defining a network Layer ###</span><br><span class="line"></span><br><span class="line"># n_output_nodes: number of output nodes 输出节点个数</span><br><span class="line"># input_shape: shape of the input 输入大小</span><br><span class="line"># x: input to the layer 层的输入</span><br><span class="line"></span><br><span class="line">class OurDenseLayer(tf.keras.layers.Layer):  # 继承了Layer</span><br><span class="line">  def __init__(self, n_output_nodes):</span><br><span class="line">    super(OurDenseLayer, self).__init__()</span><br><span class="line">    self.n_output_nodes = n_output_nodes</span><br><span class="line"></span><br><span class="line">  def build(self, input_shape):</span><br><span class="line">    d = int(input_shape[-1])</span><br><span class="line">    # Define and initialize parameters: a weight matrix W and bias b  定义并初始化参数：权重W 误差b</span><br><span class="line">    # Note that parameter initialization is random! 参数的初始值是随机的！！！</span><br><span class="line">    self.W = self.add_weight(&quot;weight&quot;, shape=[d, self.n_output_nodes]) # note the dimensionality d行‘节点个数&#x27;列</span><br><span class="line">    self.b = self.add_weight(&quot;bias&quot;, shape=[1, self.n_output_nodes]) # note the dimensionality  1行 ‘节点个数&#x27;列</span><br><span class="line"></span><br><span class="line">  def call(self, x):</span><br><span class="line">    &#x27;&#x27;&#x27;TODO: define the operation for z (hint: use tf.matmul) 定义z &#x27;&#x27;&#x27;</span><br><span class="line">    z = tf.add(tf.matmul(x, self.W), self.b) # TODO</span><br><span class="line"></span><br><span class="line">    &#x27;&#x27;&#x27;TODO: define the operation for out (hint: use tf.sigmoid) 定义输出  &#x27;&#x27;&#x27;</span><br><span class="line">    y = tf.sigmoid(z) # TODO</span><br><span class="line">    return y</span><br><span class="line"></span><br><span class="line"># Since layer parameters are initialized randomly, we will set a random seed for reproducibility 层的参数初始化值是随机的，设置一个随机种子</span><br><span class="line">tf.random.set_seed(1)</span><br><span class="line">layer = OurDenseLayer(3)</span><br><span class="line">layer.build((1,2))</span><br><span class="line">x_input = tf.constant([[1,2.]], shape=(1,2))</span><br><span class="line">y = layer.call(x_input)</span><br><span class="line"></span><br><span class="line"># test the output!</span><br><span class="line">print(y.numpy())</span><br></pre></td></tr></table></figure><h3 id="使用时序-Sequential-API的神经网络"><a href="#使用时序-Sequential-API的神经网络" class="headerlink" title="使用时序(Sequential)API的神经网络"></a>使用时序(Sequential)API的神经网络</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">from tensorflow.keras import Sequential</span><br><span class="line">from tensorflow.keras.layers import Dense</span><br><span class="line"></span><br><span class="line">n_output_nodes = 3</span><br><span class="line"></span><br><span class="line"># First define the model </span><br><span class="line">model = Sequential()</span><br><span class="line"></span><br><span class="line">dense_layer = Dense(units=n_output_nodes) # TODO  </span><br><span class="line"># 答案：dense_layer = Dense(n_output_nodes, activation=&#x27;sigmoid&#x27;) # TODO</span><br><span class="line"># Add the dense layer to the model</span><br><span class="line">model.add(dense_layer)</span><br></pre></td></tr></table></figure><p>测试输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x_input = tf.constant([[1,2.]], shape=(1,2))</span><br><span class="line">model_output = model(x_input) # TODO   将x输入model模型中运行。</span><br><span class="line"># 答案 model_output = model(x_input).numpy()</span><br><span class="line">print(model_output) </span><br></pre></td></tr></table></figure><p>使用Model类创建继承的子类SubclassModel：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">from tensorflow.keras import Model</span><br><span class="line">from tensorflow.keras.layers import Dense</span><br><span class="line">class SubclassModel(tf.keras.Model):</span><br><span class="line">    def __init__(self, n_output_nodes):</span><br><span class="line">        super(SubclassModel, self).__init__()</span><br><span class="line">        &#x27;&#x27;&#x27;TODO: Our model consists of a single Dense layer. Define this layer.&#x27;&#x27;&#x27; </span><br><span class="line">        self.dense_layer = Dense(n_output_nodes, activation=&#x27;sigmoid&#x27;)   &#x27;&#x27;&#x27;TODO: Dense Layer&#x27;&#x27;&#x27;</span><br><span class="line">        # 答案 self.dense_layer = Dense(n_output_nodes, activation=&#x27;sigmoid&#x27;)</span><br><span class="line">        # 此处使用sigmoid函数，若使用relu，输出为0；使用tanh，输出的0、2位置为负数。</span><br><span class="line">    def call(self, inputs):</span><br><span class="line">        return self.dense_layer(inputs)</span><br><span class="line"># 测试：   </span><br><span class="line">n_output_nodes = 3</span><br><span class="line">model = SubclassModel(n_output_nodes)</span><br><span class="line">x_input = tf.constant([[1,2.]], shape=(1,2))</span><br><span class="line">print(model.call(x_input))</span><br></pre></td></tr></table></figure><p>在<code>call</code>函数中增加：<code>isidentity=False</code>，<br>isidentity，“有时我们希望网络简单地输出原来的值”。<br>True时返回输入值，否则正常执行。</p><h3 id="梯度计算"><a href="#梯度计算" class="headerlink" title="梯度计算"></a>梯度计算</h3><p>通过<code>GradientTape()</code>方法实现梯度计算。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = tf.Variable(3.0)</span><br><span class="line">with tf.GradientTape() as tape:</span><br><span class="line">    y=x*x</span><br><span class="line">dy_dx=tape.gradient(y, x)</span><br></pre></td></tr></table></figure><p>SGD梯度法优化方法：<br>计算损失L&#x3D;(x−x_f)^2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">x = tf.Variable([tf.random.normal([1])]) # x随机取值</span><br><span class="line">learning_rate = 1e-2 # SGD的学习率</span><br><span class="line">history = []</span><br><span class="line">x_f = 4     # 定义目标值</span><br><span class="line"></span><br><span class="line">for i in range(500):</span><br><span class="line">    with tf.GradientTape() as tape:</span><br><span class="line">        loss = (x - x_f)**2  </span><br><span class="line">    grad = tape.gradient(loss, x) # 计算梯度值</span><br><span class="line">    new_x = x - learning_rate*grad # sgd update</span><br><span class="line">    x.assign(new_x) # 更新x值，即用new_x值替换x值。</span><br><span class="line">    history.append(x.numpy()[0]) # 加入索引是因为x为列表，但是x列表只有一个值。</span><br><span class="line"></span><br><span class="line"># Plot the evolution of x as we optimize towards x_f!</span><br><span class="line">plt.plot(history)</span><br><span class="line">plt.plot([0, 500],[x_f,x_f])</span><br><span class="line">plt.legend((&#x27;Predicted&#x27;, &#x27;True&#x27;))</span><br><span class="line">plt.xlabel(&#x27;Iteration&#x27;)</span><br><span class="line">plt.ylabel(&#x27;x value&#x27;)</span><br></pre></td></tr></table></figure><h1 id="Lab-2-Computer-Vision"><a href="#Lab-2-Computer-Vision" class="headerlink" title="Lab 2: Computer Vision"></a>Lab 2: Computer Vision</h1><h2 id="Part-1-MNIST-Digit-Classification-手写数字识别"><a href="#Part-1-MNIST-Digit-Classification-手写数字识别" class="headerlink" title="Part 1: MNIST Digit Classification 手写数字识别"></a>Part 1: MNIST Digit Classification 手写数字识别</h2><h3 id="初始模型创建"><a href="#初始模型创建" class="headerlink" title="初始模型创建"></a>初始模型创建</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def build_fc_model():</span><br><span class="line">  fc_model = tf.keras.Sequential([</span><br><span class="line">      # First define a Flatten layer定义一个展平层</span><br><span class="line">      tf.keras.layers.Flatten(),</span><br><span class="line"></span><br><span class="line">      # &#x27;&#x27;&#x27;TODO: Define the activation function for the first fully connected (Dense) layer.&#x27;&#x27;&#x27;第一层全连接层激活函数</span><br><span class="line">      tf.keras.layers.Dense(128, activation=tf.nn.relu),</span><br><span class="line"></span><br><span class="line">      # &#x27;&#x27;&#x27;TODO: Define the second Dense layer to output the classification probabilities&#x27;&#x27;&#x27;定义第二层全连接层，输出分类概率</span><br><span class="line">      tf.keras.layers.Dense(10, activation=tf.nn.softmax) </span><br><span class="line">  ])</span><br><span class="line">  return fc_model</span><br><span class="line">model = build_fc_model()</span><br></pre></td></tr></table></figure><p>第一层全连接层使用<code>relu</code>激活函数，第二层全连接层用于输出预测的概率值，使用<code>softmax</code>激活函数.</p><p>这里使用<code>tf.nn.relu</code>形式，如果用<code>&#39;relu&#39;</code>会报错。</p><h3 id="模型编译"><a href="#模型编译" class="headerlink" title="模型编译"></a>模型编译</h3><p>在训练模型之前执行模型编译，包括设置优化器、损失函数、训练测试的指标：这里使用准确率。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">model.compile(optimizer=tf.keras.optimizers.SGD(learning_rate=1e-1), </span><br><span class="line">              loss=&#x27;sparse_categorical_crossentropy&#x27;,</span><br><span class="line">              metrics=[&#x27;accuracy&#x27;])</span><br></pre></td></tr></table></figure><h3 id="模型训练"><a href="#模型训练" class="headerlink" title="模型训练"></a>模型训练</h3><p>训练过程中显示损失和准确率。</p><ul><li>epochs：训练次数<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BATCH_SIZE = 64</span><br><span class="line">EPOCHS = 5</span><br><span class="line">model.fit(train_images, train_labels, batch_size=BATCH_SIZE, epochs=EPOCHS)</span><br></pre></td></tr></table></figure></li></ul><h3 id="使用测试训练集测试模型准确性"><a href="#使用测试训练集测试模型准确性" class="headerlink" title="使用测试训练集测试模型准确性"></a>使用测试训练集测试模型准确性</h3><p><code>evaluate</code>方法用来测试准确性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test_loss, test_acc = model.evaluate(x=test_images, y=test_labels)</span><br><span class="line"></span><br><span class="line">print(&#x27;Test accuracy:&#x27;, test_acc)</span><br></pre></td></tr></table></figure><h3 id="创建CNN网络模型，并进行编译、训练和测试。"><a href="#创建CNN网络模型，并进行编译、训练和测试。" class="headerlink" title="创建CNN网络模型，并进行编译、训练和测试。"></a>创建CNN网络模型，并进行编译、训练和测试。</h3><p>创建模型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">def build_cnn_model():</span><br><span class="line">    cnn_model = tf.keras.Sequential([</span><br><span class="line">        # 定义第一个卷积层</span><br><span class="line">        tf.keras.layers.Conv2D(filters=24, kernel_size=(3, 3), activation=&#x27;relu&#x27;), </span><br><span class="line">        # 定义第一个最大池化层</span><br><span class="line">        tf.keras.layers.MaxPool2D(pool_size=(2, 2)),</span><br><span class="line">        # 定义第二个卷积层</span><br><span class="line">        tf.keras.layers.Conv2D(filters=36, kernel_size=(3, 3), activation=&#x27;relu&#x27;),</span><br><span class="line">        # 定义第二个最大池化层</span><br><span class="line">        tf.keras.layers.MaxPool2D(pool_size=(2, 2)),</span><br><span class="line">        tf.keras.layers.Flatten(),</span><br><span class="line">        tf.keras.layers.Dense(128, activation=tf.nn.relu),</span><br><span class="line">        # 输出分类概率，这一层输出为概率，因此输出个数为10，表示10个数字。</span><br><span class="line">        tf.keras.layers.Dense(10, activation=tf.nn.softmax),</span><br><span class="line">    ])</span><br><span class="line">    return cnn_model</span><br><span class="line">cnn_model = build_cnn_model()    # 输入一些数据进行模型初始化</span><br><span class="line">cnn_model.predict(train_images[[0]])    # 输出模型的一些摘要信息</span><br><span class="line">print(cnn_model.summary())</span><br></pre></td></tr></table></figure><p>编译:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnn_model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=1e-3), loss=&#x27;sparse_categorical_crossentropy&#x27;, metrics=[&#x27;accuracy&#x27;]) </span><br></pre></td></tr></table></figure><p>训练：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnn_model.fit(x=train_images, y=train_labels, batch_size=BATCH_SIZE, epochs=EPOCHS)</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test_loss, test_acc = cnn_model.evaluate(train_images, train_labels)</span><br><span class="line">print(&#x27;Test accuracy:&#x27;, test_acc)</span><br></pre></td></tr></table></figure><p>至此模型已经训练完毕，此时输入图片进行预测：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">predictions = cnn_model.predict(test_images)</span><br><span class="line">predictions[0] # 输出的概率列表</span><br><span class="line"></span><br><span class="line">prediction = np.argmax(predictions[0]) # 此为预测值</span><br><span class="line">print(prediction)</span><br><span class="line"></span><br><span class="line">print(&quot;Label of this digit is:&quot;, test_labels[0])</span><br><span class="line">plt.imshow(test_images[0,:,:,0], cmap=plt.cm.binary)    # 此为输出对应预测值的图像</span><br></pre></td></tr></table></figure><p>输出为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">array([1.1896365e-08, 2.9328827e-08, 1.0020367e-07, 1.9016676e-07,</span><br><span class="line">       8.6228073e-11, 5.7627930e-11, 1.5786619e-13, 9.9999928e-01,</span><br><span class="line">       3.2206058e-09, 3.1025860e-07], dtype=float32)</span><br><span class="line">7</span><br></pre></td></tr></table></figure><p><img src="L2P1_1.png"></p><h3 id="使用随机梯度下降训练CNN网络模型"><a href="#使用随机梯度下降训练CNN网络模型" class="headerlink" title="使用随机梯度下降训练CNN网络模型"></a>使用随机梯度下降训练CNN网络模型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># 重建CNN网络</span><br><span class="line">cnn_model = build_cnn_model()</span><br><span class="line"></span><br><span class="line">batch_size = 12</span><br><span class="line">loss_history = mdl.util.LossHistory(smoothing_factor=0.95) # 记录训练过程的损失</span><br><span class="line">plotter = mdl.util.PeriodicPlotter(sec=2, xlabel=&#x27;Iterations&#x27;, ylabel=&#x27;Loss&#x27;, scale=&#x27;semilogy&#x27;)</span><br><span class="line">optimizer = tf.keras.optimizers.SGD(learning_rate=1e-2) # 定义优化器</span><br><span class="line"></span><br><span class="line">if hasattr(tqdm, &#x27;_instances&#x27;): tqdm._instances.clear() # 如果存在，清除掉</span><br><span class="line"></span><br><span class="line">for idx in tqdm(range(0, train_images.shape[0], batch_size)):</span><br><span class="line">  # 首先抓取数据并将输入图像转化为张量。</span><br><span class="line">  (images, labels) = (train_images[idx:idx+batch_size], train_labels[idx:idx+batch_size])</span><br><span class="line">  images = tf.convert_to_tensor(images, dtype=tf.float32)</span><br><span class="line">  # 使用GradientTape方法记录梯度操作</span><br><span class="line">  with tf.GradientTape() as tape:</span><br><span class="line">    # 输入图片获得预测值</span><br><span class="line">    logits = cnn_model(images)</span><br><span class="line"></span><br><span class="line">    #&#x27;&#x27;&#x27;TODO: compute the categorical cross entropy loss</span><br><span class="line">    # 计算分类交叉熵损失(categorical cross entropy loss)</span><br><span class="line">    loss_value = tf.keras.backend.sparse_categorical_crossentropy(labels, logits) # 目标， 输出</span><br><span class="line">  loss_history.append(loss_value.numpy().mean()) # 将损失记录到记录着中。</span><br><span class="line">  plotter.plot(loss_history.get())</span><br><span class="line">  # 反向传播</span><br><span class="line">  # 使用trainable_variables获得预测值</span><br><span class="line">  # 计算参数梯度，d右/d左，利用apply_gradients计算，将梯度应用到变量中。</span><br><span class="line">  # zip()将变量重新打包，输入其中。</span><br><span class="line">  grads = tape.gradient(loss_value, cnn_model.trainable_variables)</span><br><span class="line">  optimizer.apply_gradients(zip(grads, cnn_model.trainable_variables))</span><br></pre></td></tr></table></figure><h2 id="Part-2-Debiasing-Facial-Detection-Systems-去偏面部检测系统"><a href="#Part-2-Debiasing-Facial-Detection-Systems-去偏面部检测系统" class="headerlink" title="Part 2: Debiasing Facial Detection Systems 去偏面部检测系统"></a>Part 2: Debiasing Facial Detection Systems 去偏面部检测系统</h2><h3 id="依赖项："><a href="#依赖项：" class="headerlink" title="依赖项："></a>依赖项：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf</span><br><span class="line">import IPython</span><br><span class="line">import functools</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">import numpy as np</span><br><span class="line">from tqdm import tqdm</span><br><span class="line">import mitdeeplearning as mdl</span><br></pre></td></tr></table></figure><h3 id="获取数据集"><a href="#获取数据集" class="headerlink" title="获取数据集"></a>获取数据集</h3><p>获取数据的网站：</p><ul><li><a href="http://mmlab.ie.cuhk.edu.hk/projects/CelebA.html">Celeba</a>: 脸部图像数据集，此处为正向数据。</li><li><a href="https://image-net.org/">ImageNet</a>:不同类别的图像集</li><li><a href="https://en.wikipedia.org/wiki/Fitzpatrick_scale">Fitzpatrick Scale</a>:肤色分类系统</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 从Celeba和ImageNet获取数据</span><br><span class="line">path_to_training_data = tf.keras.utils.get_file(&#x27;train_face.h5&#x27;, &#x27;https://www.dropbox.com/s/hlz8atheyozp1yx/train_face.h5?dl=1&#x27;)</span><br><span class="line"># 使用下载的数据集实例化训练数据集加载器</span><br><span class="line">loader = mdl.lab2.TrainingDatasetLoader(path_to_training_data)</span><br></pre></td></tr></table></figure><h3 id="定义并训练CNN网络模型"><a href="#定义并训练CNN网络模型" class="headerlink" title="定义并训练CNN网络模型"></a>定义并训练CNN网络模型</h3><p>定义四层卷积层，然后输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">n_filters = 12 # 卷积滤波器的base number </span><br><span class="line"># 定义标准CNN模型函数</span><br><span class="line">def make_standard_classifier(n_outputs=1):</span><br><span class="line">  Conv2D = functools.partial(tf.keras.layers.Conv2D, padding=&#x27;same&#x27;, activation=&#x27;relu&#x27;)  # 函数Conv2D的相应默认值修改为same和relu</span><br><span class="line">  BatchNormalization = tf.keras.layers.BatchNormalization</span><br><span class="line">  Flatten = tf.keras.layers.Flatten</span><br><span class="line">  Dense = functools.partial(tf.keras.layers.Dense, activation=&#x27;relu&#x27;)</span><br><span class="line"></span><br><span class="line">  model = tf.keras.Sequential([</span><br><span class="line">    Conv2D(filters=1*n_filters, kernel_size=5,  strides=2),</span><br><span class="line">    BatchNormalization(),</span><br><span class="line">    </span><br><span class="line">    Conv2D(filters=2*n_filters, kernel_size=5,  strides=2),</span><br><span class="line">    BatchNormalization(),</span><br><span class="line"></span><br><span class="line">    Conv2D(filters=4*n_filters, kernel_size=3,  strides=2),</span><br><span class="line">    BatchNormalization(),</span><br><span class="line"></span><br><span class="line">    Conv2D(filters=6*n_filters, kernel_size=3,  strides=2),</span><br><span class="line">    BatchNormalization(),</span><br><span class="line"></span><br><span class="line">    Flatten(),</span><br><span class="line">    Dense(512),</span><br><span class="line">    Dense(n_outputs, activation=None),</span><br><span class="line">  ])</span><br><span class="line">  return model</span><br><span class="line"></span><br><span class="line">standard_classifier = make_standard_classifier()</span><br></pre></td></tr></table></figure><p>对模型进行训练:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 训练使用的参数集</span><br><span class="line">batch_size = 32</span><br><span class="line">num_epochs = 2  # keep small to run faster  越小运算越快</span><br><span class="line">learning_rate = 5e-4</span><br><span class="line"></span><br><span class="line">optimizer = tf.keras.optimizers.Adam(learning_rate) # define our optimizer</span><br><span class="line">loss_history = mdl.util.LossHistory(smoothing_factor=0.99) # to record loss evolution</span><br><span class="line">plotter = mdl.util.PeriodicPlotter(sec=2, scale=&#x27;semilogy&#x27;)</span><br><span class="line">if hasattr(tqdm, &#x27;_instances&#x27;): tqdm._instances.clear() # clear if it exists</span><br><span class="line"></span><br><span class="line">@tf.function</span><br><span class="line">def standard_train_step(x, y):</span><br><span class="line">  with tf.GradientTape() as tape:</span><br><span class="line">    # 将图像输入模型</span><br><span class="line">    logits = standard_classifier(x) </span><br><span class="line">    # 计算损失</span><br><span class="line">    loss = tf.nn.sigmoid_cross_entropy_with_logits(labels=y, logits=logits) # 目标值 预测值</span><br><span class="line"></span><br><span class="line">  # 反向传播，进行优化</span><br><span class="line">  grads = tape.gradient(loss, standard_classifier.trainable_variables)</span><br><span class="line">  optimizer.apply_gradients(zip(grads, standard_classifier.trainable_variables))</span><br><span class="line">  return loss</span><br><span class="line"></span><br><span class="line"># 进行训练循环</span><br><span class="line">for epoch in range(num_epochs):</span><br><span class="line">  for idx in tqdm(range(loader.get_train_size()//batch_size)):</span><br><span class="line">    # 抓取一批训练数据通过网络传播</span><br><span class="line">    x, y = loader.get_batch(batch_size)</span><br><span class="line">    loss = standard_train_step(x, y)</span><br><span class="line">    # 记录损失并将损失的演变绘制为训练的函数</span><br><span class="line">    loss_history.append(loss.numpy().mean())</span><br><span class="line">    plotter.plot(loss_history.get())</span><br></pre></td></tr></table></figure><p>性能评估：</p><ul><li>此部分使用CelebA数据集进行评估。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 标准CNN网络模型</span><br><span class="line"># 使用CelebA+Imagenet两个数据集的子集进行评估</span><br><span class="line">(batch_x, batch_y) = loader.get_batch(5000)</span><br><span class="line">y_pred_standard = tf.round(tf.nn.sigmoid(standard_classifier.predict(batch_x)))</span><br><span class="line">acc_standard = tf.reduce_mean(tf.cast(tf.equal(batch_y, y_pred_standard), tf.float32))</span><br><span class="line">print(&quot;Standard CNN accuracy on (potentially biased) training set: &#123;:.4f&#125;&quot;.format(acc_standard.numpy()))</span><br></pre></td></tr></table></figure></li><li>使用未知数据集进行评估</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">### 评估在测试数据上的CNN网络模型</span><br><span class="line">standard_classifier_logits = [standard_classifier(np.array(x, dtype=np.float32)) for x in test_faces]</span><br><span class="line">standard_classifier_probs = tf.squeeze(tf.sigmoid(standard_classifier_logits))  # 删除为1的内容</span><br><span class="line"></span><br><span class="line"># Plot the prediction accuracies per demographic 绘制预测准确度</span><br><span class="line">xx = range(len(keys))</span><br><span class="line">yy = standard_classifier_probs.numpy().mean(1)</span><br><span class="line">plt.bar(xx, yy)</span><br><span class="line">plt.xticks(xx, keys)</span><br><span class="line">plt.ylim(max(0,yy.min()-yy.ptp()/2.), yy.max()+yy.ptp()/2.)</span><br><span class="line">plt.title(&quot;Standard classifier predictions&quot;);</span><br></pre></td></tr></table></figure><h3 id="用于学习隐结构-latent-structure-的变分自编码器-VAE"><a href="#用于学习隐结构-latent-structure-的变分自编码器-VAE" class="headerlink" title="用于学习隐结构(latent structure)的变分自编码器(VAE)"></a>用于学习隐结构(latent structure)的变分自编码器(VAE)</h3><p>对于某些训练集中不存在或者存在较少的特征，例如深色皮肤，戴帽子的人等，<br>这些特征可以通过无监督的学习方式，使用VAE进行训练。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 定义VAE损失函数</span><br><span class="line">&#x27;&#x27;&#x27; Function to calculate VAE loss given:</span><br><span class="line">      输入 x, </span><br><span class="line">      重构输出 x_recon, </span><br><span class="line">      编码均值 mu, </span><br><span class="line">      编码标准偏差的log值 logsigma, </span><br><span class="line">      隐损失的权重参数 kl_weight</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">def vae_loss_function(x, x_recon, mu, logsigma, kl_weight=0.0005):</span><br><span class="line">  # 定义隐损失函数:Latent_Loss=0.5*sum(sigmaj+mu^2-1-log(sigmaj))</span><br><span class="line">  latent_loss = 1/2 * tf.reduce_sum(tf.exp(logsigma) + tf.square(mu) - 1 - logsigma, axis=1) #</span><br><span class="line"></span><br><span class="line">  # https://www.tensorflow.org/api_docs/python/tf/math/reduce_mean</span><br><span class="line">  # 定义L1规范的reconstruction loss，即重构损失:reconstruction_Loss=||x-x_recon)||1 计算输入与重构输入的1范数。</span><br><span class="line">  reconstruction_loss = tf.reduce_mean(tf.abs(x - x_recon), axis=(1, 2, 3)) # 即使使用这种axis，可能是按照不同顺序计算维度的平均值，最后得到的是一个数值，即number而非张量</span><br><span class="line"></span><br><span class="line">  # 定义VAE损失:Lvae=c*LatentLoss+Reconstruction_loss</span><br><span class="line">  vae_loss = kl_weight * latent_loss + reconstruction_loss</span><br><span class="line">  return vae_loss</span><br></pre></td></tr></table></figure><p>VAEs重参数计算；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 输入为：隐分布（潜在分布）均值、隐分布的log值</span><br><span class="line"># 输出为：z张量，采样潜在向量</span><br><span class="line">def sampling(z_mean, z_logsigma):</span><br><span class="line">  # By default, random.normal is &quot;standard&quot; (ie. mean=0 and std=1.0)</span><br><span class="line">  batch, latent_dim = z_mean.shape</span><br><span class="line">  epsilon = tf.random.normal(shape=(batch, latent_dim))</span><br><span class="line"></span><br><span class="line">  # 定义重参数化计算：z=mu+exp(0.5*log(sigma))*epsilon</span><br><span class="line">  z = z_mean + tf.math.exp(z_logsigma / 2) * epsilon  # b不知道这里tf.math.exp需不需要加math，因为前面的reduce_mean没有加math</span><br><span class="line">  return z</span><br></pre></td></tr></table></figure><h3 id="DB-VAE-去偏变分自编码器"><a href="#DB-VAE-去偏变分自编码器" class="headerlink" title="DB-VAE 去偏变分自编码器"></a>DB-VAE 去偏变分自编码器</h3><p>将具有更低出现频率的特征增加采样，而高频特征减少采样，达到平均采样的目的。<br>具体流程图如下：<br><img src="L2P2_2.png" alt="2"></p><p>DB损失函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 输入：输入值，重构值，真正的标签值，预测的标签值，隐分布的均值，隐分布标准方差的log值</span><br><span class="line">def debiasing_loss_function(x, x_pred, y, y_logit, mu, logsigma):</span><br><span class="line"></span><br><span class="line">  # 使用VAE损失函数计算VAE损失</span><br><span class="line">  vae_loss = vae_loss_function(x, x_pred, mu, logsigma) # TODO</span><br><span class="line">  </span><br><span class="line">  # sigmoid_cross_entropy_with_logits计算分类损失</span><br><span class="line">  # https://www.tensorflow.org/api_docs/python/tf/nn/sigmoid_cross_entropy_with_logits</span><br><span class="line">  classification_loss = tf.nn.sigmoid_cross_entropy_with_logits(labels=y , logits=y_logit)</span><br><span class="line"></span><br><span class="line">  # 使用训练数据标签创建变量：该变量反映是否是人脸数据的指标</span><br><span class="line">  face_indicator = tf.cast(tf.equal(y, 1), tf.float32)</span><br><span class="line"></span><br><span class="line">  # 定义总损失</span><br><span class="line">  total_loss = tf.reduce_mean(classification_loss + face_indicator * vae_loss)</span><br><span class="line"></span><br><span class="line">  return total_loss, classification_loss</span><br><span class="line">  # 输出：DBVAE的总损失，分类损失</span><br></pre></td></tr></table></figure><p>定义DBVAE的解码器部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 解码器部分</span><br><span class="line">n_filters = 12 # 卷积滤波器的base number，和CNN一样</span><br><span class="line">latent_dim = 100 # 因变量的数量</span><br><span class="line"></span><br><span class="line">def make_face_decoder_network():</span><br><span class="line">  # 定义不同的层</span><br><span class="line">  Conv2DTranspose = functools.partial(tf.keras.layers.Conv2DTranspose, padding=&#x27;same&#x27;, activation=&#x27;relu&#x27;)</span><br><span class="line">  BatchNormalization = tf.keras.layers.BatchNormalization</span><br><span class="line">  Flatten = tf.keras.layers.Flatten</span><br><span class="line">  Dense = functools.partial(tf.keras.layers.Dense, activation=&#x27;relu&#x27;)</span><br><span class="line">  Reshape = tf.keras.layers.Reshape</span><br><span class="line"></span><br><span class="line">  # 使用Sequential构建解码器</span><br><span class="line">  decoder = tf.keras.Sequential([</span><br><span class="line">    # Transform to pre-convolutional generation</span><br><span class="line">    Dense(units=4*4*6*n_filters),  # 4x4 feature maps (with 6N occurances)</span><br><span class="line">    Reshape(target_shape=(4, 4, 6*n_filters)),</span><br><span class="line"></span><br><span class="line">    # Upscaling convolutions (inverse of encoder)</span><br><span class="line">    Conv2DTranspose(filters=4*n_filters, kernel_size=3,  strides=2),</span><br><span class="line">    Conv2DTranspose(filters=2*n_filters, kernel_size=3,  strides=2),</span><br><span class="line">    Conv2DTranspose(filters=1*n_filters, kernel_size=5,  strides=2),</span><br><span class="line">    Conv2DTranspose(filters=3, kernel_size=5,  strides=2),</span><br><span class="line">  ])</span><br><span class="line">  return decoder</span><br></pre></td></tr></table></figure><p>定义和创建DB—VAE网络:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">class DB_VAE(tf.keras.Model):</span><br><span class="line">  def __init__(self, latent_dim):</span><br><span class="line">    super(DB_VAE, self).__init__()</span><br><span class="line">    self.latent_dim = latent_dim</span><br><span class="line"></span><br><span class="line">    # Define the number of outputs for the encoder. Recall that we have </span><br><span class="line">    # `latent_dim` latent variables, as well as a supervised output for the </span><br><span class="line">    # classification.</span><br><span class="line">    # 定义编码器的输出数量。</span><br><span class="line">    num_encoder_dims = 2*self.latent_dim + 1</span><br><span class="line"></span><br><span class="line">    self.encoder = make_standard_classifier(num_encoder_dims)</span><br><span class="line">    self.decoder = make_face_decoder_network()</span><br><span class="line"></span><br><span class="line">  # function to feed images into encoder, encode the latent space, and output</span><br><span class="line">  #   classification probability</span><br><span class="line">  # 定义编码器，输出预测值，mu和logsigma </span><br><span class="line">  def encode(self, x):</span><br><span class="line">    encoder_output = self.encoder(x)   # 编码器输出</span><br><span class="line">    # classification prediction 分类预测值</span><br><span class="line">    y_logit = tf.expand_dims(encoder_output[:, 0], -1)</span><br><span class="line">    # latent variable distribution parameters 因变量分布参数</span><br><span class="line">    z_mean = encoder_output[:, 1:self.latent_dim+1] </span><br><span class="line">    z_logsigma = encoder_output[:, self.latent_dim+1:]</span><br><span class="line">    return y_logit, z_mean, z_logsigma</span><br><span class="line"></span><br><span class="line">  # VAE reparameterization: given a mean and logsigma, sample latent variables</span><br><span class="line">  def reparameterize(self, z_mean, z_logsigma):</span><br><span class="line">    # VAE重参数构建</span><br><span class="line">    z = sampling(z_mean, z_logsigma)</span><br><span class="line">    return z</span><br><span class="line"></span><br><span class="line">  # 解码因空间，输出输入的重建</span><br><span class="line">  def decode(self, z):</span><br><span class="line">    reconstruction = self.decoder(z)  # why???</span><br><span class="line">    return reconstruction</span><br><span class="line"></span><br><span class="line">  # The call function will be used to pass inputs x through the core VAE</span><br><span class="line">  def call(self, x): </span><br><span class="line">    # Encode input to a prediction and latent space</span><br><span class="line">    y_logit, z_mean, z_logsigma = self.encode(x)</span><br><span class="line">    # 重参数化</span><br><span class="line">    z = self.reparameterize(z_mean, z_logsigma)</span><br><span class="line">    # 使用decode重构建</span><br><span class="line">    recon = self.decode(z)</span><br><span class="line">    return y_logit, z_mean, z_logsigma, recon</span><br><span class="line"></span><br><span class="line">  # 预测是否是人脸</span><br><span class="line">  def predict(self, x):</span><br><span class="line">    y_logit, z_mean, z_logsigma = self.encode(x)</span><br><span class="line">    return y_logit</span><br><span class="line"></span><br><span class="line">dbvae = DB_VAE(latent_dim)</span><br></pre></td></tr></table></figure><h3 id="实现DB-VAE"><a href="#实现DB-VAE" class="headerlink" title="实现DB-VAE"></a>实现DB-VAE</h3><p>定义一个辅助函数，输出隐变量均值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def get_latent_mu(images, dbvae, batch_size=1024):</span><br><span class="line">  N = images.shape[0]</span><br><span class="line">  mu = np.zeros((N, latent_dim))</span><br><span class="line">  for start_ind in range(0, N, batch_size):</span><br><span class="line">    end_ind = min(start_ind+batch_size, N+1)</span><br><span class="line">    batch = (images[start_ind:end_ind]).astype(np.float32)/255.</span><br><span class="line">    _, batch_mu, _ = dbvae.encode(batch)</span><br><span class="line">    mu[start_ind:end_ind] = batch_mu</span><br><span class="line">  return mu</span><br></pre></td></tr></table></figure><p>重新定义重采样算法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 根据图像在训练数据中的分布重新计算批次中图像的采样概率的函数</span><br><span class="line">def get_training_sample_probabilities(images, dbvae, bins=10, smoothing_fac=0.001): </span><br><span class="line">    print(&quot;Recomputing the sampling probabilities&quot;)</span><br><span class="line">    mu = get_latent_mu(images, dbvae) # 获得潜在变量均值</span><br><span class="line">    training_sample_p = np.zeros(mu.shape[0]) # 图像采样概率</span><br><span class="line"></span><br><span class="line">    # 考虑每个潜在变量的分布</span><br><span class="line">    for i in range(latent_dim):</span><br><span class="line"></span><br><span class="line">        latent_distribution = mu[:,i]</span><br><span class="line">        # generate a histogram of the latent distribution</span><br><span class="line">        # 潜在分布直方图</span><br><span class="line">        hist_density, bin_edges =  np.histogram(latent_distribution, density=True, bins=bins)</span><br><span class="line"></span><br><span class="line">        # find which latent bin every data sample falls in </span><br><span class="line">        bin_edges[0] = -float(&#x27;inf&#x27;)</span><br><span class="line">        bin_edges[-1] = float(&#x27;inf&#x27;)</span><br><span class="line">        </span><br><span class="line">        # call the digitize function to find which bins in the latent distribution every data sample falls in to</span><br><span class="line">        # https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.digitize.html</span><br><span class="line">        bin_idx = np.digitize(latent_distribution, bin_edges)O</span><br><span class="line"></span><br><span class="line">        # 平滑密度函数</span><br><span class="line">        hist_smoothed_density = hist_density + smoothing_fac</span><br><span class="line">        hist_smoothed_density = hist_smoothed_density / np.sum(hist_smoothed_density)</span><br><span class="line"></span><br><span class="line">        p = 1.0/(hist_smoothed_density[bin_idx-1])# 反转密度函数</span><br><span class="line">        p = p/np.sum(p)     # 将概率归一化</span><br><span class="line">        training_sample_p = np.maximum(p, training_sample_p)  # 选择较大的p值作为采样概率</span><br><span class="line">    training_sample_p /= np.sum(training_sample_p) # 最终归一化</span><br><span class="line"></span><br><span class="line">    return training_sample_p</span><br></pre></td></tr></table></figure><p>训练DB-VAE网络：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"># Hyperparameters</span><br><span class="line">batch_size = 32</span><br><span class="line">learning_rate = 5e-4</span><br><span class="line">latent_dim = 100</span><br><span class="line"></span><br><span class="line"># DB-VAE训练次数增加，因为它更加复杂。</span><br><span class="line">num_epochs = 6  </span><br><span class="line"></span><br><span class="line"># 创建一个DB-VAE对象dbvae，以及一个Adam优化器</span><br><span class="line">dbvae = DB_VAE(100)</span><br><span class="line">optimizer = tf.keras.optimizers.Adam(learning_rate)</span><br><span class="line"></span><br><span class="line"># 使用tf.function使得得以绘制直方图</span><br><span class="line">@tf.function</span><br><span class="line">def debiasing_train_step(x, y):</span><br><span class="line"></span><br><span class="line">  with tf.GradientTape() as tape:</span><br><span class="line">  # 输入x进入dbvae</span><br><span class="line">    y_logit, z_mean, z_logsigma, x_recon = dbvae(x)</span><br><span class="line"></span><br><span class="line">  # 计算损失</span><br><span class="line">    loss, class_loss = debiasing_loss_function(x=x, x_pred=x_recon, y=y, y_logit=y_logit, mu=z_mean, logsigma=z_logsigma) # TODO</span><br><span class="line">  </span><br><span class="line">  # 使用GradientTape.gradient计算梯度</span><br><span class="line">  grads = tape.gradient(loss, dbvae.trainable_variables) </span><br><span class="line"></span><br><span class="line">  # apply gradients to variables 调用梯度到优化器</span><br><span class="line">  optimizer.apply_gradients(zip(grads, dbvae.trainable_variables))</span><br><span class="line">  return loss</span><br><span class="line"></span><br><span class="line"># 加载数据集</span><br><span class="line">all_faces = loader.get_all_train_faces()</span><br><span class="line"></span><br><span class="line">if hasattr(tqdm, &#x27;_instances&#x27;): tqdm._instances.clear() # 存在则清除</span><br><span class="line"></span><br><span class="line"># 训练循环</span><br><span class="line">for i in range(num_epochs):</span><br><span class="line">  IPython.display.clear_output(wait=True)</span><br><span class="line">  print(&quot;Starting epoch &#123;&#125;/&#123;&#125;&quot;.format(i+1, num_epochs))</span><br><span class="line"></span><br><span class="line">  # Recompute data sampling proabilities 重新计算数据采样概率</span><br><span class="line">  p_faces = get_training_sample_probabilities(images=all_faces ,dbvae=dbvae)</span><br><span class="line">  </span><br><span class="line">  # 获取一批训练数据并计算训练步长</span><br><span class="line">  for j in tqdm(range(loader.get_train_size() // batch_size)):</span><br><span class="line">    # load a batch of data</span><br><span class="line">    (x, y) = loader.get_batch(batch_size, p_pos=p_faces)</span><br><span class="line">    # loss optimization</span><br><span class="line">    loss = debiasing_train_step(x, y)</span><br><span class="line">    </span><br><span class="line">    # plot the progress every 200 steps</span><br><span class="line">    if j % 500 == 0: </span><br><span class="line">      mdl.util.plot_sample(x, y, dbvae)</span><br></pre></td></tr></table></figure><p>准确性评估：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dbvae_logits = [dbvae.predict(np.array(x, dtype=np.float32)) for x in test_faces]</span><br><span class="line">dbvae_probs = tf.squeeze(tf.sigmoid(dbvae_logits))</span><br><span class="line"></span><br><span class="line">xx = np.arange(len(keys))</span><br><span class="line">plt.bar(xx, standard_classifier_probs.numpy().mean(1), width=0.2, label=&quot;Standard CNN&quot;)</span><br><span class="line">plt.bar(xx+0.2, dbvae_probs.numpy().mean(1), width=0.2, label=&quot;DB-VAE&quot;)</span><br><span class="line">plt.xticks(xx, keys); </span><br><span class="line">plt.title(&quot;Network predictions on test dataset&quot;)</span><br><span class="line">plt.ylabel(&quot;Probability&quot;); plt.legend(bbox_to_anchor=(1.04,1), loc=&quot;upper left&quot;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《沙丘》记录</title>
      <link href="/2022/11/19/%E3%80%8A%E6%B2%99%E4%B8%98%E3%80%8B%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/11/19/%E3%80%8A%E6%B2%99%E4%B8%98%E3%80%8B%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="《沙丘》"><a href="#《沙丘》" class="headerlink" title="《沙丘》"></a>《沙丘》</h1><p>顺势者为王。柳枝顺从风势，方能枝繁叶茂。终有一天，无数柳枝会形成可以抵抗大风的铜墙铁壁。</p><p>愿望不是鱼，否则世人都会去撒网。</p><p>这世上并没有笔直通向终点的路。攀登一座高山，你需要爬几步来证明这是一座山。站在山顶，你看不到山。</p><p>心怀向往，将使人过于沉溺。此路危机四伏。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dune </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Introduction to Seismology词汇整理</title>
      <link href="/2022/11/18/Introduction-to-Seismology%E8%AF%8D%E6%B1%87%E6%95%B4%E7%90%86/"/>
      <url>/2022/11/18/Introduction-to-Seismology%E8%AF%8D%E6%B1%87%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>Introduction to seismology</p><h1 id="chapter-1-Introduction"><a href="#chapter-1-Introduction" class="headerlink" title="chapter 1 Introduction"></a>chapter 1 Introduction</h1><p>interior 内部，本质</p><p>general 一般，综合</p><p>occupies 占据</p><p>theoretical 理论的</p><p>propagation 传播</p><p>detailed 详细说明</p><p>travel time 旅行时</p><p>fraction 部分</p><p>damping 衰减</p><p>radial 辐射状的</p><p>patterns 模式</p><p>aspects 相位，方面</p><h2 id="1-1-A-brief-history-of-seismology-简短介绍地震学史"><a href="#1-1-A-brief-history-of-seismology-简短介绍地震学史" class="headerlink" title="1.1 A brief history of seismology 简短介绍地震学史"></a>1.1 A brief history of seismology 简短介绍地震学史</h2><p>brief 简短的</p><p>comparatively 相对地</p><p>quantitatively 数量上、分量上</p><p>superstitious 迷信的</p><p>attempt 试图，尝试</p><p>flawed 有缺陷的</p><p>assumed 假定</p><p>concept 观念</p><p>observatories 天文台</p><p>undamped pendulums 无阻尼单摆</p><p>onset time 初动时间</p><p>rotating 旋转</p><p>seismometer 检波器</p><p>viscous 粘性的</p><p>damping 阻尼</p><p>duration 持续</p><p>coil 线，圈状</p><p>tabulations 平板状的</p><p>irreverently 不敬地，这里可能只是指缩写</p><p>tables (travel time tables)标签,走时表</p><p>fluid 流动的，液态的</p><p>versus 对比</p><p>mineralogical 矿物学的</p><p>phase changes 相变</p><p>transition zone 地幔转换带</p><p>composition 构成，成分，混合物</p><p>crystal structure 警惕结构</p><p>dramatically 引人注目的</p><p>gradually 逐步地</p><p>rate 比率，速率……   率</p><p>radius 半径</p><p>constraints 约束</p><p>inertia 惯性</p><p>subsurface 地下的</p><p>patented 专利</p><p>long-duration 长时间持续</p><p>vibrating 震动</p><p>tectonics 构造的</p><p>rigid 坚硬的</p><p>drift （板块）漂移</p><p>adjacent 邻近的</p><p>continental drift 大陆漂移</p><p>subduction zones 俯冲带，消减带（）</p><p>descending slabs 俯冲板块</p><p>margin 边缘</p><p>seismicity 地震活动性</p><p>diffuse 扩散，弥漫，传播</p><p>emerging 新兴的，出现的</p><p>paradigm 范例</p><p>validate 确认，证实</p><p>rim 边界，边</p><p>prominent 显著的，杰出的</p><p>unifying 使统一的</p><p>controversy 争论</p><p>rage 肆虐</p><p>dipping planes 倾斜面</p><p>extend 延伸</p><p>slabs 平板，厚片，这里指俯冲板块</p><p>deform 变形</p><p>ductilely 延展性</p><p>brittle 脆弱的，这里指岩石的脆性</p><p>surge 峰值</p><p>discriminate 分辨，辨别</p><p>well-calibrated 校准，标准化</p><p>overdue 迟到的，这里可能指后至震相</p><p>radiation patterns 辐射花样</p><p>free oscillations （地球的）自由震荡</p><p>peaks 峰值，例如波形的振幅谱的峰值</p><p>evaluating 评估</p><p>derived for 导出，衍生出</p><p>scattered 分散的</p><p>probe 探测器，文中指海盗2号携带的探测器</p><p>Doppler shift of spectral (lines) （光谱的）多普勒频移</p><p>spatial 空间的</p><p>acoustic waves 声波</p><p>trapped 受到限制的</p><p>helioseismology 日震学</p><p>impulsive sources 脉冲震源</p><p>analogous 相似的</p><p>excitation 刺激</p><p>dedicated 专门的</p><p>temporal 现存的，短暂的</p><p>fractional 极小的</p><p>expansion 扩大</p><p>broadband 宽频的，宽频带</p><p>portable 便携的</p><p>centralized 集中地</p><p>archives 档案</p><p>inverting 翻转</p><p>three-dimensional 三维的</p><p>analogy 类比</p><p>tomography 层析</p><p>spectacular 壮观的</p><p>scale 比例，刻度，规模</p><p>sedimentary basins 沉积盆地</p><p>perturbations 微扰</p><p>ring 环</p><p>ascribe 归因于</p><p>lateral 横向的</p><p>pooling 合并，池化</p><p>plumes 地幔柱，热柱</p><p>ponding 堆积</p><p>chamber 内部</p><p>magma 岩浆</p><p>axial magma chamber（AMC） 轴向岩浆库？</p><p>roots 根源</p><p>properties 属性</p><p>mineralogical phase changes 矿物学相变</p><p>the nature of convection within the mantle 地幔对流</p><p>preceding 前面的</p><p>investigation 调查</p><p>elastic rebound theory 弹性回跳理论</p><p>subsequent 随后的</p><p>vast 巨大的</p><p>deformations 变形</p><p>slip 滑倒</p><p>satellite-based 基于卫星的</p><p>Richter scale 里氏震级</p><p>logarithmic 对数的</p><p>readily 容易</p><p>empirical 以观察或者实验为依据</p><p>formulated 构想规划，阐述</p><p>moment magnitude 矩震级</p><p>catastrophic 灾难性的</p><p>devastating 毁灭性的，引人注目的</p><p>tsunami 海啸</p><p>primitive 原始的，粗糙的</p><p>ruptured 破裂的</p><p>joules 焦耳</p><p>rupture zone 断裂带</p><p>aftershocks 余震</p><p>halt 停止</p><h1 id="chapter-2-Stress-and-strain-应力与应变"><a href="#chapter-2-Stress-and-strain-应力与应变" class="headerlink" title="chapter 2 Stress and strain 应力与应变"></a>chapter 2 Stress and strain 应力与应变</h1><p>deformations 形变</p><p>continuum mechanics 连续介质力学</p><p>termed 被称作的术语</p><p>strain 应变</p><p>elastic solids 弹性体</p><h2 id="2-1-The-stress-tensor-应力张量"><a href="#2-1-The-stress-tensor-应力张量" class="headerlink" title="2.1 The stress tensor 应力张量"></a>2.1 The stress tensor 应力张量</h2><h3 id="2-1-1-Example-Computing-the-traction-vector"><a href="#2-1-1-Example-Computing-the-traction-vector" class="headerlink" title="2.1.1 Example:Computing the traction vector"></a>2.1.1 Example:Computing the traction vector</h3><p>infinitesimal 极小的</p><p>plane 平面</p><p>arbitrary 任意的</p><p>orientation 方向</p><p>homogeneous elastic medium 各向同性弹性介质</p><p>specified 指定的</p><p>normal vector 法向向量</p><p>traction 牵引力</p><p>interface 界面</p><p>extensional forces 张应力 （地震学中张应力为正，岩石力学中相反）</p><p>compressional forces 压应力</p><p>exerted 运用</p><p>cube 立方体</p><p>Cartesian coordinate system 笛卡尔坐标系</p><p>normal stress 正应力</p><p>shear stress 切应力</p><p>stress tensor 应力张量</p><p>equilibrium 平衡</p><p>static equilibrium 静平衡</p><p>net rotation 整体旋转</p><p>symmetric 对称，均衡，这里指矩阵对称</p><p>elements 参数</p><p>sufficient 足够</p><p>tetrahedron 四面体，（the Cauchy tetrahedron 柯西四面体）</p><p>linear operator 线性算子（算符）</p><p>symmetry 对应性</p><p>scalars 数量</p><p>zeroth-order tensors 零阶向量</p><p>volume mass 层，体积？？？</p><p>horizontal components 水平分量</p><p>oriented 倾向</p><p>(anti)clockwise （逆）顺时针</p><p>perpendicular 垂直的</p><p>parallel 平行的</p><p>substituting 取代，代入</p><p>normal compression 法向正应力？</p><p>dot products 点积</p><h3 id="2-1-2-principal-axes-of-stress-主应力轴"><a href="#2-1-2-principal-axes-of-stress-主应力轴" class="headerlink" title="2.1.2 principal axes of stress 主应力轴"></a>2.1.2 principal axes of stress 主应力轴</h3><p>identity matrix 单位矩阵</p><p>scalar 标量</p><p>eigenvalue problem 特征值问题</p><p>non-trivial solution 非无效（平凡）解</p><p>determinant 行列式</p><p>vanishes 消失，这里指行列式为0</p><p>cubic equation 三次方程</p><p>eigenvalues 特征值</p><p>corresponding 对应于</p><p>orthogonal 正交的</p><p>principal planes 主应力面</p><p>appendix 附录</p><p>identical to 等同于</p><p>normalized 归一化</p><p>convention 约定</p><p>decomposed 分解</p><p>orientation 方向</p><h3 id="2-1-3-Example-Computing-the-principal-axes-计算主应力轴"><a href="#2-1-3-Example-Computing-the-principal-axes-计算主应力轴" class="headerlink" title="2.1.3 Example: Computing the principal axes 计算主应力轴"></a>2.1.3 Example: Computing the principal axes 计算主应力轴</h3><p>quadratic equation 二次方程</p><p>normalized 归一化</p><p>inpractice 实际上</p><p>subroutine 程序</p><p>script 脚本</p><h3 id="2-1-4-Deviatoric-stress-偏应力"><a href="#2-1-4-Deviatoric-stress-偏应力" class="headerlink" title="2.1.4 Deviatoric stress 偏应力"></a>2.1.4 Deviatoric stress 偏应力</h3><p>hydrostatic pressure 静水压力</p><p>dominated 受控</p><p>mean normal stress 平均正应力，正应力的平均值</p><p>diagonal components 对角分量</p><p>trace 迹，</p><p>Deviatoric stress tensor 偏应力张量</p><p>principal stress axes 主应力轴</p><h3 id="2-1-5-values-for-stress"><a href="#2-1-5-values-for-stress" class="headerlink" title="2.1.5 values for stress"></a>2.1.5 values for stress</h3><p>dyne 达因</p><p>magnitude 数量级</p><p>associated 联合，相关</p><p>mantle convection 地幔对流</p><p>dynamic stresses 动态应力</p><p>brittle part 易碎的，脆弱的</p><p>maintained 保持</p><p>controversy 争议</p><p>active faults 活动断层</p><h2 id="2-2-The-strain-tensor-应变张量"><a href="#2-2-The-strain-tensor-应变张量" class="headerlink" title="2.2 The strain tensor 应变张量"></a>2.2 The strain tensor 应变张量</h2><p>continuum 连续的，这里可能指连续介质</p><p>particles 质点</p><p>Lagrangian description 拉格朗日描述</p><p>most convenient formulation 最简便的方式</p><p>acceleration 加速度</p><p>the displacement field 位移场</p><p>absolute measure 绝对量度，指位移场是位置变化的绝对量度</p><p>local measure 局部量度，指应变是位移场相对变化的量度？</p><p>spatial gradients 空间梯度</p><p>extensional strain 张应变</p><p>string 细绳，线</p><p>uniformly 一致地，相对地</p><p>stretched 拉伸</p><p>Eulerian description 欧拉描述 ？</p><p>expand 展开，例如泰勒展开（expand some_value in a Taylor series）</p><p>expansion 展开式</p><p>higher-order terms 高阶项</p><p>partials 分量，例如空间向量的三个轴向上的分量</p><p>infinitesimal strain theory 无穷小应变理论？</p><p>valid 有根据的，有效的</p><p>rigid rotations 缸体旋转</p><p>the off-diagonal elements 对角线外的元素，这里指矩阵对角线外的量</p><p>exaggerated 夸大的</p><p>radians 弧度，如pi&#x2F;2</p><p>dilatation 扩张，膨胀</p><p>extensions 增加的部分</p><p>divergence 散度</p><p>curl 旋度</p><p>analogous 相似的，可比拟的</p><p>express 陈述，表达</p><p>index notation 索引表示法</p><p>notation 记号</p><h3 id="2-2-1-values-for-strain"><a href="#2-2-1-values-for-strain" class="headerlink" title="2.2.1 values for strain"></a>2.2.1 values for strain</h3><p>dimensionless 无量纲的</p><p>far field 远场</p><h3 id="2-2-2-Example-Computing-strain-for-a-seismic-wave"><a href="#2-2-2-Example-Computing-strain-for-a-seismic-wave" class="headerlink" title="2.2.2 Example:Computing strain for a seismic wave"></a>2.2.2 Example:Computing strain for a seismic wave</h3><p>plane shear wave 平面剪切波</p><p>partial derivative 偏导数</p><h2 id="2-3-The-linear-stress-strain-relationship-线性应力应变关系"><a href="#2-3-The-linear-stress-strain-relationship-线性应力应变关系" class="headerlink" title="2.3 The linear stress-strain relationship 线性应力应变关系"></a>2.3 The linear stress-strain relationship 线性应力应变关系</h2><p>constitutive relationship 本构关系(物理关系)</p><p>general 一般的，广义（定律）</p><p>elastic tensor 弹性张量</p><p>summation convention 求和约定</p><p>the generalized Hooke’s law 广义胡克定律</p><p>attenuation 衰减</p><p>deforms 形变</p><p>obeying 服从，服从某个定律</p><p>soils 土壤，例如风化壳</p><p>fracturing 破裂</p><p>incremental stresses 应力增量，如外力造成方程非齐次</p><p>in terms of 依据，按照</p><p>fourth-order tensor 四阶张量</p><p>specify 列举，说明</p><p>first-order approximation 一阶近似</p><p>Lame parameters 拉梅常数</p><p>Kronecker delta 克罗内克符号（δij &#x3D; 1 if i&#x3D;j or δij &#x3D; 0）</p><p>shear modulus 剪切模量</p><p>resistance 抵抗，耐性，这里可能指抗剪性</p><p>Young’s modulus 杨氏模量E</p><p>cylinder 圆柱体</p><p>Bulk modulus 体积模量</p><p>incompressibility 不可压缩性</p><p>Poisson’s ratio 泊松比</p><p>Poisson solid 泊松体</p><p>vice versa 反之亦然</p><h3 id="2-3-1-Units-for-elastic-moduli"><a href="#2-3-1-Units-for-elastic-moduli" class="headerlink" title="2.3.1 Units for elastic moduli"></a>2.3.1 Units for elastic moduli</h3><p>elastic moduli 弹性模量系数</p><p>squared 平方</p><h1 id="chapter-3-The-seismic-wave-euqation-地震波动方程"><a href="#chapter-3-The-seismic-wave-euqation-地震波动方程" class="headerlink" title="chapter 3 The seismic wave euqation 地震波动方程"></a>chapter 3 The seismic wave euqation 地震波动方程</h1><p>uniform 一致的，统一的<br>derive 得到<br>calculus 微积分<br>intrinsic attenuation 吸收衰减</p><h2 id="3-1-Introduction-The-wave-equation-波动方程简介"><a href="#3-1-Introduction-The-wave-equation-波动方程简介" class="headerlink" title="3.1 Introduction: The wave equation 波动方程简介"></a>3.1 Introduction: The wave equation 波动方程简介</h2><p>general solution 通解<br>arbitrary 任意的<br>pipe 管<br>properties  属性<br>hyperbolic equation 双曲方程<br>linear partial differential equations 线性偏微分方程<br>sharp features 尖锐特征 ？？？<br>reflect off 反射<br>diffusion equation 扩散方程<br>initial conditions 初始条件<br>analytical solution 解析解<br>numerical solution 数值解<br>pulses 脉冲<br>decomposed 分解<br>harmonic wave solutions 简谐波解<br>vibrating string 振荡的弦<br>analogies 类推</p><h2 id="3-2-The-momentum-equation-动量方程"><a href="#3-2-The-momentum-equation-动量方程" class="headerlink" title="3.2 The momentum equation 动量方程"></a>3.2 The momentum equation 动量方程</h2><p>time-dependent phenomena 时间相关现象<br>coordinate 使协调，调和<br>homogeneous stress field 均匀应力场<br>net force 合力<br>spatial gradients 空间梯度<br>summation convention 求和约定<br>divergence 散度<br>proportion 均衡<br>second time derivative  二阶时间导数<br>derivative 微商<br>substituting 联立<br>fundamental equation 基本方程<br>equation of motion 运动方程<br>gravity term 重力项<br>source term 源项<br>neglected 被忽视的<br>homogeneous equation of motion 齐次运动（平衡）方程<br>synthetic seismograms 合成地震记录<br>static equilibrium equation 静力平衡方程<br>geodesy 测地学 ？？？</p><h2 id="3-3-The-seismic-wave-euqation-地震波动方程"><a href="#3-3-The-seismic-wave-euqation-地震波动方程" class="headerlink" title="3.3 The seismic wave euqation 地震波动方程"></a>3.3 The seismic wave euqation 地震波动方程</h2><p>small-deformation 小变形<br>advection terms 对流项<br>coupled set of equations 耦合方程组<br>finite-difference techniques 有限差分<br>numerical differencing 数值差分<br>temporal derivatives 时间导数<br>computationally intensive 计算密集型<br>switch back and forth 来回切换？？？<br>identity 一致性，恒等式<br>transmission coefficients 透射系数<br>reflection coefficients 反射系数<br>thin layers 薄层<br>homogeneous-layer methods 均匀层法???<br>ray-theorelical methods 射线理论<br>neglected 忽略</p><h3 id="3-3-1-Potentials-势、位"><a href="#3-3-1-Potentials-势、位" class="headerlink" title="3.3.1 Potentials 势、位"></a>3.3.1 Potentials 势、位</h3><p>scalar potential 标量位<br>vector potential 矢量位<br>satisfy 服从，符合</p><h2 id="3-4-Plane-waves-平面波"><a href="#3-4-Plane-waves-平面波" class="headerlink" title="3.4 Plane waves 平面波"></a>3.4 Plane waves 平面波</h2><p>orthogonal 正交的<br>polarization 极性、极化<br>discrete pulse 离散脉冲<br>planar wavefrone 二维波前面<br>slowness vector 慢度矢量<br>reciprocal 互相给予的，正交的<br>frequency domain 频域<br>angular frequency 角频率<br>wavenumber vector 波数向量<br>barmonic waves 简谐波<br>monochromatic plane wave 简谐平面波<br>harmonic or steady-state plane wave solution 谐波&#x2F;稳态平面波解</p><h3 id="3-4-1-Example-Harmonic-plane-wave-equation-简谐平面波方程"><a href="#3-4-1-Example-Harmonic-plane-wave-equation-简谐平面波方程" class="headerlink" title="3.4.1 Example: Harmonic plane wave equation 简谐平面波方程"></a>3.4.1 Example: Harmonic plane wave equation 简谐平面波方程</h3><p>polarized 极化，偏振</p><h2 id="3-5-Polarizations-of-P-and-S-waves-P、S波极性"><a href="#3-5-Polarizations-of-P-and-S-waves-P、S波极性" class="headerlink" title="3.5 Polarizations of P and S waves P、S波极性"></a>3.5 Polarizations of P and S waves P、S波极性</h2><p>minus sign 负号<br>corresponds to 指示<br>plus sign 正号<br>denotes 表示<br>spatial derivatives 空间导数<br>longitudinal 经度，纵向的<br>curl-free 保守？无旋<br>compressional 压缩<br>dilatational 膨胀<br>bulk 体积<br>hence 因此，今后</p><h2 id="3-6-Spherical-waves-球面波"><a href="#3-6-Spherical-waves-球面波" class="headerlink" title="3.6 Spherical waves 球面波"></a>3.6 Spherical waves 球面波</h2><p>spherical coordinates 球坐标系<br>Laplacian operator 拉普拉斯算子<br>inward 内部的，向内的<br>geometrical 几何学的<br>inhomogeneous wave equation 不均匀波动方程<br>source-time function 震源时间函数</p><h2 id="3-7-Methods-for-computing-synthetic-seismograms-合成地震记录方法"><a href="#3-7-Methods-for-computing-synthetic-seismograms-合成地震记录方法" class="headerlink" title="3.7 Methods for computing synthetic seismograms 合成地震记录方法"></a>3.7 Methods for computing synthetic seismograms 合成地震记录方法</h2><p>implementing 使……生效<br>specification 说明<br>in principle 原理上，理论上<br>head waves 首波<br>diffracted waves 绕射波<br>coupling 耦合波<br>finite difference schemes 有限差分法<br>inadequate 不适当的，不充分的<br>rupture 断裂<br>wiggle 摆动<br>coda 尾波<br>statistically 统计上的<br>envelope function 包络函数<br>superposition principle 叠加原理<br>by far 目前为止<br>propogation effects 传播效应<br>grossly 非常<br>elastodynamic 弹性动力学<br>Green’s function 格林函数<br>elastic properties 弹性属性<br>boundary conditions 边界条件<br>arbitrary complexity 任意复杂度<br>generalized ray theory 广义射线理论<br>wavenumber integration 波数积分？？？<br>be restricted to 仅限于<br>standing waves (eigenvectors) 驻波 特征向量<br>generalization to 泛化为</p><h2 id="3-8-The-future-of-seismology-地震学前景"><a href="#3-8-The-future-of-seismology-地震学前景" class="headerlink" title="3.8 The future of seismology 地震学前景"></a>3.8 The future of seismology 地震学前景</h2><p>impractical 不切实际的<br>wavefield 波场<br>snapshot 快照<br>sharp interfaces 明显分界面，尖锐分界面<br>irregular topography 不规则地形<br>meshing scheme 网格划分方案<br>temporal 现存的<br>simple first-order differencing schemes 简单一阶差分格式<br>staggered grid 交错网格<br>rule of thumb 经验法则<br>spans 跨越<br>pseudo-spectral methods 伪谱？？？<br>normal incidence 法向入射<br>spectral element method 谱元法<br>explicitly 明白、明确地<br>clusters 群<br>surface topography 地表形态（构造）<br>ellipticity 椭率<br>rotation 自转<br>cited 引用<br>sedimentary basins 沉积盆地<br>cubical 立方体<br>computer-intensive 集中的<br>exploit 开发</p><h2 id="3-9-Equations-for-2-D-isotropic-finite-differences-二维各向同性有限差分方程"><a href="#3-9-Equations-for-2-D-isotropic-finite-differences-二维各向同性有限差分方程" class="headerlink" title="3.9 Equations for 2-D isotropic finite differences 二维各向同性有限差分方程"></a>3.9 Equations for 2-D isotropic finite differences 二维各向同性有限差分方程</h2><p>equivalent 等同的<br>double time derivative 二阶时间导数<br>simultaneous equations 联立方程组<br>centered finite-difference operates 中心有限差分算子<br>central difference formula 中心差分公式<br>staggered-grid approach 交错网格法<br>axi-symmetric 轴对称</p><h1 id="Chapter-4-Ray-theory-Travel-times-射线理论：走时"><a href="#Chapter-4-Ray-theory-Travel-times-射线理论：走时" class="headerlink" title="Chapter 4 Ray theory: Travel times 射线理论：走时"></a>Chapter 4 Ray theory: Travel times 射线理论：走时</h1><p>analogous 近似，相似的<br>optical ray theory 光学射线理论<br>straightforward 高效的，简单<br>timing 测时，定时<br>eikonal equation 程函方程</p><h2 id="4-1-Snell’s-law-斯奈尔定律"><a href="#4-1-Snell’s-law-斯奈尔定律" class="headerlink" title="4.1 Snell’s law 斯奈尔定律"></a>4.1 Snell’s law 斯奈尔定律</h2><p>intersects 相交<br>incidence angle 入射角<br>ray parameter 射线参数<br>horizontal slowness 水平慢度<br>evenly spaced times 均匀间隔时间<br>Fermat’s principle 费马原理<br>variational calculus 变分微分学</p><h2 id="4-2-Ray-paths-for-laterally-homogeneous-models-横向各向同性模型射线路径"><a href="#4-2-Ray-paths-for-laterally-homogeneous-models-横向各向同性模型射线路径" class="headerlink" title="4.2 Ray paths for laterally homogeneous models  横向各向同性模型射线路径"></a>4.2 Ray paths for laterally homogeneous models  横向各向同性模型射线路径</h2><p>takeoff angle 离源角<br>turning point 转折点，回折点，θ为90度的情况。<br>steeply dipping 陡斜，这里指界面倾斜角大。<br>travel time curve 走时曲线<br>chain rule 链式法则<br>imaginary 虚数</p><h3 id="4-2-1-Example-Computing-X-p-and-T-p-计算X-p-和T-p"><a href="#4-2-1-Example-Computing-X-p-and-T-p-计算X-p-和T-p" class="headerlink" title="4.2.1 Example: Computing X(p) and T(p) 计算X(p)和T(p)"></a>4.2.1 Example: Computing X(p) and T(p) 计算X(p)和T(p)</h3><p>surface-to-surface distance 地表入射到地表出射的震中距？？？</p><h3 id="4-2-2-Ray-tracing-through-velocity-gradients-速度梯度射线追踪"><a href="#4-2-2-Ray-tracing-through-velocity-gradients-速度梯度射线追踪" class="headerlink" title="4.2.2 Ray tracing through velocity gradients 速度梯度射线追踪"></a>4.2.2 Ray tracing through velocity gradients 速度梯度射线追踪</h3><p>appropriate interporation function 合适的_插值函数</p><h2 id="4-3-Travel-time-curves-and-delay-times-走时曲线和延迟时间"><a href="#4-3-Travel-time-curves-and-delay-times-走时曲线和延迟时间" class="headerlink" title="4.3 Travel time curves and delay times 走时曲线和延迟时间"></a>4.3 Travel time curves and delay times 走时曲线和延迟时间</h2><p>prograde 顺进的<br>retrograde 逆进的<br>caustics 焦散点<br>infinite amplitude 无限振幅<br>unraveled 解开<br>stationary points 驻点<br>maxima 最大数<br>minima 最小值</p><h3 id="4-3-1-Reduced-velocity-折合速度？？？"><a href="#4-3-1-Reduced-velocity-折合速度？？？" class="headerlink" title="4.3.1 Reduced velocity 折合速度？？？"></a>4.3.1 Reduced velocity 折合速度？？？</h3><h3 id="4-3-2-The-τ-p-function"><a href="#4-3-2-The-τ-p-function" class="headerlink" title="4.3.2 The τ(p) function"></a>4.3.2 The τ(p) function</h3><p>delay time 延迟时间<br>intercept 截距<br>monotonically decreasing 单调递减<br>prograde branch 顺进分支<br>retrograde branch 逆进分支<br>concave upward 上凹的<br>concave downward 下凹的</p><h2 id="4-4-Low-velocity-zones-低速带"><a href="#4-4-Low-velocity-zones-低速带" class="headerlink" title="4.4 Low-velocity zones 低速带"></a>4.4 Low-velocity zones 低速带</h2><p>encounter 遇到<br>asthenosphere 岩石圈<br>orginating at 起源于<br>shadow zone 影区<br>trap 捕捉<br>related phenomenon 相关现象<br>wave guide ???导波？？？波导？？？</p><h2 id="4-5-Summary-of-1-D-ray-tracing-equations-一维射线追踪方程"><a href="#4-5-Summary-of-1-D-ray-tracing-equations-一维射线追踪方程" class="headerlink" title="4.5 Summary of 1-D ray tracing equations 一维射线追踪方程"></a>4.5 Summary of 1-D ray tracing equations 一维射线追踪方程</h2><p>laterally homogeneous 横向各向同性<br>integral expressions 积分表达式<br>demonstrate 证明，演示</p><h2 id="4-6-Spherical-Earth-ray-tracing-球状地球模型射线追踪"><a href="#4-6-Spherical-Earth-ray-tracing-球状地球模型射线追踪" class="headerlink" title="4.6 Spherical-Earth ray tracing 球状地球模型射线追踪"></a>4.6 Spherical-Earth ray tracing 球状地球模型射线追踪</h2><p>the Earth-flattening transformation 地球层状转换<br>modify 修改<br>radians 弧度</p><h2 id="4-7-The-Earth-flattening-transformation"><a href="#4-7-The-Earth-flattening-transformation" class="headerlink" title="4.7 The Earth-flattening transformation"></a>4.7 The Earth-flattening transformation</h2><p>derivations 导数<br>curvature 弯曲部分<br>modification 限制<br>circumference 大圆弧（周长）<br>dramatic 引人注意的<br>singularity 奇点</p><h2 id="4-8-Three-dimensional-ray-tracing-三维射线追踪"><a href="#4-8-Three-dimensional-ray-tracing-三维射线追踪" class="headerlink" title="4.8 Three-dimensional ray tracing 三维射线追踪"></a>4.8 Three-dimensional ray tracing 三维射线追踪</h2><p>spatial 空间的<br>theoretical 理论的</p><h2 id="4-9-Ray-nomenclature-射线命名法"><a href="#4-9-Ray-nomenclature-射线命名法" class="headerlink" title="4.9 Ray nomenclature 射线命名法"></a>4.9 Ray nomenclature 射线命名法</h2><p>seismic phases 震相</p><h3 id="4-9-1-Crustal-phases-地壳震相"><a href="#4-9-1-Crustal-phases-地壳震相" class="headerlink" title="4.9.1 Crustal phases 地壳震相"></a>4.9.1 Crustal phases 地壳震相</h3><p>reflecting off 反射<br>mimics 模仿<br>converted phases 转换波震相</p><h3 id="4-9-2-Whole-Earth-phases-全球震相"><a href="#4-9-2-Whole-Earth-phases-全球震相" class="headerlink" title="4.9.2 Whole Earth phases 全球震相"></a>4.9.2 Whole Earth phases 全球震相</h3><p>fluid outer core 液态外核<br>abbreviations 简写<br>depth phase 深度震相</p><h3 id="4-9-3-PKJKP-The-Holy-Grail-of-body-wave-seismology-体波地震学的圣杯：PKJKP震相"><a href="#4-9-3-PKJKP-The-Holy-Grail-of-body-wave-seismology-体波地震学的圣杯：PKJKP震相" class="headerlink" title="4.9.3 PKJKP: The Holy Grail of body wave seismology 体波地震学的圣杯：PKJKP震相"></a>4.9.3 PKJKP: The Holy Grail of body wave seismology 体波地震学的圣杯：PKJKP震相</h3><p>potentially 潜在地，可能地<br>routinely 通常地<br>puzzling 使……迷惑</p><h2 id="4-10-Global-body-wave-observations-全球体波监测"><a href="#4-10-Global-body-wave-observations-全球体波监测" class="headerlink" title="4.10 Global body-wave observations 全球体波监测"></a>4.10 Global body-wave observations 全球体波监测</h2><p>radial component 径向分量<br>transverse component 切向分量<br>vertical component 垂向分量<br>azimuth 方位角<br>arrival time 到时<br>picking the arrival 标定到时<br>JB travel time tables JB走时表<br>sparsely 稀疏的<br>procedure 程序，手续，步骤<br>tabulated 制成表格</p><h1 id="Chapter-5-Inversion-of-travel-time-data-走时反演"><a href="#Chapter-5-Inversion-of-travel-time-data-走时反演" class="headerlink" title="Chapter 5 Inversion of travel time data 走时反演"></a>Chapter 5 Inversion of travel time data 走时反演</h1><p>tractable 易于处理的<br>residual 残余的<br>feasible 可行的<br>precisely 精确地</p><h2 id="5-1-One-dimensional-velocity-inversion-一维速度反演"><a href="#5-1-One-dimensional-velocity-inversion-一维速度反演" class="headerlink" title="5.1 One-dimensional velocity inversion 一维速度反演"></a>5.1 One-dimensional velocity inversion 一维速度反演</h2><p>equivalent 等效的<br>initial velocity 初速度<br>frictionless 无摩擦<br>rotational inertia 转动惯量<br>shuffled arbitrarily 任意打乱<br>interpolated 内插<br>compatible 相容的<br>self-contradictory 自相矛盾的<br>precisely 精确的</p><h2 id="5-2-Straight-line-fitting-直线拟合"><a href="#5-2-Straight-line-fitting-直线拟合" class="headerlink" title="5.2 Straight-line fitting 直线拟合"></a>5.2 Straight-line fitting 直线拟合</h2><p>extensively 广泛地<br>layer-cake velocity model 层状速度模型<br>sediments 沉积物</p><h3 id="5-2-1-Example-Solving-for-a-layer-cake-model-层状速度模型解"><a href="#5-2-1-Example-Solving-for-a-layer-cake-model-层状速度模型解" class="headerlink" title="5.2.1 Example: Solving for a layer-cake model 层状速度模型解"></a>5.2.1 Example: Solving for a layer-cake model 层状速度模型解</h3><p>y-intercepts y轴截距</p><h3 id="5-2-2-Other-ways-to-fit-the-T-X-curve-其他拟合T-X-曲线的方法"><a href="#5-2-2-Other-ways-to-fit-the-T-X-curve-其他拟合T-X-曲线的方法" class="headerlink" title="5.2.2 Other ways to fit the T(X) curve 其他拟合T(X)曲线的方法"></a>5.2.2 Other ways to fit the T(X) curve 其他拟合T(X)曲线的方法</h3><p>least squares 最小平方<br>discrete 离散<br>patches 补丁，<br>unique solution 唯一解<br>polynomial 多项式<br>spline representation 样条表示<br>uniqueness 唯一性</p><h2 id="5-3-τ-p-Inversion-τ-p-反演"><a href="#5-3-τ-p-Inversion-τ-p-反演" class="headerlink" title="5.3 τ(p) Inversion τ(p)反演"></a>5.3 τ(p) Inversion τ(p)反演</h2><p>integration 结合，整合<br>monotonically 单调<br>integrate 积分<br>vanish 消去<br>overdetermined problem 超定问题<br>underdetermined problem 欠定问题</p><h3 id="5-3-1-Example-The-layer-cake-model-revisited-层状介质模型再现"><a href="#5-3-1-Example-The-layer-cake-model-revisited-层状介质模型再现" class="headerlink" title="5.3.1 Example: The layer-cake model revisited 层状介质模型再现"></a>5.3.1 Example: The layer-cake model revisited 层状介质模型再现</h3><h3 id="5-3-2-Obtaining-τ-p-constraints-获取τ-p-约束"><a href="#5-3-2-Obtaining-τ-p-constraints-获取τ-p-约束" class="headerlink" title="5.3.2 Obtaining τ(p) constraints 获取τ(p)约束"></a>5.3.2 Obtaining τ(p) constraints 获取τ(p)约束</h3><p>trivial 不重要的<br>vice versa 反之亦然<br>intersection 交叉点<br>slant stack 倾斜叠加？？？<br>coherent 连贯的，相干的<br>bounds 界线<br>edge effects 边缘效应？？？<br>circumstances 条件，环境<br>smoothness constraints 平滑约束</p><h2 id="5-4-Linear-programming-and-regularization-methods-线性规划与正则化方法"><a href="#5-4-Linear-programming-and-regularization-methods-线性规划与正则化方法" class="headerlink" title="5.4 Linear programming and regularization methods 线性规划与正则化方法"></a>5.4 Linear programming and regularization methods 线性规划与正则化方法</h2><p>conservative 保守的<br>formulated 规划出<br>corridor 通道<br>extremal 极值<br>crude 粗糙的<br>finer 好的，出色的<br>outliers 异常值<br>statistical 统计学的<br>regularization 正则化<br>roughness 粗糙<br>extremal bound models 极值边界模型<br>a-priori 先验的<br>caution 警告，小心</p><h2 id="5-5-Summary-One-dimensional-velocity-inversion-总结：一维速度反演"><a href="#5-5-Summary-One-dimensional-velocity-inversion-总结：一维速度反演" class="headerlink" title="5.5 Summary: One-dimensional velocity inversion 总结：一维速度反演"></a>5.5 Summary: One-dimensional velocity inversion 总结：一维速度反演</h2><p>encounter 遇到<br>inherently non-unique 固有非唯一性<br>diagnostic 松懈地<br>sophisticated 精密的，尖端的<br>doom 判定</p><h2 id="5-6-Three-dimensional-velocity-inversion-三维速度反演"><a href="#5-6-Three-dimensional-velocity-inversion-三维速度反演" class="headerlink" title="5.6 Three-dimensional velocity inversion 三维速度反演"></a>5.6 Three-dimensional velocity inversion 三维速度反演</h2><p>scatter 散开<br>residual 剩余的<br>histogram 柱状图<br>timing 定时，标定地震波震相在地震图上的时间</p><h3 id="5-6-1-Setting-up-the-tomography-problem-设置断层扫描（层析成像）问题"><a href="#5-6-1-Setting-up-the-tomography-problem-设置断层扫描（层析成像）问题" class="headerlink" title="5.6.1 Setting up the tomography problem 设置断层扫描（层析成像）问题"></a>5.6.1 Setting up the tomography problem 设置断层扫描（层析成像）问题</h3><p>polynomial functions 多项式函数<br>travel time residual 剩余旅行时<br>two-point ray tracing problem 两点射线追踪问题<br>non-trivial task 非平凡问题？？？<br>converge 收敛<br>ray bending 射线弯曲<br>precisely 精确的<br>suffice 使满足<br>substantial chore 实质性工作<br>fractional 微小的<br>unitless 无量纲<br>sparse 稀疏<br>invariably singular 总是单数<br>ill-conditioned 病态的<br>linear algebra 线性代数<br>singular value decomposition(SVD) 奇异值分解<br>ill-posed 不适定的（病态的）—–和conditioned有何区别？<br>damped least squares 阻尼最小二乘法<br>Laplacian operator 拉普拉斯算子<br>interpolate 内插<br>extrapolate 推算<br>suspect 不可信的<br>plagued 困扰<br>anomalous 不规则的<br>norm 规范</p><h3 id="5-6-2-Solving-the-tomography-problem-层析成像问题求解"><a href="#5-6-2-Solving-the-tomography-problem-层析成像问题求解" class="headerlink" title="5.6.2 Solving the tomography problem 层析成像问题求解"></a>5.6.2 Solving the tomography problem 层析成像问题求解</h3><p>Gauss reduction 高斯消去法<br>covariance matrices 协方差矩阵<br>iterative 迭代<br>conjugate gradient 共轭梯度<br>row action methods 行处理法<br>checkerboard test 棋盘测试？<br>smearing 污点<br>indication 象征，迹象<br>contaminated 受污染的<br>unambiguously 明白地、不含糊地<br>obstacle 障碍</p><h3 id="5-6-3-Tomography-complications-成像问题"><a href="#5-6-3-Tomography-complications-成像问题" class="headerlink" title="5.6.3 Tomography complications 成像问题"></a>5.6.3 Tomography complications 成像问题</h3><p>precisely 精确地<br>joint hypocenter and velocity inversions(JHV) 联合震源速度反演<br>ambiguity 歧义<br>station correction 台站校正<br>unevenly 不均衡、不稳定</p><h3 id="5-6-4-Finite-frequency-tomography-有限频率层析成像"><a href="#5-6-4-Finite-frequency-tomography-有限频率层析成像" class="headerlink" title="5.6.4 Finite frequency tomography 有限频率层析成像"></a>5.6.4 Finite frequency tomography 有限频率层析成像</h3><p>theoretical 理论的<br>kernels 核心<br>doughnut 圆环图<br>counterintuitive 违反直觉的<br>off-ray-path structure 在射线路径之外的结构<br>sophisticated 精密的</p><h2 id="5-7-Earthquake-location-地震定位"><a href="#5-7-Earthquake-location-地震定位" class="headerlink" title="5.7 Earthquake location 地震定位"></a>5.7 Earthquake location 地震定位</h2><p>duration 持续<br>be confused with 混淆<br>centroid 质心<br>exception 例外<br>single-step approach 单步逼近<br>variance reduction 方差衰减<br>degrees of freedom 自由度<br>instances 例子<br>brute force 强力<br>grid search 网格搜索<br>vicinity 临近的<br>deviation 背离，偏差，微分？<br>confidence limits 置信区间（概率论）<br>ellipse 椭圆<br>rejected 不合格<br>master event methods 主事件法<br>trades off 相互抵消<br>azimuthal 方位角的<br>dramatically 显著地<br>compensated 校正，补偿<br>substantially 本质上<br>differential times 差分时间<br>rule of thumb 经验法则</p><h3 id="5-7-1-Iterative-location-methods-迭代定位法"><a href="#5-7-1-Iterative-location-methods-迭代定位法" class="headerlink" title="5.7.1 Iterative location methods 迭代定位法"></a>5.7.1 Iterative location methods 迭代定位法</h3><p>unfeasible 难以实施的<br>converges 聚合，趋于相同</p><h3 id="5-7-2-Relative-event-location-methods-相对地震定位方法"><a href="#5-7-2-Relative-event-location-methods-相对地震定位方法" class="headerlink" title="5.7.2 Relative event location methods 相对地震定位方法"></a>5.7.2 Relative event location methods 相对地震定位方法</h3><p>dominated 受控的<br>master event 主事件<br>cluster 聚类，几种<br>hypocentroidal decomposition 震源分解<br>double-difference location algorithm 双差地震定位法<br>source-specific station term(SSST) 源台站校正定位<br>delineation 描绘</p><h1 id="Chapter-6-Ray-theory-Amplitude-and-phase-射线理论：振幅和相位"><a href="#Chapter-6-Ray-theory-Amplitude-and-phase-射线理论：振幅和相位" class="headerlink" title="Chapter 6 Ray theory: Amplitude and phase 射线理论：振幅和相位"></a>Chapter 6 Ray theory: Amplitude and phase 射线理论：振幅和相位</h1><p>merits 优点<br>intrinsic 固有的</p><h2 id="6-1-Energy-in-seismic-waves-地震波中的能量"><a href="#6-1-Energy-in-seismic-waves-地震波中的能量" class="headerlink" title="6.1 Energy in seismic waves 地震波中的能量"></a>6.1 Energy in seismic waves 地震波中的能量</h2><p>kinetic 运动学的<br>strain energy 应变能<br>thermodynamic 热力学<br>restoring force 恢复力<br>bedrock 基底</p><h2 id="6-2-Geometrical-spreading-in-1-D-velocity-models-一维速度模型几何传播"><a href="#6-2-Geometrical-spreading-in-1-D-velocity-models-一维速度模型几何传播" class="headerlink" title="6.2 Geometrical spreading in 1-D velocity models 一维速度模型几何传播"></a>6.2 Geometrical spreading in 1-D velocity models 一维速度模型几何传播</h2><p>in a band 处于困境？<br>conservation 保存，保护<br>impedance differences 阻抗差<br>catastrophe 突变<br>cusps 尖点<br>infinitely high frequency 无限高频</p><h2 id="6-3-Reflection-and-transmission-coefficients-反射、透射系数"><a href="#6-3-Reflection-and-transmission-coefficients-反射、透射系数" class="headerlink" title="6.3 Reflection and transmission coefficients 反射、透射系数"></a>6.3 Reflection and transmission coefficients 反射、透射系数</h2><p>restricted 限制<br>vertically stratified medium 垂直层状介质<br>polarized waves 偏振波</p><h3 id="6-3-1-SH-wave-reflection-and-transmission-coefficients-SH波反射、透射系数"><a href="#6-3-1-SH-wave-reflection-and-transmission-coefficients-SH波反射、透射系数" class="headerlink" title="6.3.1 SH-wave reflection and transmission coefficients SH波反射、透射系数"></a>6.3.1 SH-wave reflection and transmission coefficients SH波反射、透射系数</h3><p>scattered waves 散射波<br>striking 入射？</p><h3 id="6-3-2-Example-Computing-SH-coefficients-示例：计算SH系数"><a href="#6-3-2-Example-Computing-SH-coefficients-示例：计算SH系数" class="headerlink" title="6.3.2 Example: Computing SH coefficients 示例：计算SH系数"></a>6.3.2 Example: Computing SH coefficients 示例：计算SH系数</h3><h3 id="6-3-3-Vertical-incidence-coefficients-垂直入射系数"><a href="#6-3-3-Vertical-incidence-coefficients-垂直入射系数" class="headerlink" title="6.3.3 Vertical incidence coefficients 垂直入射系数"></a>6.3.3 Vertical incidence coefficients 垂直入射系数</h3><p>distinction 区别<br>highlights 强调，突出<br>particle motions 质点位移</p><h3 id="6-3-4-Energy-normalized-coefficients-能量归一化系数"><a href="#6-3-4-Energy-normalized-coefficients-能量归一化系数" class="headerlink" title="6.3.4 Energy-normalized coefficients 能量归一化系数"></a>6.3.4 Energy-normalized coefficients 能量归一化系数</h3><p>energy-normalized reflection&#x2F;transmission coefficient 能量定义的反射&#x2F;透射系数</p><h3 id="6-3-5-Dependence-on-ray-angle-射线入射角相关性"><a href="#6-3-5-Dependence-on-ray-angle-射线入射角相关性" class="headerlink" title="6.3.5 Dependence on ray angle 射线入射角相关性"></a>6.3.5 Dependence on ray angle 射线入射角相关性</h3><p>unaltered 未改变的<br>critical angle 临界角<br>precritical reflections 预临界反射<br>inhomogeneous waves 不均匀平面波<br>evanescent waves 倏逝波<br>oscillatory 振荡的，摆动的<br>total internal reflection 完全内反射<br>postcritical angles 超临界角<br>pulse distortion 脉冲失真<br>phase advance 相位超前<br>phase shift 相移<br>retrograde branch 倒退的</p><h2 id="6-4-Turning-points-and-Hilbert-transforms-转折点和希尔伯特变换"><a href="#6-4-Turning-points-and-Hilbert-transforms-转折点和希尔伯特变换" class="headerlink" title="6.4 Turning points and Hilbert transforms 转折点和希尔伯特变换"></a>6.4 Turning points and Hilbert transforms 转折点和希尔伯特变换</h2><p>subtleties 微妙之处？？？<br>kink 扭转<br>planar 二维的<br>monochromatic 单频的<br>internal caustic surface 内焦散面<br>reconcile 和解，使和谐<br>prevails 占优</p><h2 id="6-5-Matrix-methods-for-modeling-plane-waves-矩阵法平面波模型"><a href="#6-5-Matrix-methods-for-modeling-plane-waves-矩阵法平面波模型" class="headerlink" title="6.5 Matrix methods for modeling plane waves 矩阵法平面波模型"></a>6.5 Matrix methods for modeling plane waves 矩阵法平面波模型</h2><p>stress-displacement vector 应力-位移向量<br>solution matrix or layer matrix 矩阵解或层矩阵<br>propagator matrix 传播矩阵<br>fuss 烦恼<br>hence 因此，今后</p><h2 id="6-6-attenuation-衰减"><a href="#6-6-attenuation-衰减" class="headerlink" title="6.6 attenuation 衰减"></a>6.6 attenuation 衰减</h2><p>anelastic 滞弹性的<br>intrinsic attenuation 固有衰减<br>scattering attenuation 散射衰减<br>heterogeneities 不均一性<br>dimensionless quantity 无量纲量<br>quality factor 品质因子<br>cycle 周期<br>exponentials 指数项<br>incorporate 合并</p><h3 id="6-6-1-Example-Computing-intrinsic-attenuation-计算固有衰减"><a href="#6-6-1-Example-Computing-intrinsic-attenuation-计算固有衰减" class="headerlink" title="6.6.1 Example: Computing intrinsic attenuation 计算固有衰减"></a>6.6.1 Example: Computing intrinsic attenuation 计算固有衰减</h3><h3 id="6-6-2-t-and-belocity-dispersion-速度频散？"><a href="#6-6-2-t-and-belocity-dispersion-速度频散？" class="headerlink" title="6.6.2 t* and belocity dispersion 速度频散？"></a>6.6.2 t* and belocity dispersion 速度频散？</h3><p>delta-function source δ函数源<br>causality 因果性<br>onsets 初始，攻击？</p><h3 id="6-6-3-The-absorption-band-model-吸收带模型"><a href="#6-6-3-The-absorption-band-model-吸收带模型" class="headerlink" title="6.6.3 The absorption band model 吸收带模型"></a>6.6.3 The absorption band model 吸收带模型</h3><p>relaxation times 弛豫时间，松弛时间<br>absorption band operator 吸收带算子</p><h3 id="6-6-4-The-standard-linear-solid-标准线性固体"><a href="#6-6-4-The-standard-linear-solid-标准线性固体" class="headerlink" title="6.6.4 The standard linear solid 标准线性固体"></a>6.6.4 The standard linear solid 标准线性固体</h3><p>grain boundary processes 晶界过程<br>crystal defect sliding 晶体缺陷滑动<br>fluid-filled cracks 流体充填孔隙？<br>dissipate 驱散，消失<br>relaxed modulus 松弛模量<br>resonant frequency 谐振频率<br>superposition 重叠，重合<br>falloff 下降</p><h3 id="6-6-5-Earth’s-attenuation-地层衰减"><a href="#6-6-5-Earth’s-attenuation-地层衰减" class="headerlink" title="6.6.5 Earth’s attenuation 地层衰减"></a>6.6.5 Earth’s attenuation 地层衰减</h3><p>concentrated 集中的<br>typical mid-crustal values 典型地壳中值<br>aesthenosphere 软流圈<br>discrepancy 差异，矛盾<br>baseline correction 基线校正？？？</p><h3 id="6-6-6-Observing-Q"><a href="#6-6-6-Observing-Q" class="headerlink" title="6.6.6 Observing Q"></a>6.6.6 Observing Q</h3><p>decaying harmonic functions 衰减谐波函数<br>pure sine waves 纯正弦波<br>spectra 光谱<br>rise time 上升时间<br>scattering attenuation 散射衰减<br>lagged 延迟， 落后</p><h3 id="6-6-7-Non-linear-attenuation-非线性衰减"><a href="#6-6-7-Non-linear-attenuation-非线性衰减" class="headerlink" title="6.6.7 Non-linear attenuation 非线性衰减"></a>6.6.7 Non-linear attenuation 非线性衰减</h3><p>permanent fracturing 永久性压裂</p><h3 id="6-6-8-Seismic-attenuation-and-global-politics-地震波衰减和全球政治"><a href="#6-6-8-Seismic-attenuation-and-global-politics-地震波衰减和全球政治" class="headerlink" title="6.6.8 Seismic attenuation and global politics 地震波衰减和全球政治"></a>6.6.8 Seismic attenuation and global politics 地震波衰减和全球政治</h3><p>kilotons 千吨<br>threshold 开始，阈，界<br>treaty 条约<br>the Soviet Union 苏联<br>calibrated 校准<br>violation 违反</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>这里的名词全部来源于 Introduction to Seismology, 作者：Peter M. Shearer</p>]]></content>
      
      
      <categories>
          
          <category> 专业英语词汇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语词汇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始的Obspy</title>
      <link href="/2022/11/11/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84Obspy/"/>
      <url>/2022/11/11/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84Obspy/</url>
      
        <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://docs.obspy.org/archive/ObsPy_Tutorial_2020-04_chinese.pdf">Obspy中文文档</a></p><h1 id="读取地震数据"><a href="#读取地震数据" class="headerlink" title="读取地震数据"></a>读取地震数据</h1><h2 id="访问元信息"><a href="#访问元信息" class="headerlink" title="访问元信息"></a>访问元信息</h2><pre><code>from obspy import readwaves = read(&#39;/home/zhiyuanshi/Documents/Pythonworks/IU_ADK_10.mseed&#39;)print(waves)  # 输出波形名称</code></pre><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">IU.ADK.10.BH1 | 2014-10-28T00:00:00.019500Z - 2014-10-28T23:59:59.994500Z | 40.0 Hz, 3456000 samples</span><br><span class="line">IU.ADK.10.BH2 | 2014-10-28T00:00:00.019500Z - 2014-10-28T23:59:59.994500Z | 40.0 Hz, 3456000 samples</span><br><span class="line">IU.ADK.10.BHZ | 2014-10-28T00:00:00.019500Z - 2014-10-28T23:59:59.994500Z | 40.0 Hz, 3456000 samples</span><br><span class="line">IU.ADK.10.HH1 | 2014-10-28T01:29:59.388393Z - 2014-10-28T01:34:00.158393Z | 100.0 Hz, 24078 samples</span><br><span class="line">IU.ADK.10.HH2 | 2014-10-28T01:30:02.058394Z - 2014-10-28T01:33:59.158394Z | 100.0 Hz, 23711 samples</span><br><span class="line">IU.ADK.10.HHZ | 2014-10-28T01:29:41.818393Z - 2014-10-28T01:34:00.778393Z | 100.0 Hz, 25897 samples</span><br><span class="line">IU.ADK.10.LH1 | 2014-10-28T00:00:00.069500Z - 2014-10-28T23:59:59.069500Z | 1.0 Hz, 86400 samples</span><br><span class="line">IU.ADK.10.LH2 | 2014-10-28T00:00:00.069500Z - 2014-10-28T23:59:59.069500Z | 1.0 Hz, 86400 samples</span><br><span class="line">IU.ADK.10.LHZ | 2014-10-28T00:00:00.069500Z - 2014-10-28T23:59:59.069500Z | 1.0 Hz, 86400 samples</span><br><span class="line">IU.ADK.10.VH1 | 2014-10-28T00:00:00.069500Z - 2014-10-28T23:59:50.069500Z | 0.1 Hz, 8640 samples</span><br><span class="line">IU.ADK.10.VH2 | 2014-10-28T00:00:00.069500Z - 2014-10-28T23:59:50.069500Z | 0.1 Hz, 8640 samples</span><br><span class="line">IU.ADK.10.VHZ | 2014-10-28T00:00:00.069500Z - 2014-10-28T23:59:50.069500Z | 0.1 Hz, 8640 samples</span><br><span class="line">IU.ADK.10.VMU | 2014-10-28T00:00:00.000000Z - 2014-10-29T00:00:00.000000Z | 0.1 Hz, 8641 samples</span><br><span class="line">IU.ADK.10.VMV | 2014-10-28T00:00:00.000000Z - 2014-10-29T00:00:00.000000Z | 0.1 Hz, 8641 samples</span><br><span class="line">IU.ADK.10.VMW | 2014-10-28T00:00:00.000000Z - 2014-10-29T00:00:00.000000Z | 0.1 Hz, 8641 samples</span><br></pre></td></tr></table></figure><pre><code>print(len(waves))  # waves中含有15个波形</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure><p>输出最前面的波形名称</p><pre><code>tra1 = waves[0]print(tra1)  # 输出最前面的波形名称</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IU.ADK.10.BH1 | 2014-10-28T00:00:00.019500Z - 2014-10-28T23:59:59.994500Z | 40.0 Hz, 3456000 samples</span><br></pre></td></tr></table></figure><p>输出元信息，即地震数据的台站信息等:</p><pre><code>print(tra1.stats)  # 输出元信息，即地震数据的台站信息等</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">      network: IU</span><br><span class="line">      station: ADK</span><br><span class="line">     location: 10</span><br><span class="line">      channel: BH1</span><br><span class="line">    starttime: 2014-10-28T00:00:00.019500Z</span><br><span class="line">      endtime: 2014-10-28T23:59:59.994500Z</span><br><span class="line">sampling_rate: 40.0</span><br><span class="line">        delta: 0.025</span><br><span class="line">         npts: 3456000</span><br><span class="line">        calib: 1.0</span><br><span class="line">      _format: MSEED</span><br><span class="line">        mseed: AttribDict(&#123;&#x27;dataquality&#x27;: &#x27;M&#x27;, &#x27;number_of_records&#x27;: 14448, &#x27;encoding&#x27;: &#x27;STEIM2&#x27;, &#x27;byteorder&#x27;: &#x27;&gt;&#x27;, &#x27;record_length&#x27;: 512, &#x27;filesize&#x27;: 22335488&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>print(tra1.stats.station)</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ADK</span><br></pre></td></tr></table></figure><h2 id="访问波形数据"><a href="#访问波形数据" class="headerlink" title="访问波形数据"></a>访问波形数据</h2><p>使用data关键词对实际波形数据进行检索</p><pre><code>print(tra1.data)</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[-4017 -3853 -3594 ...  1167   807  1231]</span><br></pre></td></tr></table></figure><pre><code>print(len(tra1.data))</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3456000   # 与上面的波形中npts相对应</span><br></pre></td></tr></table></figure><pre><code>tra1.plot()  # 浏览数据</code></pre><h1 id="波形绘制"><a href="#波形绘制" class="headerlink" title="波形绘制"></a>波形绘制</h1><h2 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h2><pre><code>from obspy.core import read# 读取一个数据signalchannel = read(&#39;/home/zhiyuanshi/Documents/Pythonworks/IU_ADK_10_B03.sac&#39;)# 读取三个数据threechannels = read(&#39;/home/zhiyuanshi/Documents/Pythonworks/IU_ADK_10_B01.sac&#39;)threechannels += read(&#39;/home/zhiyuanshi/Documents/Pythonworks/IU_ADK_10_B02.sac&#39;)threechannels += read(&#39;/home/zhiyuanshi/Documents/Pythonworks/IU_ADK_10_B03.sac&#39;)print(signalchannel)</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 Trace(s) in Stream:</span><br><span class="line">IU.ADK.10.BHZ | 2014-10-28T00:00:00.019500Z - 2014-10-28T23:59:59.994500Z | 40.0 Hz, 3456000 samples</span><br></pre></td></tr></table></figure><pre><code>print(&quot;\n&quot;)print(threechannels)</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 Trace(s) in Stream:</span><br><span class="line">IU.ADK.10.BH1 | 2014-10-28T00:00:00.019500Z - 2014-10-28T23:59:59.994500Z | 40.0 Hz, 3456000 samples</span><br><span class="line">IU.ADK.10.BH2 | 2014-10-28T00:00:00.019500Z - 2014-10-28T23:59:59.994500Z | 40.0 Hz, 3456000 samples</span><br><span class="line">IU.ADK.10.BHZ | 2014-10-28T00:00:00.019500Z - 2014-10-28T23:59:59.994500Z | 40.0 Hz, 3456000 samples</span><br></pre></td></tr></table></figure><h2 id="基本绘制与保存"><a href="#基本绘制与保存" class="headerlink" title="基本绘制与保存"></a>基本绘制与保存</h2><p>signalchannel.plot()  # 基本绘制，默认大小800*250，可以通过size属性调整.</p><p>size属性使用方法：size&#x3D;(1920,1080)</p><pre><code>signalsstarttime = signalchannel[0].stats.starttimesignalchannel.plot(outfile=&#39;signalchannelred.png&#39;, color=&#39;red&#39;, number_of_ticks=7, tick_rotation=5, tick_format=&#39;%I:%M %p&#39;,starttime = signalsstarttime+60*60, endtime=signalsstarttime+60*60+120)signalchannel.plot(outfile=&#39;signalchannel.png&#39;)  # 保存波形文件</code></pre><p><img src="signalchannelred.png" alt="signalchannelred"><br><img src="signalchannel.png" alt="signalchannel"></p><h2 id="绘制多通道波形"><a href="#绘制多通道波形" class="headerlink" title="绘制多通道波形"></a>绘制多通道波形</h2><pre><code>threechannels.plot(outfile=&#39;threechannels1920_1080.png&#39;, size=(1920,1080))</code></pre><p><img src="threechannels1920_1080.png" alt="threechannels1920_1080"></p><h2 id="绘制一天的trace图像，one-day图像"><a href="#绘制一天的trace图像，one-day图像" class="headerlink" title="绘制一天的trace图像，one-day图像"></a>绘制一天的trace图像，one-day图像</h2><pre><code>signalchannel.plot(outfile=&#39;signalchannel_oneday.png&#39;, size = (3400,1440), type=&#39;dayplot&#39;)</code></pre><p><img src="signalchannel_oneday.png" alt="signalchannel_oneday"></p><pre><code>signalchannel.filter(&#39;lowpass&#39;, freq=0.1, corners=2)signalchannel.plot(outfile=&#39;signalchannel_oneday_filter&#39;,                   type=&#39;dayplot&#39;, interval=60, right_vertical_labels=False,                   vertical_scaling_range=5e3, one_tick_per_line=True,                   color=[&#39;k&#39;, &#39;r&#39;, &#39;b&#39;, &#39;g&#39;],  show_y_UTC_label=False,                   events=&#123;&#39;min_magnitude&#39;: 6.5&#125;, size=(3400, 1440))</code></pre><p><img src="signalchannel_oneday_filter.png" alt="signalchannel_oneday_filter"></p><h2 id="绘制一段记录-未完成，需要定义单位或者地理位置"><a href="#绘制一段记录-未完成，需要定义单位或者地理位置" class="headerlink" title="绘制一段记录 (未完成，需要定义单位或者地理位置)"></a>绘制一段记录 (未完成，需要定义单位或者地理位置)</h2><pre><code>threechannels.plot(outfile=&#39;section_threechannels&#39;, type=&#39;section&#39;)</code></pre><h2 id="使用matplotlib自定义绘图"><a href="#使用matplotlib自定义绘图" class="headerlink" title="使用matplotlib自定义绘图"></a>使用matplotlib自定义绘图</h2><ul><li>疑问：signalchannel 需要取read到的内容的[0]项，具体未知为何如此。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">fig = plt.figure()  # 创建一个画布</span><br><span class="line">ax = fig.add_subplot(1, 1, 1) # 创建组合图，如subplot()</span><br><span class="line">ax.plot(signalchannel[0].times(&quot;matplotlib&quot;), signalchannel[0].data, &#x27;b-&#x27;)</span><br><span class="line">ax.xaxis_date()</span><br><span class="line">fig.autofmt_xdate()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="matplot_signalchannel.png" alt="matplotlib绘图"></li></ul><h1 id="滤波"><a href="#滤波" class="headerlink" title="滤波"></a>滤波</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">import obspy</span><br><span class="line">st = obspy.read(&quot;https://examples.obspy.org/RJOB_061005_072159.ehz.new&quot;)</span><br><span class="line">st.write(&quot;st.sac&quot;, format=&quot;sac&quot;)</span><br><span class="line">tr = st[0]</span><br><span class="line"></span><br><span class="line">print(st)</span><br><span class="line"># .RJOB..Z | 2005-10-06T07:21:59.850000Z - 2005-10-06T07:24:59.845000Z | 200.0 Hz, 36000 samples</span><br><span class="line">print(tr)</span><br><span class="line"># .RJOB..Z | 2005-10-06T07:21:59.850000Z - 2005-10-06T07:24:59.845000Z | 200.0 Hz, 36000 samples</span><br><span class="line"></span><br><span class="line">tr_filt = tr.copy() # 复制tr内容，保留原始数据</span><br><span class="line">tr_filt.filter(&#x27;lowpass&#x27;, freq=1.0, corners=2, zerophase=True)</span><br><span class="line"># freq指低通滤波的拐点频率，zerophase指零相位</span><br><span class="line"></span><br><span class="line"># 横坐标t，即time，</span><br><span class="line">t = np.arange(0, tr.stats.npts / tr.stats.sampling_rate, tr.stats.delta)</span><br><span class="line"># arange(初值，终止值，步长，数据类型)，此处，初始时间为0，终止值为数据点数/(采样率)?存疑，步长为delta，即数据点采样周期</span><br><span class="line"></span><br><span class="line"># matplot绘图</span><br><span class="line">plt.subplot(211)</span><br><span class="line">plt.plot(t, tr.data, &#x27;k&#x27;)</span><br><span class="line">plt.ylabel(&#x27;Raw Data.&#x27;)</span><br><span class="line">plt.subplot(212)</span><br><span class="line">plt.plot(t, tr_filt.data, &#x27;k&#x27;)</span><br><span class="line">plt.ylabel(&#x27;Lowpassed Data&#x27;)</span><br><span class="line">plt.xlabel(&#x27;TIME[S]&#x27;)</span><br><span class="line">plt.suptitle(tr.stats.starttime)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="filter.png" alt="filter"><br>采用低通滤波，波形变得稀疏了。滤除了高频成分，其中高频成分大多数可能是噪音。</p><h1 id="下采样"><a href="#下采样" class="headerlink" title="下采样"></a>下采样</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">tr_new = tr.copy()</span><br><span class="line">tr_new.decimate(factor=4, strict_length=False)</span><br><span class="line"># 下采样时自动滤波，滤波角频率为 0.4*new sampling rate</span><br><span class="line">tr_filt = tr.copy()</span><br><span class="line">tr_filt.filter(&#x27;lowpass&#x27;, freq=0.4 * tr.stats.sampling_rate / 4.0)</span><br><span class="line"></span><br><span class="line">t = np.arange(0, tr.stats.npts / tr.stats.sampling_rate, tr.stats.delta)</span><br><span class="line">t_new = np.arange(0, tr_new.stats.npts / tr_new.stats.sampling_rate, tr_new.stats.delta)</span><br><span class="line"></span><br><span class="line">plt.plot(t, tr.data, &#x27;k&#x27;, label=&#x27;Raw&#x27;, alpha=0.3)  # alpha指点的不透明度</span><br><span class="line">plt.plot(t, tr_filt.data, &#x27;b&#x27;, label=&#x27;Lowpassed&#x27;, alpha=0.7)</span><br><span class="line">plt.plot(t_new, tr_new.data, &#x27;r&#x27;, label=&#x27;Lowpassed/Downsampled&#x27;, alpha=0.7)</span><br><span class="line">plt.xlabel(&#x27;Time[s]&#x27;)</span><br><span class="line">plt.xlim(82, 83.5)</span><br><span class="line">plt.suptitle(tr.stats.starttime)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="downsampling.png" alt="downsampling"><br>未了解下采样为何，从图像上感觉相位变化了？</p><h1 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h1><p>合并绘制三个重叠的地震图。即这三个数据时间是重合的，而且是同一组数据。将其合并后时间最长的是最终结果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">st = obspy.read(&quot;https://examples.obspy.org/dis.G.SCZ.__.BHE&quot;)</span><br><span class="line">st += obspy.read(&quot;https://examples.obspy.org/dis.G.SCZ.__.BHE.1&quot;)</span><br><span class="line">st += obspy.read(&quot;https://examples.obspy.org/dis.G.SCZ.__.BHE.2&quot;)</span><br><span class="line">print(st[0])</span><br><span class="line">print(st[1])</span><br><span class="line">print(st[2])</span><br><span class="line"># 输出：</span><br><span class="line"># G.SCZ..BHE | 2004-01-03T08:16:09.070990Z - 2004-01-03T09:22:36.120990Z | 20.0 Hz, 79742 samples</span><br><span class="line"># G.SCZ..BHE | 2004-01-03T08:19:52.371008Z - 2004-01-03T09:26:18.721008Z | 20.0 Hz, 79728 samples</span><br><span class="line"># G.SCZ..BHE | 2004-01-03T08:27:25.571021Z - 2004-01-03T09:37:27.521021Z | 20.0 Hz, 84040 samples</span><br><span class="line"></span><br><span class="line">st.sort([&#x27;starttime&#x27;])  # 排序</span><br><span class="line">dt = st[0].stats.starttime.timestamp</span><br><span class="line"></span><br><span class="line">ax = plt.subplot(4, 1, 1)</span><br><span class="line">for i in range(3):</span><br><span class="line">    plt.subplot(4, 1, i+1, sharex=ax)</span><br><span class="line">    t = np.linspace(st[i].stats.starttime.timestamp - dt, st[i].stats.endtime.timestamp - dt, st[i].stats.npts)</span><br><span class="line">    plt.plot(t, st[i].data)</span><br><span class="line"></span><br><span class="line"># 合并数据 merge the data</span><br><span class="line">st.merge(method=1)</span><br><span class="line">plt.subplot(4, 1, 4, sharex=ax)</span><br><span class="line">t = np.linspace(st[0].stats.starttime.timestamp - dt, st[0].stats.endtime.timestamp - dt, st[0].stats.npts)</span><br><span class="line">plt.plot(t, st[0].data, &#x27;r&#x27;)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="merge.png" alt="merge"><br>第二个图的波形有些奇怪。震级饱和现象有些相似，但是它的振幅最大是1，其他的是20000，总之有些奇怪。<br>其它图像看起来很正常，最后一个图像时间轴填满了，看得出来是1、3图片的结合。合并就是将不同记录时间的同一地震波形合并为一个总的时间的地震波形，简而言之是时间上的合并。</p><h1 id="FK分析"><a href="#FK分析" class="headerlink" title="FK分析"></a>FK分析</h1><h2 id="直角坐标"><a href="#直角坐标" class="headerlink" title="直角坐标"></a>直角坐标</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">import matplotlib.dates as mdates</span><br><span class="line"></span><br><span class="line">import obspy</span><br><span class="line">from obspy.core.util import AttribDict</span><br><span class="line">from obspy.imaging.cm import obspy_sequential</span><br><span class="line">from obspy.signal.invsim import corn_freq_2_paz</span><br><span class="line">from obspy.signal.array_analysis import array_processing</span><br><span class="line"></span><br><span class="line"># 导入数据</span><br><span class="line">st = obspy.read(&#x27;https://examples.obspy.org/agfa.mseed&#x27;)</span><br><span class="line">print(st)</span><br><span class="line"># 设置五个通道的PAZ和坐标</span><br><span class="line">st[0].stats.paz = AttribDict(&#123;</span><br><span class="line">&#x27;poles&#x27;: [(-0.03736 - 0.03617j), (-0.03736 + 0.03617j)],</span><br><span class="line">&#x27;zeros&#x27;: [0j, 0j],</span><br><span class="line">&#x27;sensitivity&#x27;: 205479446.68601453,</span><br><span class="line">&#x27;gain&#x27;: 1.0&#125;)</span><br><span class="line">st[0].stats.coordinates = AttribDict(&#123;</span><br><span class="line">&#x27;latitude&#x27;: 48.108589,</span><br><span class="line">&#x27;elevation&#x27;: 0.450000,</span><br><span class="line">&#x27;longitude&#x27;: 11.582967&#125;)</span><br><span class="line"></span><br><span class="line">st[1].stats.paz = AttribDict(&#123;</span><br><span class="line">&#x27;poles&#x27;: [(-0.03736 - 0.03617j), (-0.03736 + 0.03617j)],</span><br><span class="line">&#x27;zeros&#x27;: [0j, 0j],</span><br><span class="line">&#x27;sensitivity&#x27;: 205479446.68601453,</span><br><span class="line">&#x27;gain&#x27;: 1.0&#125;)</span><br><span class="line">st[1].stats.coordinates = AttribDict(&#123;</span><br><span class="line">&#x27;latitude&#x27;: 48.108192,</span><br><span class="line">&#x27;elevation&#x27;: 0.450000,</span><br><span class="line">&#x27;longitude&#x27;: 11.583120&#125;)</span><br><span class="line"></span><br><span class="line">st[2].stats.paz = AttribDict(&#123;</span><br><span class="line">&#x27;poles&#x27;: [(-0.03736 - 0.03617j), (-0.03736 + 0.03617j)],</span><br><span class="line">&#x27;zeros&#x27;: [0j, 0j],</span><br><span class="line">&#x27;sensitivity&#x27;: 250000000.0,</span><br><span class="line">&#x27;gain&#x27;: 1.0&#125;)</span><br><span class="line">st[2].stats.coordinates = AttribDict(&#123;</span><br><span class="line">&#x27;latitude&#x27;: 48.108692,</span><br><span class="line">&#x27;elevation&#x27;: 0.450000,</span><br><span class="line">&#x27;longitude&#x27;: 11.583414&#125;)</span><br><span class="line"></span><br><span class="line">st[3].stats.paz = AttribDict(&#123;</span><br><span class="line">&#x27;poles&#x27;: [(-4.39823 + 4.48709j), (-4.39823 - 4.48709j)],</span><br><span class="line">&#x27;zeros&#x27;: [0j, 0j],</span><br><span class="line">&#x27;sensitivity&#x27;: 222222228.10910088,</span><br><span class="line">&#x27;gain&#x27;: 1.0&#125;)</span><br><span class="line">st[3].stats.coordinates = AttribDict(&#123;</span><br><span class="line">&#x27;latitude&#x27;: 48.108456,</span><br><span class="line">&#x27;elevation&#x27;: 0.450000,</span><br><span class="line">&#x27;longitude&#x27;: 11.583049&#125;)</span><br><span class="line"></span><br><span class="line">st[4].stats.paz = AttribDict(&#123;</span><br><span class="line">&#x27;poles&#x27;: [(-4.39823 + 4.48709j), (-4.39823 - 4.48709j), (-</span><br><span class="line">2.105 + 0j)],</span><br><span class="line">&#x27;zeros&#x27;: [0j, 0j, 0j],</span><br><span class="line">&#x27;sensitivity&#x27;: 222222228.10910088,</span><br><span class="line">&#x27;gain&#x27;: 1.0&#125;)</span><br><span class="line">st[4].stats.coordinates = AttribDict(&#123;</span><br><span class="line">&#x27;latitude&#x27;: 48.108730,</span><br><span class="line">&#x27;elevation&#x27;: 0.450000,</span><br><span class="line">&#x27;longitude&#x27;: 11.583157&#125;)</span><br><span class="line"></span><br><span class="line"># 仪器校正至拐点评率1HZ</span><br><span class="line">paz1hz = corn_freq_2_paz(1.0, damp=0.707)</span><br><span class="line">st.simulate(paz_remove=&#x27;self&#x27;, paz_simulate=paz1hz)</span><br><span class="line">print(st)</span><br><span class="line"></span><br><span class="line"># 矩阵处理</span><br><span class="line">stime = obspy.UTCDateTime(&quot;20080217110515&quot;)</span><br><span class="line">etime = obspy.UTCDateTime(&quot;20080217110545&quot;)</span><br><span class="line">kwargs = dict(</span><br><span class="line">    # slowness网格X min, X max, Y min, Y max, Slow Step</span><br><span class="line">    sll_x=-3.0, slm_x=3.0, sll_y=-3.0, slm_y=3.0, sl_s=0.03,</span><br><span class="line">    # sliding window properties 滑动窗口属性</span><br><span class="line">    win_len=1.0, win_frac=0.05,</span><br><span class="line">    # frequency properties 频率特性</span><br><span class="line">    frqlow=1.0, frqhigh=8.0, prewhiten=0,</span><br><span class="line">    # restrict output 限制输出</span><br><span class="line">    semb_thres=-1e9, vel_thres=-1e9, timestamp=&#x27;mlabday&#x27;,</span><br><span class="line">    stime=stime, etime=etime</span><br><span class="line">)</span><br><span class="line">out = array_processing(st, **kwargs)   # 存储输出</span><br><span class="line"></span><br><span class="line"># 绘图</span><br><span class="line">labels = [&#x27;rel.power&#x27;, &#x27;abs.power&#x27;, &#x27;baz&#x27;, &#x27;slow&#x27;]</span><br><span class="line"></span><br><span class="line">xlocator = mdates.AutoDateLocator()</span><br><span class="line">fig = plt.figure()</span><br><span class="line">for i, lab in enumerate(labels):  # enumerate 将labels以(0,&#x27;rel.power&#x27;),(1,&#x27;abs.power)...形式返回</span><br><span class="line">    ax = fig.add_subplot(4, 1, i + 1)</span><br><span class="line">    ax.scatter(out[:, 0], out[:, i + 1], c=out[:, 1], alpha=0.6,</span><br><span class="line">    edgecolors=&#x27;none&#x27;, cmap=obspy_sequential)</span><br><span class="line">    ax.set_ylabel(lab)</span><br><span class="line">    ax.set_xlim(out[0, 0], out[-1, 0])</span><br><span class="line">    ax.set_ylim(out[:, i + 1].min(), out[:, i + 1].max())</span><br><span class="line">    ax.xaxis.set_major_locator(xlocator)</span><br><span class="line"></span><br><span class="line">ax.xaxis.set_major_formatter(mdates.AutoDateFormatter(xlocator))</span><br><span class="line"></span><br><span class="line">fig.suptitle(&#x27;AGFA skyscraper blasting in Munich %s&#x27; % (stime.strftime(&#x27;%Y-%m-%d&#x27;), ))</span><br><span class="line">fig.autofmt_xdate()</span><br><span class="line">fig.subplots_adjust(left=0.15, top=0.95, right=0.95, bottom=0.2, hspace=0)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="FK_filter.png" alt="FK"></p><h2 id="极坐标"><a href="#极坐标" class="headerlink" title="极坐标"></a>极坐标</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from matplotlib.colorbar import ColorbarBase</span><br><span class="line">from matplotlib.colors import Normalize</span><br><span class="line">import obspy</span><br><span class="line">from obspy.core.util import AttribDict</span><br><span class="line">from obspy.imaging.cm import obspy_sequential</span><br><span class="line">from obspy.signal.invsim import corn_freq_2_paz</span><br><span class="line">from obspy.signal.array_analysis import array_processing</span><br><span class="line"></span><br><span class="line"># Load data</span><br><span class="line">st = obspy.read(&quot;https://examples.obspy.org/agfa.mseed&quot;)</span><br><span class="line"></span><br><span class="line"># Set PAZ and coordinates for all 5 channels</span><br><span class="line">st[0].stats.paz = AttribDict(&#123;</span><br><span class="line">&#x27;poles&#x27;: [(-0.03736 - 0.03617j), (-0.03736 + 0.03617j)],</span><br><span class="line">&#x27;zeros&#x27;: [0j, 0j],</span><br><span class="line">&#x27;sensitivity&#x27;: 205479446.68601453,</span><br><span class="line">&#x27;gain&#x27;: 1.0&#125;)</span><br><span class="line">st[0].stats.coordinates = AttribDict(&#123;</span><br><span class="line">&#x27;latitude&#x27;: 48.108589,</span><br><span class="line">&#x27;elevation&#x27;: 0.450000,</span><br><span class="line">&#x27;longitude&#x27;: 11.582967&#125;)</span><br><span class="line"></span><br><span class="line">st[1].stats.paz = AttribDict(&#123;</span><br><span class="line">&#x27;poles&#x27;: [(-0.03736 - 0.03617j), (-0.03736 + 0.03617j)],</span><br><span class="line">&#x27;zeros&#x27;: [0j, 0j],</span><br><span class="line">&#x27;sensitivity&#x27;: 205479446.68601453,</span><br><span class="line">&#x27;gain&#x27;: 1.0&#125;)</span><br><span class="line">st[1].stats.coordinates = AttribDict(&#123;</span><br><span class="line">&#x27;latitude&#x27;: 48.108192,</span><br><span class="line">&#x27;elevation&#x27;: 0.450000,</span><br><span class="line">&#x27;longitude&#x27;: 11.583120&#125;)</span><br><span class="line"></span><br><span class="line">st[2].stats.paz = AttribDict(&#123;</span><br><span class="line">&#x27;poles&#x27;: [(-0.03736 - 0.03617j), (-0.03736 + 0.03617j)],</span><br><span class="line">&#x27;zeros&#x27;: [0j, 0j],</span><br><span class="line">&#x27;sensitivity&#x27;: 250000000.0,</span><br><span class="line">&#x27;gain&#x27;: 1.0&#125;)</span><br><span class="line">st[2].stats.coordinates = AttribDict(&#123;</span><br><span class="line">&#x27;latitude&#x27;: 48.108692,</span><br><span class="line">&#x27;elevation&#x27;: 0.450000,</span><br><span class="line">&#x27;longitude&#x27;: 11.583414&#125;)</span><br><span class="line"></span><br><span class="line">st[3].stats.paz = AttribDict(&#123;</span><br><span class="line">&#x27;poles&#x27;: [(-4.39823 + 4.48709j), (-4.39823 - 4.48709j)],</span><br><span class="line">&#x27;zeros&#x27;: [0j, 0j],</span><br><span class="line">&#x27;sensitivity&#x27;: 222222228.10910088,</span><br><span class="line">&#x27;gain&#x27;: 1.0&#125;)</span><br><span class="line">st[3].stats.coordinates = AttribDict(&#123;</span><br><span class="line">&#x27;latitude&#x27;: 48.108456,</span><br><span class="line">&#x27;elevation&#x27;: 0.450000,</span><br><span class="line">&#x27;longitude&#x27;: 11.583049&#125;)</span><br><span class="line"></span><br><span class="line">st[4].stats.paz = AttribDict(&#123;</span><br><span class="line">&#x27;poles&#x27;: [(-4.39823 + 4.48709j), (-4.39823 - 4.48709j), (-2.105 + 0j)],</span><br><span class="line">&#x27;zeros&#x27;: [0j, 0j, 0j],</span><br><span class="line">&#x27;sensitivity&#x27;: 222222228.10910088,</span><br><span class="line">&#x27;gain&#x27;: 1.0&#125;)</span><br><span class="line">st[4].stats.coordinates = AttribDict(&#123;</span><br><span class="line">&#x27;latitude&#x27;: 48.108730,</span><br><span class="line">&#x27;elevation&#x27;: 0.450000,</span><br><span class="line">&#x27;longitude&#x27;: 11.583157&#125;)</span><br><span class="line"></span><br><span class="line"># Instrument correction to 1Hz corner frequency</span><br><span class="line">paz1hz = corn_freq_2_paz(1.0, damp=0.707)</span><br><span class="line">st.simulate(paz_remove=&#x27;self&#x27;, paz_simulate=paz1hz)</span><br><span class="line"></span><br><span class="line"># Execute array_processing</span><br><span class="line">kwargs = dict(</span><br><span class="line"># slowness grid: X min, X max, Y min, Y max, Slow Step</span><br><span class="line">sll_x=-3.0, slm_x=3.0, sll_y=-3.0, slm_y=3.0, sl_s=0.03,</span><br><span class="line"># sliding window properties</span><br><span class="line">win_len=1.0, win_frac=0.05,</span><br><span class="line"># frequency properties</span><br><span class="line">frqlow=1.0, frqhigh=8.0, prewhiten=0,</span><br><span class="line"># restrict output</span><br><span class="line">semb_thres=-1e9, vel_thres=-1e9,</span><br><span class="line">stime=obspy.UTCDateTime(&quot;20080217110515&quot;), etime=obspy.UTCDateTime(&quot;20080217110545&quot;)</span><br><span class="line">)</span><br><span class="line">out = array_processing(st, **kwargs)</span><br><span class="line"># Plot</span><br><span class="line">cmap = obspy_sequential</span><br><span class="line"># make output human readable, adjust backazimuth to values between 0 and 360</span><br><span class="line">t, rel_power, abs_power, baz, slow = out.T</span><br><span class="line">baz[baz &lt; 0.0] += 360</span><br><span class="line"># choose number of fractions in plot (desirably 360 degree/N is an integer!)</span><br><span class="line">N = 36</span><br><span class="line">N2 = 30</span><br><span class="line">abins = np.arange(N + 1) * 360. / N</span><br><span class="line">sbins = np.linspace(0, 3, N2 + 1)</span><br><span class="line"># sum rel power in bins given by abins and sbins</span><br><span class="line">hist, baz_edges, sl_edges = \</span><br><span class="line">    np.histogram2d(baz, slow, bins=[abins, sbins], weights=rel_power)</span><br><span class="line"></span><br><span class="line"># transform to radian 转换到极坐标</span><br><span class="line">baz_edges = np.radians(baz_edges)</span><br><span class="line"></span><br><span class="line"># add polar and colorbar axes 加入极坐标轴和色标</span><br><span class="line">fig = plt.figure(figsize=(8, 8))</span><br><span class="line">cax = fig.add_axes([0.85, 0.2, 0.05, 0.5])</span><br><span class="line">ax = fig.add_axes([0.10, 0.1, 0.70, 0.7], polar=True)</span><br><span class="line">ax.set_theta_direction(-1)</span><br><span class="line">ax.set_theta_zero_location(&quot;N&quot;)</span><br><span class="line"></span><br><span class="line">dh = abs(sl_edges[1] - sl_edges[0])</span><br><span class="line">dw = abs(baz_edges[1] - baz_edges[0])</span><br><span class="line"># circle through backazimuth</span><br><span class="line">for i, row in enumerate(hist):</span><br><span class="line">    bars = ax.bar(x=(i * dw) * np.ones(N2),</span><br><span class="line">        height=dh * np.ones(N2),</span><br><span class="line">        width=dw, bottom=dh * np.arange(N2),</span><br><span class="line">        color=cmap(row / hist.max()))</span><br><span class="line">ax.set_xticks(np.linspace(0, 2 * np.pi, 4, endpoint=False))</span><br><span class="line">ax.set_xticklabels([&#x27;N&#x27;, &#x27;E&#x27;, &#x27;S&#x27;, &#x27;W&#x27;])</span><br><span class="line"># set slowness limits</span><br><span class="line">ax.set_ylim(0, 3)</span><br><span class="line">[i.set_color(&#x27;grey&#x27;) for i in ax.get_yticklabels()]</span><br><span class="line">ColorbarBase(cax, cmap=cmap, norm=Normalize(vmin=hist.min(), vmax=hist.max()))</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="FK_analy_polar.png"></p><h1 id="信号包络-seismogram-envelopes"><a href="#信号包络-seismogram-envelopes" class="headerlink" title="信号包络 seismogram envelopes"></a>信号包络 seismogram envelopes</h1><h2 id="滤波与包络信号绘制图像"><a href="#滤波与包络信号绘制图像" class="headerlink" title="滤波与包络信号绘制图像"></a>滤波与包络信号绘制图像</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">import obspy</span><br><span class="line">import obspy.signal</span><br><span class="line"></span><br><span class="line">st = obspy.read(&#x27;https://examples.obspy.org/RJOB_061005_072159.ehz.new&#x27;)</span><br><span class="line">data = st[0].data</span><br><span class="line">npts = st[0].stats.npts</span><br><span class="line">samprate = st[0].stats.sampling_rate</span><br><span class="line"></span><br><span class="line"># 滤波</span><br><span class="line">st_filt = st.copy()</span><br><span class="line">st_filt.filter(&#x27;bandpass&#x27;, freqmin=1, freqmax=3, corners=2, zerophase=True)</span><br><span class="line"></span><br><span class="line"># 滤波后数据的包络</span><br><span class="line">data_envelope = obspy.signal.filter.envelope(st_filt[0].data)</span><br><span class="line"></span><br><span class="line"># matplotlib绘制</span><br><span class="line">t = np.arange(0, npts / samprate, 1 / samprate)</span><br><span class="line">plt.plot(t, st_filt[0].data, &#x27;k&#x27;)</span><br><span class="line">plt.plot(t, data_envelope, &#x27;k:&#x27;)</span><br><span class="line">plt.plot(t, st[0].data, &#x27;r:&#x27;)</span><br><span class="line">plt.title(st[0].stats.starttime)</span><br><span class="line">plt.ylabel(&#x27;Filtered Data w/ Envelope&#x27;)</span><br><span class="line">plt.xlabel(&#x27;Time [s]&#x27;)</span><br><span class="line">plt.xlim(80, 90)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>红色是原始波形的绘制图像，经过1-3HZ带通滤波后，波形包络和波形呈现如黑色曲线所示。<br><img src="envolope.png"></p><h1 id="绘制频谱-plotting-spectrograms"><a href="#绘制频谱-plotting-spectrograms" class="headerlink" title="绘制频谱  plotting spectrograms"></a>绘制频谱  plotting spectrograms</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import obspy</span><br><span class="line">st = obspy.read(&quot;https://examples.obspy.org/RJOB_061005_072159.ehz.new&quot;)</span><br><span class="line">st.spectrogram(log=True, title=&#x27;BW.RJOB &#x27; + str(st[0].stats.starttime))</span><br></pre></td></tr></table></figure><p><img src="spectrograms.png"></p><h1 id="零极点和频率响应-poles-and-zeros-Frequency-response"><a href="#零极点和频率响应-poles-and-zeros-Frequency-response" class="headerlink" title="零极点和频率响应 poles and zeros Frequency response"></a>零极点和频率响应 poles and zeros Frequency response</h1><p>计算LE-3D&#x2F;1S地震仪的频率响应</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">from obspy.signal.invsim import paz_to_freq_resp</span><br><span class="line"></span><br><span class="line">poles = [-4.440 + 4.440j, -4.440 - 4.440j, -1.083 + 0.0j]</span><br><span class="line">zeros = [0.0 + 0.0j, 0.0 + 0.0j, 0.0 + 0.0j]</span><br><span class="line">scale_fac = 0.4</span><br><span class="line"></span><br><span class="line">h, f = paz_to_freq_resp(poles, zeros, scale_fac, 0.005, 16384, freq=True)</span><br><span class="line"></span><br><span class="line"># paz_to_freq_resp(极点，零点，，采样间隔，傅里叶变换点，freq)</span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line">plt.subplot(121)</span><br><span class="line">plt.loglog(f, abs(h))</span><br><span class="line">plt.xlabel(&#x27;Frequency [Hz]&#x27;)</span><br><span class="line">plt.ylabel(&#x27;Amplitude&#x27;)</span><br><span class="line"></span><br><span class="line">plt.subplot(122)</span><br><span class="line">phase = 2 * np.pi + np.unwrap(np.angle(h))</span><br><span class="line"># unwrap() 实现相位卷绕，但注意不要对没有意义的角度列表进行，否则会出现错误。</span><br><span class="line"># 参见：https://blog.csdn.net/lishuhuakai/article/details/78812540</span><br><span class="line">plt.semilogx(f, phase)  # 半对数函数，坐标轴x为对数坐标。此即为绘图函数，绘制函数图像。</span><br><span class="line">plt.xlabel(&#x27;Frequency [Hz]&#x27;)</span><br><span class="line">plt.ylabel(&#x27;Phase [radian]&#x27;)</span><br><span class="line"># ticks and tick labels at multiples of pi</span><br><span class="line"></span><br><span class="line">plt.yticks(</span><br><span class="line">    [0, np.pi / 2, np.pi, 3 * np.pi / 2, 2 * np.pi],</span><br><span class="line">    [&#x27;$0$&#x27;, r&#x27;$\frac&#123;\pi&#125;&#123;2&#125;$&#x27;, r&#x27;$\pi$&#x27;, r&#x27;$\frac&#123;3\pi&#125;&#123;2&#125;$&#x27;, r&#x27;$2\pi$&#x27;])</span><br><span class="line"># yticks([0], [1]) 把列表0的值用列表1的值表示。</span><br><span class="line">plt.ylim(-0.2, 2 * np.pi + 0.2)</span><br><span class="line"># title, centered above both subplots</span><br><span class="line">plt.suptitle(&#x27;Frequency Response of LE-3D/1s Seismometer&#x27;)</span><br><span class="line"># make more room in between subplots for the ylabel of right plot</span><br><span class="line">plt.subplots_adjust(wspace=0.3)   # 为子图之间的空间保留的宽度，平均轴宽的一部分</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="polar_zero_frequency.png"></p><h1 id="绘制沙滩球-Beachball"><a href="#绘制沙滩球-Beachball" class="headerlink" title="绘制沙滩球 Beachball"></a>绘制沙滩球 Beachball</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from obspy.imaging.beachball import beachball</span><br><span class="line"></span><br><span class="line">mt = [0.91, -0.89, -0.02, 1.78, -1.55, 0.47]</span><br><span class="line">beachball(mt, size=200, linewidth=1, facecolor=&#x27;b&#x27;)</span><br><span class="line">mt2 = [150, 87, 1]</span><br><span class="line">beachball(mt2, size=200, linewidth=2, facecolor=&#x27;r&#x27;)</span><br><span class="line">mt3 = [-2.39, 1.04, 1.35, 0.57, -2.94, -0.94]</span><br><span class="line">beachball(mt3, size=200, linewidth=2, facecolor=&#x27;g&#x27;)</span><br></pre></td></tr></table></figure><p>但是这个球的参数mt，目前不知道是什么含义。其中红色沙滩球为转换断层机制解。</p><p>mt可能是moment tensor？即地震矩张量。</p><p><img src="beachball1.png"><br><img src="beachball2.png"><br><img src="beachball3.png"></p><h1 id="basemap-plots-地图绘制"><a href="#basemap-plots-地图绘制" class="headerlink" title="basemap plots 地图绘制"></a>basemap plots 地图绘制</h1><h2 id="自定义投影的basemap-plot"><a href="#自定义投影的basemap-plot" class="headerlink" title="自定义投影的basemap plot"></a>自定义投影的basemap plot</h2><p>通过Inventory.plot()  Catalog.plot()内置方法执行</p><p>在使用过程中出现mpl_toolkits.basemap 不能调用的情况。在命令行中输入：</p><pre><code>pip install pyproj -i https://pypi.tuna.tsinghua.edu.cn/simple</code></pre><p>出现不能调用的情况，需要安装basemap库。安装包源码：<a href="https://github.com/matplotlib/basemap">https://github.com/matplotlib/basemap</a></p><ul><li>windows：<br>  <a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#basemap">https://www.lfd.uci.edu/~gohlke/pythonlibs/#basemap</a> 在此处下载basemap然后pip安装。<br>  下载后安装即可。</li><li>linux :<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install basemap-data</span><br><span class="line">python -m pip install basemap-data-hires</span><br><span class="line">python -m pip install basemap</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">from mpl_toolkits.basemap import Basemap</span><br><span class="line"></span><br><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from obspy import read_inventory, read_events</span><br><span class="line"># Set up a custom basemap, example is taken from basemap users&#x27; manual</span><br><span class="line">fig1, ax = plt.subplots()</span><br><span class="line"></span><br><span class="line"># setup albers equal area conic basemap</span><br><span class="line"># lat_1 is first standard parallel.</span><br><span class="line"># lat_2 is second standard parallel.</span><br><span class="line"># lon_0, lat_0 is central point.</span><br><span class="line">m = Basemap(width=8000000, height=7000000,</span><br><span class="line">resolution=&#x27;c&#x27;, projection=&#x27;aea&#x27;,</span><br><span class="line">lat_1=40., lat_2=60, lon_0=35, lat_0=50, ax=ax)</span><br><span class="line">m.drawcoastlines()  # 绘制海岸线</span><br><span class="line">m.drawcountries()  # 绘制国界</span><br><span class="line">m.fillcontinents(color=&#x27;wheat&#x27;, lake_color=&#x27;skyblue&#x27;)</span><br><span class="line"># draw parallels and meridians. 绘制纬线和经线</span><br><span class="line">m.drawparallels(np.arange(-80., 81., 20.))</span><br><span class="line">m.drawmeridians(np.arange(-180., 181., 20.))</span><br><span class="line">m.drawmapboundary(fill_color=&#x27;skyblue&#x27;)</span><br><span class="line">ax.set_title(&quot;Albers Equal Area Projection&quot;)</span><br><span class="line"></span><br><span class="line"># we need to attach the basemap object to the figure, so that obspy knows about</span><br><span class="line"># it and reuses it</span><br><span class="line"># 把basemap的属性赋给fig1。</span><br><span class="line">fig1.bmap = m</span><br><span class="line"></span><br><span class="line"># now let&#x27;s plot some data on the custom basemap:</span><br><span class="line"># 在原地图上添加一些台站和事件信息。但是目前画出来是三张分开的图，第一张是上面的地图，</span><br><span class="line"># 后面两张是台站和事件在全球地图上的位置。</span><br><span class="line">inv = read_inventory()</span><br><span class="line">inv.plot(fig=fig1, show=False)</span><br><span class="line">cat = read_events()</span><br><span class="line">cat.plot(fig=fig1, show=False, title=&quot;&quot;, colorbar=False)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>这些代码绘制出来的图像是三个独立的图像，并没有绘制在一起。可能是BUG？<br><img src="basemap3.png"></p><h2 id="确定地点的带有Beachball的basemap-plot"><a href="#确定地点的带有Beachball的basemap-plot" class="headerlink" title="确定地点的带有Beachball的basemap plot"></a>确定地点的带有Beachball的basemap plot</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">import gzip</span><br><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from mpl_toolkits.basemap import Basemap</span><br><span class="line"></span><br><span class="line">from obspy.imaging.beachball import beach</span><br><span class="line"># read in topo data (on a regular lat/lon grid)</span><br><span class="line"># (SRTM data from: http://srtm.csi.cgiar.org/)</span><br><span class="line">with gzip.open(&quot;srtm_1240-1300E_4740-4750N.asc.gz&quot;) as fp:</span><br><span class="line">    srtm = np.loadtxt(fp, skiprows=8)</span><br><span class="line"># origin of data grid as stated in SRTM data file header</span><br><span class="line"># create arrays with all lon/lat values from min to max and</span><br><span class="line">lats = np.linspace(47.8333, 47.6666, srtm.shape[0])</span><br><span class="line">lons = np.linspace(12.6666, 13.0000, srtm.shape[1])</span><br><span class="line"># create Basemap instance with Mercator projection</span><br><span class="line"># we want a slightly smaller region than covered by our SRTM data</span><br><span class="line">m = Basemap(projection=&#x27;merc&#x27;, lon_0=13, lat_0=48,</span><br><span class="line">resolution=&quot;h&quot;,</span><br><span class="line">llcrnrlon=12.75, llcrnrlat=47.69, urcrnrlon=12.95,</span><br><span class="line">urcrnrlat=47.81)</span><br><span class="line"></span><br><span class="line"># create grids and compute map projection coordinates for lon/lat grid</span><br><span class="line">x, y = m(*np.meshgrid(lons, lats))</span><br><span class="line"></span><br><span class="line"># Make contour plot 绘制网格</span><br><span class="line">cs = m.contour(x, y, srtm, 40, colors=&quot;k&quot;, lw=0.5, alpha=0.3)</span><br><span class="line">m.drawcountries(color=&quot;red&quot;, linewidth=1) # 绘制国界线，用红色表示</span><br><span class="line"></span><br><span class="line"># Draw a lon/lat grid (20 lines for an interval of one degree)</span><br><span class="line">m.drawparallels(np.linspace(47, 48, 21), labels=[1, 1, 0, 0],</span><br><span class="line">fmt=&quot;%.2f&quot;,</span><br><span class="line">dashes=[2, 2])</span><br><span class="line">m.drawmeridians(np.linspace(12, 13, 21), labels=[0, 0, 1, 1],</span><br><span class="line">fmt=&quot;%.2f&quot;,</span><br><span class="line">dashes=[2, 2])</span><br><span class="line"></span><br><span class="line"># Plot station positions and names into the map</span><br><span class="line"># again we have to compute the projection of our lon/lat values</span><br><span class="line">lats = [47.761659, 47.7405, 47.755100, 47.737167]</span><br><span class="line">lons = [12.864466, 12.8671, 12.849660, 12.795714]</span><br><span class="line">names = [&quot; RMOA&quot;, &quot; RNON&quot;, &quot; RTSH&quot;, &quot; RJOB&quot;]</span><br><span class="line">x, y = m(lons, lats)</span><br><span class="line">m.scatter(x, y, 200, color=&quot;r&quot;, marker=&quot;v&quot;, edgecolor=&quot;k&quot;, zorder=3)</span><br><span class="line">for i in range(len(names)):</span><br><span class="line">    plt.text(x[i], y[i], names[i], va=&quot;top&quot;, family=&quot;monospace&quot;, weight=&quot;bold&quot;)</span><br><span class="line"></span><br><span class="line"># Add beachballs for two events</span><br><span class="line">lats = [47.751602, 47.75577]</span><br><span class="line">lons = [12.866492, 12.893850]</span><br><span class="line">x, y = m(lons, lats)</span><br><span class="line"># Two focal mechanisms for beachball routine, specified as [strike, dip, rake]</span><br><span class="line">focmecs = [[80, 50, 80], [85, 30, 90]]</span><br><span class="line">ax = plt.gca()</span><br><span class="line">for i in range(len(focmecs)):</span><br><span class="line">    b = beach(focmecs[i], xy=(x[i], y[i]), width=1000, linewidth=1)</span><br><span class="line">    b.set_zorder(10)</span><br><span class="line">    ax.add_collection(b)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="certain_basemap.png"></p><h2 id="带有beachball的全球Basemap"><a href="#带有beachball的全球Basemap" class="headerlink" title="带有beachball的全球Basemap"></a>带有beachball的全球Basemap</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from mpl_toolkits.basemap import Basemap</span><br><span class="line">from obspy.imaging.beachball import beach</span><br><span class="line"></span><br><span class="line">m = Basemap(projection=&#x27;cyl&#x27;, lon_0=142.36929, lat_0=38.3215, resolution=&#x27;c&#x27;)</span><br><span class="line"></span><br><span class="line">m.drawcoastlines()</span><br><span class="line">m.fillcontinents()  # 填充大陆</span><br><span class="line">m.drawparallels(np.arange(-90., 120., 30.))</span><br><span class="line">m.drawmeridians(np.arange(0., 420., 60.))</span><br><span class="line">m.drawmapboundary()</span><br><span class="line"></span><br><span class="line">x, y = m(142.36929, 38.3215)</span><br><span class="line">focmecs = [0.136, -0.591, 0.455, -0.396, 0.046, -0.615]</span><br><span class="line"></span><br><span class="line">ax = plt.gca()</span><br><span class="line">b = beach(focmecs, xy=(x, y), width=10, linewidth=1, alpha=0.85)</span><br><span class="line">b.set_zorder(10)</span><br><span class="line">ax.add_collection(b)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="beachball_basemap.png"></p><h1 id="走时和射线路径绘制"><a href="#走时和射线路径绘制" class="headerlink" title="走时和射线路径绘制"></a>走时和射线路径绘制</h1><h2 id="走时"><a href="#走时" class="headerlink" title="走时"></a>走时</h2><p>绘制给定距离和相位的使用iasp91速度模型计算出的走时</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from obspy.taup import plot_travel_times</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line">print(ax)</span><br><span class="line">print(fig)</span><br><span class="line">ax = plot_travel_times(source_depth=10, ax=ax, fig=fig, phase_list=[&#x27;P&#x27;, &#x27;PP&#x27;, &#x27;S&#x27;], npoints=200)</span><br></pre></td></tr></table></figure><p><img src="travel_time.png"></p><h2 id="笛卡尔射线路径"><a href="#笛卡尔射线路径" class="headerlink" title="笛卡尔射线路径"></a>笛卡尔射线路径</h2><p>笛卡尔射线路径指直角坐标系下的二维射线路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from obspy.taup import TauPyModel</span><br><span class="line"></span><br><span class="line">model = TauPyModel(model=&#x27;iasp91&#x27;)</span><br><span class="line">arrivals = model.get_ray_paths(500, 140, phase_list=[&#x27;PP&#x27;, &#x27;SSS&#x27;])</span><br><span class="line">arrivals.plot_rays(plot_type=&#x27;cartesian&#x27;, phase_list=[&#x27;PP&#x27;, &#x27;SSS&#x27;], plot_all=False, legend=True)</span><br></pre></td></tr></table></figure><p><img src="cartesian_raypath.png"></p><h2 id="球形射线路径"><a href="#球形射线路径" class="headerlink" title="球形射线路径"></a>球形射线路径</h2><p>使用plot_rays()方法，绘制参数为spherical。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from obspy.taup.tau import Arrivals</span><br><span class="line">from obspy.taup import TauPyModel</span><br><span class="line"></span><br><span class="line">model = TauPyModel(model=&#x27;iasp91&#x27;)</span><br><span class="line">arrivals = model.get_ray_paths(500, 140, phase_list=[&#x27;PP&#x27;, &#x27;SSS&#x27;])</span><br><span class="line">arrivals.plot_rays(plot_type=&#x27;spherical&#x27;, phase_list=[&#x27;PP&#x27;, &#x27;SSS&#x27;], plot_all=False, legend=True)</span><br></pre></td></tr></table></figure><p><img src="Spherical_raypath.png"></p><h2 id="多距离射线路径"><a href="#多距离射线路径" class="headerlink" title="多距离射线路径"></a>多距离射线路径</h2><p>能够绘制多个震中距台站的射线路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from obspy.taup.tau import plot_ray_paths</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(subplot_kw=dict(polar=True))</span><br><span class="line">ax = plot_ray_paths(source_depth=1000, ax=ax, fig=fig, phase_list=[&#x27;P&#x27;, &#x27;PKP&#x27;], npoints=6)</span><br></pre></td></tr></table></figure><ul><li>npoints: Number of receivers to plot, 但是在图中看不出来含义。</li></ul><h2 id="高级示例"><a href="#高级示例" class="headerlink" title="高级示例"></a>高级示例</h2><p>绘制了更多震相和台站的射线路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from obspy.taup import TauPyModel</span><br><span class="line">PHASES = [</span><br><span class="line">    # Phase, distance</span><br><span class="line">    (&#x27;P&#x27;, 26),</span><br><span class="line">    (&#x27;PP&#x27;, 60),</span><br><span class="line">    (&#x27;PPP&#x27;, 94),</span><br><span class="line">    (&#x27;PPS&#x27;, 155),</span><br><span class="line">    (&#x27;p&#x27;, 3),</span><br><span class="line">    (&#x27;pPcP&#x27;, 100),</span><br><span class="line">    (&#x27;PKIKP&#x27;, 170),</span><br><span class="line">    (&#x27;PKJKP&#x27;, 194),</span><br><span class="line">    (&#x27;S&#x27;, 65),</span><br><span class="line">    (&#x27;SP&#x27;, 85),</span><br><span class="line">    (&#x27;SS&#x27;, 134.5),</span><br><span class="line">    (&#x27;SSS&#x27;, 204),</span><br><span class="line">    (&#x27;p&#x27;, -10),</span><br><span class="line">    (&#x27;pP&#x27;, -37.5),(&#x27;s&#x27;, -3),</span><br><span class="line">    (&#x27;sP&#x27;, -49),</span><br><span class="line">    (&#x27;ScS&#x27;, -44),</span><br><span class="line">    (&#x27;SKS&#x27;, -82),</span><br><span class="line">    (&#x27;SKKS&#x27;, -120)]</span><br><span class="line">model = TauPyModel(model=&#x27;iasp91&#x27;)</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(subplot_kw=dict(polar=True))</span><br><span class="line"></span><br><span class="line"># Plot all pre-determined phases</span><br><span class="line">for phase, distance in PHASES:</span><br><span class="line">    arrivals = model.get_ray_paths(700, distance, phase_list=[phase])</span><br><span class="line">    ax = arrivals.plot_rays(plot_type=&#x27;spherical&#x27;,</span><br><span class="line">    legend=False, label_arrivals=True,</span><br><span class="line">    plot_all=True, show=False, ax=ax)</span><br><span class="line"></span><br><span class="line"># Annotate regions</span><br><span class="line">ax.text(0, 0, &#x27;Solid\ninner\ncore&#x27;,</span><br><span class="line">horizontalalignment=&#x27;center&#x27;,</span><br><span class="line">verticalalignment=&#x27;center&#x27;,</span><br><span class="line">bbox=dict(facecolor=&#x27;white&#x27;, edgecolor=&#x27;none&#x27;,</span><br><span class="line">alpha=0.7))</span><br><span class="line">ocr = (model.model.radius_of_planet -</span><br><span class="line">(model.model.s_mod.v_mod.iocb_depth +</span><br><span class="line">model.model.s_mod.v_mod.cmb_depth) / 2)</span><br><span class="line">ax.text(np.deg2rad(180), ocr, &#x27;Fluid outer core&#x27;,</span><br><span class="line">horizontalalignment=&#x27;center&#x27;,</span><br><span class="line">bbox=dict(facecolor=&#x27;white&#x27;, edgecolor=&#x27;none&#x27;,</span><br><span class="line">alpha=0.7))</span><br><span class="line">mr = model.model.radius_of_planet - model.model.s_mod.v_mod.cmb_depth / 2</span><br><span class="line">ax.text(np.deg2rad(180), mr, &#x27;Solid mantle&#x27;, horizontalalignment=&#x27;center&#x27;,</span><br><span class="line">bbox=dict(facecolor=&#x27;white&#x27;, edgecolor=&#x27;none&#x27;, alpha=0.7))</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="morestations.png"></p>]]></content>
      
      
      <categories>
          
          <category> 地震学常用软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Obspy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地震资料解释基础作业整理</title>
      <link href="/2022/11/11/%E5%9C%B0%E9%9C%87%E8%B5%84%E6%96%99%E8%A7%A3%E9%87%8A%E5%9F%BA%E7%A1%80%E4%BD%9C%E4%B8%9A%E6%95%B4%E7%90%86/"/>
      <url>/2022/11/11/%E5%9C%B0%E9%9C%87%E8%B5%84%E6%96%99%E8%A7%A3%E9%87%8A%E5%9F%BA%E7%A1%80%E4%BD%9C%E4%B8%9A%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="地震资料解释基础整理的习题总结"><a href="#地震资料解释基础整理的习题总结" class="headerlink" title="地震资料解释基础整理的习题总结"></a>地震资料解释基础整理的习题总结</h1><h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><p><img src="1-1.jpg" alt="1"></p><p><img src="1-2.jpg" alt="1"></p><p><img src="1-3.jpg" alt="1"></p><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><p><img src="2-1.jpg" alt="1"></p><p><img src="2-2.jpg" alt="1"></p><p><img src="2-3.jpg" alt="1"></p><p><img src="2-4.jpg" alt="1"></p><h1 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h1><p><img src="3-1.jpg" alt="1"></p><p><img src="3-2.jpg" alt="1"></p><p><img src="3-3.jpg" alt="1"></p><p><img src="3-4.jpg" alt="1"></p><p><img src="3-5.jpg" alt="1"></p><h1 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h1><p><img src="4-1.jpg" alt="1"></p><p><img src="4-2.jpg" alt="1"></p><p><img src="4-3.jpg" alt="1"></p><h1 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h1><p><img src="5-1.jpg" alt="1"></p><p><img src="5-2.jpg" alt="1"></p><p><img src="5-3.jpg" alt="1"></p><p><img src="5-4.jpg" alt="1"></p><h1 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h1><p><img src="6-1.jpg" alt="1"></p><p><img src="6-2.jpg" alt="1"></p><p><img src="6-3.jpg" alt="1"></p><p><img src="6-4.jpg" alt="1"></p><h1 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h1><p><img src="7-1.jpg" alt="1"></p><p><img src="7-2.jpg" alt="1"></p><p><img src="7-3.jpg" alt="1"></p><h1 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h1><p><img src="8-1.jpg" alt="1"></p><p><img src="8-2.jpg" alt="1"></p><p><img src="8-3.jpg" alt="1"></p><h1 id="第九章"><a href="#第九章" class="headerlink" title="第九章"></a>第九章</h1><p><img src="9-1.jpg" alt="1"></p><p><img src="9-2.jpg" alt="1"></p><p><img src="9-3.jpg" alt="1"></p><h1 id="第十章"><a href="#第十章" class="headerlink" title="第十章"></a>第十章</h1><p><img src="10-1.jpg" alt="1"></p><p><img src="10-2.jpg" alt="1"></p><p><img src="10-3.jpg" alt="1"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>[1].<a href>曹丹平等编著.地震资料解释基础 北京：石油工业出版社，2020.10</a></p><p>[2].<a href>陆基孟,王永刚.地震勘探原理 .东营:中国石油大学华东出版社,2009.2</a></p>]]></content>
      
      
      <categories>
          
          <category> 作业布置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 地震勘探 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Obspy地震数据下载脚本</title>
      <link href="/2022/11/04/Obspy%E5%9C%B0%E9%9C%87%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E8%84%9A%E6%9C%AC/"/>
      <url>/2022/11/04/Obspy%E5%9C%B0%E9%9C%87%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>目前实现的功能：</p><ul><li>下载特定台站的地震波形</li><li>保存为.mseed文件，或者更改format属性保存sac文件等</li></ul><p>缺陷，之后进行改进：</p><ul><li>一次运行只能保存一个台站的波形数据</li><li>保存的数据为mseed文件，其中所有的波形均在这一个mseed文件中。</li><li>文件命名并不全面，文件内部的波形未重新命名。</li></ul><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">from obspy.core import read</span><br><span class="line">import obspy</span><br><span class="line">from obspy.clients.fdsn import Client</span><br><span class="line">from obspy import UTCDateTime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def sigle_net(time1, time2):  # 单个台站数据返回</span><br><span class="line">    net = input(&#x27;Please input the network, default is IU:&#x27;)</span><br><span class="line">    if net == &#x27;&#x27;:</span><br><span class="line">        net = &#x27;IU&#x27;</span><br><span class="line">    print(f&#x27;You have choosen ***&#123;net&#125;*** as the network.&#x27;)</span><br><span class="line"></span><br><span class="line">    print(&quot;***************************************************&quot;)</span><br><span class="line">    print(&quot;Please wait a minute, you will see info about the network:&quot;)</span><br><span class="line">    print(&quot;***************************************************&quot;)</span><br><span class="line"></span><br><span class="line">    downloadstations = Client().get_stations(network=net, station=&#x27;*&#x27;, location=&#x27;*&#x27;, starttime=time1, endtime=time2, level=&#x27;response&#x27;)</span><br><span class="line">    print(downloadstations)</span><br><span class="line">    print(&#x27;You could choose the stations, locations and channel, and they are shown thereinbefore.&#x27;)</span><br><span class="line"></span><br><span class="line">    print(&#x27;Default means you could just **enter** or make a space to show there is no word.&#x27;)</span><br><span class="line"></span><br><span class="line">    stat = input(&#x27;Please input the station, default is all stations:&#x27;)</span><br><span class="line">    if stat == &#x27;&#x27; or &#x27; &#x27;:</span><br><span class="line">        stat = &#x27;*&#x27;</span><br><span class="line">    loc = input(&#x27;Please input the location, default is all locations:&#x27;)</span><br><span class="line">    if loc == &#x27;&#x27; or &#x27; &#x27;:</span><br><span class="line">        loc = &#x27;*&#x27;</span><br><span class="line">    cha = input(&#x27;Please input the channel, default is all channels:&#x27;)</span><br><span class="line">    if cha == &#x27;&#x27; or &#x27; &#x27;:</span><br><span class="line">        cha = &#x27;*&#x27;</span><br><span class="line">    res = input(&#x27;If you want response? Please input Y/N:&#x27;)</span><br><span class="line"></span><br><span class="line">    print(&quot;***************************************************&quot;)</span><br><span class="line">    print(&quot;Data is getting...&quot;)</span><br><span class="line">    print(&quot;***************************************************&quot;)</span><br><span class="line"></span><br><span class="line">    while True:  # 循环表示</span><br><span class="line">        if res == &#x27;Y&#x27; or res == &#x27;y&#x27;:</span><br><span class="line">            res = &#x27;response&#x27;</span><br><span class="line">            data = Client().get_waveforms(network=net, station=stat, location=loc, channel=cha, starttime=time1, endtime=time2, attach_response=True)</span><br><span class="line">            break</span><br><span class="line">        elif res == &#x27;N&#x27; or res == &#x27;n&#x27;:</span><br><span class="line">            data = Client().get_waveforms(network=net, station=stat, location=loc, channel=cha, starttime=time1, endtime=time2, attach_response=False)</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            res = input(&#x27;You have input the wrong world, please input it again:&#x27;)</span><br><span class="line">    info = &#123;&#x27;network&#x27;: net, &#x27;station&#x27;: stat, &#x27;location&#x27;: loc, &#x27;channel&#x27;: cha&#125;</span><br><span class="line">    print(&#x27;Have got the data.&#x27;)</span><br><span class="line">    return data, info</span><br><span class="line"></span><br><span class="line">timest, timee = input(&#x27;Please input the time range of the data, use space for interval(e.g. 2022-01-01T00:00:00):\n&#x27;).split(&#x27; &#x27;)</span><br><span class="line">timest, timee = UTCDateTime(timest), UTCDateTime(timee)</span><br><span class="line">import os</span><br><span class="line">path = (&#x27;DATA/&#x27;)</span><br><span class="line">check = os.path.isdir(path)</span><br><span class="line">if check == False:</span><br><span class="line">    os.mkdir(path)</span><br><span class="line"></span><br><span class="line">quantity = input(&#x27;How mant networks do you want? If you want more than 1 network, Please input its quantity, or just **enter**:&#x27;)</span><br><span class="line">if quantity == &#x27;&#x27; or quantity == 1:  # 避免出现输入1的情况导致错误  保存波形文件</span><br><span class="line">    [data, info] = sigle_net(timest, timee)</span><br><span class="line">    filename = (path  + timest + &#x27;.&#x27; + info[&quot;network&quot;] + &#x27;.&#x27; + info[&quot;station&quot;] + &#x27;.&#x27; +</span><br><span class="line">                info[&#x27;location&#x27;] + &#x27;.&#x27; + info[&quot;channel&quot;] + &#x27;.mseed&#x27;)   # 目前信息不全，之后寻找更多信息补充</span><br><span class="line">    data.write(filename, format=&quot;mseed&quot;)  # 目前只能保存一整个mseed文件。</span><br><span class="line"></span><br><span class="line">print(data)</span><br><span class="line">print(type(data))</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">else:</span><br><span class="line">    data = multi_net(quantity, times, timee)</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 地震学常用软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Obspy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Introduction to Seismology习题</title>
      <link href="/2022/11/03/Introduction-to-Seismology%E4%B9%A0%E9%A2%98/"/>
      <url>/2022/11/03/Introduction-to-Seismology%E4%B9%A0%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="这里整理课本习题"><a href="#这里整理课本习题" class="headerlink" title="这里整理课本习题"></a>这里整理课本习题</h1><p>有些习题未完成，之后会持续补充…</p><h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><p><img src="1.1.jpg" alt="1"><br><img src="1.2.jpg" alt="1"><br><img src="1.3.jpg" alt="1"><br><img src="1.4.jpg" alt="1"></p><h1 id="Chapter-2"><a href="#Chapter-2" class="headerlink" title="Chapter 2"></a>Chapter 2</h1><p><img src="2.1.jpg" alt="1"><br><img src="2.2.jpg" alt="1"><br><img src="2.3.jpg" alt="1"></p>]]></content>
      
      
      <categories>
          
          <category> 作业布置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Introduction to Seismology </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fortran初探</title>
      <link href="/2022/11/01/Fortran%E5%88%9D%E6%8E%A2/"/>
      <url>/2022/11/01/Fortran%E5%88%9D%E6%8E%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>[Fortran权威指南&#x2F;(英)奇弗斯(Chivers,I.),(英)斯莱索尔姆(Sleightholme,J.)著；陈宝国等译.–北京：人民邮电出版社，2009.10]</p><p><a href="https://www.yiibai.com/fortran/fortran_basic_input_output.html">https://www.yiibai.com/fortran/fortran_basic_input_output.html</a></p><h1 id="基础内容"><a href="#基础内容" class="headerlink" title="基础内容"></a>基础内容</h1><p>！ 作为注释标记</p><h3 id="Fortran规则："><a href="#Fortran规则：" class="headerlink" title="Fortran规则："></a>Fortran规则：</h3><ul><li>自由源格式</li><li>不区分大小写</li><li>存在语句顺序<ul><li>PROGRAM</li><li>类型声明语句</li><li>处理与I&#x2F;O语句</li><li>END PROGRAM</li></ul></li><li>！用于引入注释</li><li>变量名称长度最多31字符，包括_</li><li>每行最多132个字符</li><li>最多可以允许39个连续行</li><li>如果不使用<code>IMPLICIT NONE</code>语句，则没有显式声明的变量被看成默认的类型。即：首个字符是A-H或O-Z，则默认为REAL型。若为I-N，则默认INTEGER型。</li></ul><h3 id="1、输出你的名字"><a href="#1、输出你的名字" class="headerlink" title="1、输出你的名字"></a>1、输出你的名字</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PROGRAM ch0701      ！程序命名</span><br><span class="line">!</span><br><span class="line">! This program reads in and prints out a name</span><br><span class="line">!</span><br><span class="line">IMPLICIT NONE   ！ 表示使用的每个数据项的类型必须是显式的</span><br><span class="line">CHARACTER*20 :: First_Name ! 类型声明</span><br><span class="line">!</span><br><span class="line">PRINT *,&#x27; Type in your first name.&#x27;     ！ 输出语句</span><br><span class="line">PRINT *,&#x27; up to 20 characters&#x27;</span><br><span class="line">READ *,First_Name       ！读取键盘输入的字符</span><br><span class="line">PRINT *,First_Name</span><br><span class="line">!</span><br><span class="line">END PROGRAM ch0701   ！ 终止程序</span><br></pre></td></tr></table></figure><h3 id="2、计算平均值"><a href="#2、计算平均值" class="headerlink" title="2、计算平均值"></a>2、计算平均值</h3><p>遵循的原则：声明所有变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PROGRAM ch0702   ！程序命名</span><br><span class="line">!</span><br><span class="line">! This program reads in three numbers and sums</span><br><span class="line">! and averages them</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line">IMPLICIT NONE   ！ 表示使用的每个数据项的类型必须是显式的</span><br><span class="line">REAL :: N1,N2,N3,Average = 0.0,Total = 0.0</span><br><span class="line">INTEGER :: N = 3</span><br><span class="line">PRINT *,&#x27; Type in three numbers.&#x27;</span><br><span class="line">PRINT *,&#x27; Separated by spaces or commas&#x27;</span><br><span class="line">READ *,N1,N2,N3</span><br><span class="line">Total= N1 + N2 + N3   ! 三个变量值相加</span><br><span class="line">AVERAGE=Total/N</span><br><span class="line">PRINT *,&#x27;Average of the numbers is &#x27;,Average</span><br><span class="line">END PROGRAM ch0702</span><br></pre></td></tr></table></figure><h1 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h1><p>运算法则与C或Python相同，但是需要注意：</p><ul><li>求幂运算：从右往左的顺序</li><li>加减法：不需要注意运算顺序</li><li>乘法除法：非整型运算不一定按照从左到右的顺序，需要加括号保证顺序<br>注意：使用时加括号时最好的方式。</li></ul><h3 id="截断"><a href="#截断" class="headerlink" title="截断"></a>截断</h3><p>注意截断。整型截断为舍入</p><h3 id="PARAMETER-语句"><a href="#PARAMETER-语句" class="headerlink" title="PARAMETER 语句"></a>PARAMETER 语句</h3><pre><code>REAL , PARAMETER :: value=12</code></pre><p>类似于C语言中的固定变量，即在类型声明语句之前将某个变量名与变量关联，从而不可更改该变量名的值。<br>类似于<code>#define</code>。</p><h3 id="精度问题"><a href="#精度问题" class="headerlink" title="精度问题"></a>精度问题</h3><h3 id="变量状态"><a href="#变量状态" class="headerlink" title="变量状态"></a>变量状态</h3><ul><li>已确定的状态 defined：已定义值</li><li>未确定的状态 undefined：未定义值</li></ul><h3 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h3><h4 id="2、运行示例4"><a href="#2、运行示例4" class="headerlink" title="2、运行示例4"></a>2、运行示例4</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">PROGRAM ch0804</span><br><span class="line">implicit none</span><br><span class="line">real :: light_minute, distance, elapse</span><br><span class="line">integer :: minute, second </span><br><span class="line">real, parameter :: light_year=9.46*10**12</span><br><span class="line"></span><br><span class="line">light_minute = light_year/(365.25 * 24.0 * 60.0)</span><br><span class="line">distance = 150.0 * 10 ** 6</span><br><span class="line">elapse = distance / light_minute</span><br><span class="line">minute = elapse</span><br><span class="line">second = (elapse - minute) * 60</span><br><span class="line">print *,&#x27; light takes &#x27; , minute, &#x27; Minutes&#x27;</span><br><span class="line">print *,&#x27;             &#x27; , second, &#x27; seconds&#x27;</span><br><span class="line">print *,&#x27; To reach the earth from the sum&#x27;</span><br><span class="line">END PROGRAM ch0804</span><br></pre></td></tr></table></figure><p>在运行ch0804出现错误：</p><pre><code>Error: Result of exponentiation at (1) exceeds the range of INTEGER(4)</code></pre><p>表示结果超出整型范围。</p><p>疑问：？？？ 未解决</p><h4 id="计算摆的周期"><a href="#计算摆的周期" class="headerlink" title="计算摆的周期"></a>计算摆的周期</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PROGRAM period_of_pendulum</span><br><span class="line">implicit none</span><br><span class="line">real :: length,T</span><br><span class="line">real , parameter :: pi = 3.1415926535</span><br><span class="line">print *,&#x27;Please input the length of pendulum:&#x27;</span><br><span class="line">read *, length</span><br><span class="line">T = 2 * Pi * (length / 9.81) ** .5</span><br><span class="line">print *,&#x27;The period is &#x27;, T, &#x27;seconds.&#x27;</span><br><span class="line">end program period_of_pendulum</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> Please input the length of pendulum:</span><br><span class="line">1</span><br><span class="line"> The period is    2.00606656     seconds.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在计算器中的输出值为：2.006066681。</p><h4 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">program base_conversion</span><br><span class="line">real :: x1=1.0</span><br><span class="line">real :: x2=0.1</span><br><span class="line">real :: x3=0.01</span><br><span class="line">real :: x4=0.001</span><br><span class="line">real :: x5=0.0001</span><br><span class="line">print *,&#x27; &#x27;,x1</span><br><span class="line">print *,&#x27; &#x27;,x2</span><br><span class="line">print *,&#x27; &#x27;,x3</span><br><span class="line">print *,&#x27; &#x27;,x4</span><br><span class="line">print *,&#x27; &#x27;,x5</span><br><span class="line">end program base_conversion</span><br></pre></td></tr></table></figure><p>输出结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> 1.00000000    </span><br><span class="line">0.100000001    </span><br><span class="line"> 9.99999978E-03</span><br><span class="line"> 1.00000005E-03</span><br><span class="line"> 9.99999975E-05</span><br></pre></td></tr></table></figure><p>1.0保持不变，但是其他值均发生了改变。</p><h4 id="简单减法"><a href="#简单减法" class="headerlink" title="简单减法"></a>简单减法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">program subtract</span><br><span class="line">real :: a=1.0002</span><br><span class="line">real :: b=1.0001</span><br><span class="line">real :: c</span><br><span class="line">c=a-b</span><br><span class="line">print *,a</span><br><span class="line">print *,b</span><br><span class="line">print *,c</span><br><span class="line">end program subtract</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.00020003    </span><br><span class="line">1.00010002    </span><br><span class="line">1.00016594E-04</span><br></pre></td></tr></table></figure><p>理论结果为0.0001，但是结果输出不同了，而且a和b的值也发生了变化。这与十进制与二进制的转换有关。</p><h4 id="fortran下的表达式等价原则"><a href="#fortran下的表达式等价原则" class="headerlink" title="fortran下的表达式等价原则"></a>fortran下的表达式等价原则</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">program expression_equivalence</span><br><span class="line">real :: x=1.002</span><br><span class="line">real :: y=1.001</span><br><span class="line">real :: t1,t2,t3,t4,t5</span><br><span class="line">t1=x-y</span><br><span class="line">t2=x+y</span><br><span class="line">print *,t1</span><br><span class="line">print *,t2</span><br><span class="line">t3=t1*t2</span><br><span class="line">t4=x**2-y**2</span><br><span class="line">t5=x*x-y*y</span><br><span class="line">print *,t3</span><br><span class="line">print *,t4</span><br><span class="line">print *,t5</span><br><span class="line">end program expression_equivalence</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x-y=9.99927521E-04</span><br><span class="line">x+y=2.00300002    </span><br><span class="line">(x-y)*(x+y)=2.00285483E-03</span><br><span class="line">x^2-y^2=2.00295448E-03</span><br><span class="line">x*x-y*y=2.00295448E-03</span><br></pre></td></tr></table></figure><p>计算器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x-y=0.001</span><br><span class="line">x+y=2.003  </span><br><span class="line">(x-y)*(x+y)=2.003E-3</span><br><span class="line">x^2-y^2=2.003E-3</span><br><span class="line">x*x-y*y=2.003E-3</span><br></pre></td></tr></table></figure><p>LibreOffice：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x-y=0.001</span><br><span class="line">x+y=2.003  </span><br><span class="line">(x-y)*(x+y)=0.002003</span><br><span class="line">x^2-y^2=0.002003</span><br><span class="line">x*x-y*y=0.002003</span><br></pre></td></tr></table></figure><h4 id="ch0804变形"><a href="#ch0804变形" class="headerlink" title="ch0804变形"></a>ch0804变形</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">PROGRAM ch0804changed</span><br><span class="line">implicit none</span><br><span class="line">real :: light_minute, distance, elapse</span><br><span class="line">integer :: minute, second </span><br><span class="line">real :: light_year  ! 改变的为这一句和下面一句，将其改变为可变变量</span><br><span class="line">light_year=9.46*10**12</span><br><span class="line">light_minute = light_year/(365.25 * 24.0 * 60.0)</span><br><span class="line">distance = 150.0 * 10 ** 6</span><br><span class="line">elapse = distance / light_minute</span><br><span class="line">minute = elapse</span><br><span class="line">second = (elapse - minute) * 60</span><br><span class="line">print *,&#x27; light takes &#x27; , minute, &#x27; Minutes&#x27;</span><br><span class="line">print *,&#x27;             &#x27; , second, &#x27; seconds&#x27;</span><br><span class="line">print *,&#x27; To reach the earth from the sum&#x27;</span><br><span class="line">END PROGRAM ch0804changed</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    6 | light_year=9.46*10**12</span><br><span class="line">      |                  1</span><br><span class="line">Error: Result of exponentiation at (1) exceeds the range of INTEGER(4)</span><br></pre></td></tr></table></figure><p>疑问： ？？？未解决</p><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="DIMENSION-属性"><a href="#DIMENSION-属性" class="headerlink" title="DIMENSION 属性"></a>DIMENSION 属性</h2><p>使用dimension属性将变量定义为数组：</p><pre><code>real , dimension(1:100) :: wagesinteger , dimension(1:1000) :: sample</code></pre><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">program ch0901</span><br><span class="line">implicit none</span><br><span class="line">real :: total=0.0, average=0.0 !定义变量</span><br><span class="line">real , dimension(1:12) :: rainfall</span><br><span class="line">integer :: month</span><br><span class="line"></span><br><span class="line">print *,&#x27;Type in the rainfall values&#x27;</span><br><span class="line">print *,&#x27;one per line&#x27;</span><br><span class="line">do month=1,12   ! 使用do进行循环</span><br><span class="line">read *, rainfall(month)</span><br><span class="line">enddo</span><br><span class="line"></span><br><span class="line">do month=1,12</span><br><span class="line">total = total + rainfall(month)</span><br><span class="line">enddo</span><br><span class="line"></span><br><span class="line">average = total / 12</span><br><span class="line">print *,&#x27;average monthly rainfall was&#x27;</span><br><span class="line">print *, average</span><br><span class="line">end program ch0901</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> Type in the rainfall values</span><br><span class="line"> one per line</span><br><span class="line">23</span><br><span class="line">22</span><br><span class="line">24</span><br><span class="line">23</span><br><span class="line">21</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">12</span><br><span class="line">10</span><br><span class="line">45</span><br><span class="line">40</span><br><span class="line">44</span><br><span class="line"> average monthly rainfall was</span><br><span class="line">   24.2500000  </span><br></pre></td></tr></table></figure><h2 id="do循环"><a href="#do循环" class="headerlink" title="do循环"></a>do循环</h2><pre><code>do counter = start, end, increment......  ！语句enddo</code></pre><p>其中，increment默认为1，可以省略。</p><h2 id="使用参数设置数组大小"><a href="#使用参数设置数组大小" class="headerlink" title="使用参数设置数组大小"></a>使用参数设置数组大小</h2><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">program ch0902</span><br><span class="line">implicit none</span><br><span class="line"></span><br><span class="line">integer ,parameter :: number_of_people = 10</span><br><span class="line">real :: total=0.0, average=0.0 !定义变量</span><br><span class="line">integer :: person</span><br><span class="line">real , dimension(1:number_of_people) :: weight</span><br><span class="line"></span><br><span class="line">do person = 1, number_of_people</span><br><span class="line">print *,&#x27;type in the weight for person &#x27;, person</span><br><span class="line">read *,weight(person)</span><br><span class="line">total = total + weight(person)</span><br><span class="line">enddo</span><br><span class="line">average = total/number_of_people</span><br><span class="line"></span><br><span class="line">print *,&#x27;the total of the weights is &#x27;, total</span><br><span class="line">print *,&#x27;average weight is &#x27;, average</span><br><span class="line">print *,&#x27; &#x27;,number_of_people, &#x27; weights were &#x27;</span><br><span class="line"></span><br><span class="line">do person = 1, number_of_people</span><br><span class="line">print *,weight(person)</span><br><span class="line">enddo</span><br><span class="line">end program ch0902</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> type in the weight for person            1</span><br><span class="line">85</span><br><span class="line"> type in the weight for person            2</span><br><span class="line">76</span><br><span class="line"> type in the weight for person            3</span><br><span class="line">85</span><br><span class="line"> type in the weight for person            4</span><br><span class="line">90</span><br><span class="line"> type in the weight for person            5</span><br><span class="line">69</span><br><span class="line"> type in the weight for person            6</span><br><span class="line">83</span><br><span class="line"> type in the weight for person            7</span><br><span class="line">64</span><br><span class="line"> type in the weight for person            8</span><br><span class="line">57</span><br><span class="line"> type in the weight for person            9</span><br><span class="line">65</span><br><span class="line"> type in the weight for person           10</span><br><span class="line">76</span><br><span class="line"> the total of the weights is    750.000000    </span><br><span class="line"> average weight is    75.0000000    </span><br><span class="line">            10  weights were </span><br><span class="line">   85.0000000    </span><br><span class="line">   76.0000000    </span><br><span class="line">   85.0000000    </span><br><span class="line">   90.0000000    </span><br><span class="line">   69.0000000    </span><br><span class="line">   83.0000000    </span><br><span class="line">   64.0000000    </span><br><span class="line">   57.0000000    </span><br><span class="line">   65.0000000    </span><br><span class="line">   76.0000000   </span><br></pre></td></tr></table></figure><p>语句：</p><pre><code>real , dimension(number) :: weight</code></pre><p>若下界未指定，则为1。</p><h2 id="格式化输出形式"><a href="#格式化输出形式" class="headerlink" title="格式化输出形式"></a>格式化输出形式</h2><h3 id="format输出"><a href="#format输出" class="headerlink" title="format输出"></a>format输出</h3><p>常用描述符号与举例：<br>参考：<a href="https://www.yiibai.com/fortran/fortran_basic_input_output.html">https://www.yiibai.com/fortran/fortran_basic_input_output.html</a></p><p>例句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">print 100</span><br><span class="line">100 format (20x, &#x27;Length&#x27;, 20x,&#x27;period&#x27;)</span><br><span class="line"></span><br><span class="line">do number = 1,10</span><br><span class="line">print 200, length(number), T(number)</span><br><span class="line">200 format (20x, i5, 20x, f5.2)  </span><br><span class="line"> ！ 输出为length和T，其中20x表示空间格数，i5指整数5个长度。f为实数。</span><br><span class="line">enddo</span><br></pre></td></tr></table></figure><h2 id="思考题-1"><a href="#思考题-1" class="headerlink" title="思考题"></a>思考题</h2><h3 id="2、计算5个数的平均值"><a href="#2、计算5个数的平均值" class="headerlink" title="2、计算5个数的平均值"></a>2、计算5个数的平均值</h3><p>注意！ 定义数组时使用<code>:</code>分隔上下界，使用do循环使用<code>,</code>分隔上下界。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">program average_5</span><br><span class="line"></span><br><span class="line">integer , parameter :: quantity=5</span><br><span class="line">real , dimension(1 : quantity) :: numbers</span><br><span class="line">real :: total=0.0, average=0.0</span><br><span class="line">integer :: range</span><br><span class="line">do range=1,quantity</span><br><span class="line">print *,&#x27;Please input &#x27;,quantity,&#x27;numbers, the &#x27;, range,&#x27;one is:&#x27;</span><br><span class="line">read *,numbers(range)</span><br><span class="line">total = total + numbers(range)</span><br><span class="line">enddo</span><br><span class="line"></span><br><span class="line">average=total/quantity</span><br><span class="line">print *,&#x27;The average of &#x27;,quantity,&#x27;numbers is:&#x27;,average</span><br><span class="line"></span><br><span class="line">end program average_5</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> Please input            5 numbers, the            1 one is:</span><br><span class="line">5</span><br><span class="line"> Please input            5 numbers, the            2 one is:</span><br><span class="line">3.4</span><br><span class="line"> Please input            5 numbers, the            3 one is:</span><br><span class="line">0.6</span><br><span class="line"> Please input            5 numbers, the            4 one is:</span><br><span class="line">2.8</span><br><span class="line"> Please input            5 numbers, the            5 one is:</span><br><span class="line">8.9</span><br><span class="line"> The average of            5 numbers is:   4.14000034    </span><br></pre></td></tr></table></figure><h3 id="3-1、改写体重总数，计算身高总数和平均数"><a href="#3-1、改写体重总数，计算身高总数和平均数" class="headerlink" title="3-1、改写体重总数，计算身高总数和平均数"></a>3-1、改写体重总数，计算身高总数和平均数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">program ch0902</span><br><span class="line">implicit none</span><br><span class="line"></span><br><span class="line">integer ,parameter :: number_of_people = 10</span><br><span class="line">real :: total_weight=0.0, average_weight=0.0,total_height=0.0, average_height=0.0</span><br><span class="line">integer :: person</span><br><span class="line">real , dimension(1:number_of_people) :: weight, height</span><br><span class="line"></span><br><span class="line">do person = 1, number_of_people</span><br><span class="line">print *,&#x27;type in the weight and height for person &#x27;, person, &#x27;use space as the interval:&#x27;</span><br><span class="line">read *,weight(person), height(person)</span><br><span class="line">total_weight = total_weight + weight(person)</span><br><span class="line">total_height = total_height + height(person)</span><br><span class="line">enddo</span><br><span class="line">average_weight = total_weight/number_of_people</span><br><span class="line">average_height = total_height/number_of_people</span><br><span class="line"></span><br><span class="line">print *,&#x27;the total of the weights is &#x27;, total_weight, &#x27;the total of the heights is &#x27;, total_height</span><br><span class="line">print *,&#x27;average weight is &#x27;, average_weight, &#x27; average height is &#x27;, average_height</span><br><span class="line"></span><br><span class="line">print *,&#x27; &#x27;,number_of_people, &#x27; weights and heights were &#x27;</span><br><span class="line">print *,&#x27;^I&#x27;,&#x27;number_of_people&#x27;, &#x27;^I weights&#x27;,&#x27; ^I heights&#x27;</span><br><span class="line">do person = 1, number_of_people</span><br><span class="line">print *,person,&#x27;^I&#x27;,weight(person),&#x27;^I&#x27;, height(person)</span><br><span class="line">enddo</span><br><span class="line"></span><br><span class="line">end program ch0902</span><br></pre></td></tr></table></figure><p>忘了改program名了，但是也证明了内部program的名称和外部文件名称可以不同，以外部文件名为准。<br>输出：<br>（ps：输出有些杂乱，因为还没有掌握输出书写的一些方式。）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"> type in the weight and height for person            1 use space as the interval:</span><br><span class="line">85 1.85</span><br><span class="line"> type in the weight and height for person            2 use space as the interval:</span><br><span class="line">76 1.80</span><br><span class="line"> type in the weight and height for person            3 use space as the interval:</span><br><span class="line">85 1.85</span><br><span class="line"> type in the weight and height for person            4 use space as the interval:</span><br><span class="line">90 1.70</span><br><span class="line"> type in the weight and height for person            5 use space as the interval:</span><br><span class="line">69 1.75</span><br><span class="line"> type in the weight and height for person            6 use space as the interval:</span><br><span class="line">83 1.67</span><br><span class="line"> type in the weight and height for person            7 use space as the interval:</span><br><span class="line">64 1.55</span><br><span class="line"> type in the weight and height for person            8 use space as the interval:</span><br><span class="line">57 1.63</span><br><span class="line"> type in the weight and height for person            9 use space as the interval:</span><br><span class="line">65 1.79</span><br><span class="line"> type in the weight and height for person           10 use space as the interval:</span><br><span class="line">76 1.78</span><br><span class="line"> the total of the weights is    750.000000     the total of the heights is    17.3700008    </span><br><span class="line"> average weight is    75.0000000      average height is    1.73700011    </span><br><span class="line">            10  weights and heights were </span><br><span class="line"> ^Inumber_of_people^I weights ^I heights</span><br><span class="line">           1 ^I   85.0000000     ^I   1.85000002    </span><br><span class="line">           2 ^I   76.0000000     ^I   1.79999995    </span><br><span class="line">           3 ^I   85.0000000     ^I   1.85000002    </span><br><span class="line">           4 ^I   90.0000000     ^I   1.70000005    </span><br><span class="line">           5 ^I   69.0000000     ^I   1.75000000    </span><br><span class="line">           6 ^I   83.0000000     ^I   1.66999996    </span><br><span class="line">           7 ^I   64.0000000     ^I   1.54999995    </span><br><span class="line">           8 ^I   57.0000000     ^I   1.63000000    </span><br><span class="line">           9 ^I   65.0000000     ^I   1.78999996    </span><br><span class="line">          10 ^I   76.0000000     ^I   1.77999997 </span><br></pre></td></tr></table></figure><h3 id="3-2-计算BIM值"><a href="#3-2-计算BIM值" class="headerlink" title="3-2 计算BIM值"></a>3-2 计算BIM值</h3><p>使用语句：<br>    a.out &lt; data.dat &gt; results.txt</p><p>实现文件的输入和输出操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">program ch3_2</span><br><span class="line">implicit none</span><br><span class="line"></span><br><span class="line">integer ,parameter :: number_of_people = 10</span><br><span class="line">real :: total_weight=0.0, average_weight=0.0,total_height=0.0, average_height=0.0</span><br><span class="line">integer :: person</span><br><span class="line">real , dimension(1:number_of_people) :: weight, height, BMI</span><br><span class="line"></span><br><span class="line">do person = 1, number_of_people</span><br><span class="line">print *,&#x27;type in the weight and height for person &#x27;, person, &#x27;use space as the interval:&#x27;</span><br><span class="line">read *,weight(person), height(person)</span><br><span class="line">total_weight = total_weight + weight(person)</span><br><span class="line">total_height = total_height + height(person)</span><br><span class="line">BMI(person)=weight(person)/(height(person)**2)</span><br><span class="line">enddo</span><br><span class="line"></span><br><span class="line">average_weight = total_weight/number_of_people</span><br><span class="line">average_height = total_height/number_of_people</span><br><span class="line"></span><br><span class="line">print *,&#x27;the total of the weights is &#x27;, total_weight, &#x27;the total of the heights is &#x27;, total_height</span><br><span class="line">print *,&#x27;average weight is &#x27;, average_weight, &#x27; average height is &#x27;, average_height</span><br><span class="line"></span><br><span class="line">print *,&#x27; &#x27;,number_of_people, &#x27; weights and heights were &#x27;</span><br><span class="line">print *,&#x27;number_of_people&#x27;, &#x27;weights&#x27;,&#x27;heights&#x27;,&#x27;BMI&#x27;</span><br><span class="line">do person = 1, number_of_people</span><br><span class="line">print *,person ,weight(person), height(person), BMI(person)</span><br><span class="line">enddo</span><br><span class="line"></span><br><span class="line">end program ch3_2</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">文件 result.txt</span><br><span class="line"> type in the weight and height for person            1 use space as the interval:</span><br><span class="line"> type in the weight and height for person            2 use space as the interval:</span><br><span class="line"> type in the weight and height for person            3 use space as the interval:</span><br><span class="line"> type in the weight and height for person            4 use space as the interval:</span><br><span class="line"> type in the weight and height for person            5 use space as the interval:</span><br><span class="line"> type in the weight and height for person            6 use space as the interval:</span><br><span class="line"> type in the weight and height for person            7 use space as the interval:</span><br><span class="line"> type in the weight and height for person            8 use space as the interval:</span><br><span class="line"> type in the weight and height for person            9 use space as the interval:</span><br><span class="line"> type in the weight and height for person           10 use space as the interval:</span><br><span class="line"> the total of the weights is    750.000000     the total of the heights is    17.3700008    </span><br><span class="line"> average weight is    75.0000000      average height is    1.73700011    </span><br><span class="line">            10  weights and heights were </span><br><span class="line"> number_of_peopleweightsheightsBMI</span><br><span class="line">           1   85.0000000       1.85000002       24.8356457    </span><br><span class="line">           2   76.0000000       1.79999995       23.4567909    </span><br><span class="line">           3   85.0000000       1.85000002       24.8356457    </span><br><span class="line">           4   90.0000000       1.70000005       31.1418667    </span><br><span class="line">           5   69.0000000       1.75000000       22.5306129    </span><br><span class="line">           6   83.0000000       1.66999996       29.7608395    </span><br><span class="line">           7   64.0000000       1.54999995       26.6389179    </span><br><span class="line">           8   57.0000000       1.63000000       21.4535751    </span><br><span class="line">           9   65.0000000       1.78999996       20.2865086    </span><br><span class="line">          10   76.0000000       1.77999997       23.9868717    </span><br></pre></td></tr></table></figure><h3 id="6、计算摆的周期（制表）"><a href="#6、计算摆的周期（制表）" class="headerlink" title="6、计算摆的周期（制表）"></a>6、计算摆的周期（制表）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">program ch6</span><br><span class="line">implicit none</span><br><span class="line">real , parameter :: pi = 3.1415926535</span><br><span class="line">integer ,dimension(1:10) :: length</span><br><span class="line">integer :: number</span><br><span class="line">real ,dimension(1:10) :: T</span><br><span class="line">do number = 1,10,1</span><br><span class="line">length(number) = number</span><br><span class="line">enddo</span><br><span class="line">do number = 1,10</span><br><span class="line">T(number) = 2 * pi * (length(number) / 9.81) ** .5</span><br><span class="line">enddo</span><br><span class="line"></span><br><span class="line">print 100</span><br><span class="line">100 format (20x, &#x27;Length&#x27;, 20x,&#x27;period&#x27;)</span><br><span class="line"></span><br><span class="line">do number = 1,10</span><br><span class="line">print 200, length(number), T(number)</span><br><span class="line">200 format (20x, i5, 20x, f5.2)  </span><br><span class="line">enddo</span><br><span class="line"></span><br><span class="line">end program ch6</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Length                    period</span><br><span class="line">    1                     2.01</span><br><span class="line">    2                     2.84</span><br><span class="line">    3                     3.47</span><br><span class="line">    4                     4.01</span><br><span class="line">    5                     4.49</span><br><span class="line">    6                     4.91</span><br><span class="line">    7                     5.31</span><br><span class="line">    8                     5.67</span><br><span class="line">    9                     6.02</span><br><span class="line">   10                     6.34</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fortran </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地震学英文文献汇总</title>
      <link href="/2022/10/31/%E5%9C%B0%E9%9C%87%E5%AD%A6%E8%8B%B1%E6%96%87%E6%96%87%E7%8C%AE%E6%B1%87%E6%80%BB/"/>
      <url>/2022/10/31/%E5%9C%B0%E9%9C%87%E5%AD%A6%E8%8B%B1%E6%96%87%E6%96%87%E7%8C%AE%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h1><p>[1].<a href="https://www.sciencedirect.com/science/article/abs/pii/S0012821X15006275">Accurate focal depth determination of oceanic earthquakes using water-column reverberation and some implications for the shrinking plate hypothesis</a></p><p>[2].<a href="https://www.researchgate.net/publication/222576810_Mantle_transition_zone_beneath_the_Caribbean-South_American_plate_boundary_and_its_tectonic_implications">Mantle transition zone beneath the Caribbean-South American plate boundary and its tectonic implications</a></p><p>[3].<a href>Sharp Sides to the African Superplume</a></p><p>[4].<a href>The Yellowstone magmatic system from the mantle plume to the upper crust</a></p><p>[5].[Crust and uppermost mantle beneath the North China Craton, northeastern China, and the Sea of Japan from ambient noise tomography.]</p><h1 id="来源-1-Accurate-focal-depth-determination-of-oceanic-earthquakes-using-water-column-reverberation-and-some-implications-for-the-shrinking-plate-hypothesis-鸣震确定海洋地震的准确深度及板块收缩假说"><a href="#来源-1-Accurate-focal-depth-determination-of-oceanic-earthquakes-using-water-column-reverberation-and-some-implications-for-the-shrinking-plate-hypothesis-鸣震确定海洋地震的准确深度及板块收缩假说" class="headerlink" title="来源 [1] [Accurate focal depth determination of oceanic earthquakes using water-column reverberation and some implications for the shrinking plate hypothesis]鸣震确定海洋地震的准确深度及板块收缩假说"></a>来源 [1] [Accurate focal depth determination of oceanic earthquakes using water-column reverberation and some implications for the shrinking plate hypothesis]鸣震确定海洋地震的准确深度及板块收缩假说</h1><h3 id="单词"><a href="#单词" class="headerlink" title="单词"></a>单词</h3><p>seismogenic layer 孕震层</p><p>inversion 反演</p><p>triplication 波的重叠（多震相）</p><p>thermal 热的</p><p>dynamic 动力学的</p><p>oceanic 海洋的</p><p>lithosphere 岩石层</p><p>lithospheric 岩石圈的</p><p>hypocentral 震源位置的</p><p>reverberations 多次波</p><p>estimate 估计</p><p>simultaneous 同时发生的</p><p>alternative 可选的</p><p>located 近震</p><p>tension 拉张</p><p>horizontal 水平的</p><p>stress 应力</p><p>strain 应变</p><p>hypothesis 假说</p><p>thrust faulting 逆断层</p><p>normal faulting 正断层</p><p>indicating 指示</p><p>deviatoric stress 偏应力</p><p>tensor 张量</p><p>compression 压缩</p><p>consistent 一致的</p><p>prediction 预言</p><p>investigated 调查</p><p>perpendicular 垂直的 直立的</p><p>tectonophysics 构造物理</p><p>intraplate 板块内</p><p>settings 背景，环境</p><p>correspond 符合，一致</p><p>ridge 山脊</p><p>mid-ocean ridges 洋中脊</p><p>nucleate 有核的，产生</p><p>transform faults 转换断层</p><p>trench 海沟</p><p>infer 推断，推论，反演</p><p>P-wave first motion P波初动</p><p>coupling 耦合的</p><p>compressive 压缩</p><p>mechanisms 机制</p><p>interperted 被解释为……</p><p>depth-dependent 深度相关的</p><p>numerical modeling 数值模拟</p><p>competent </p><p>respectively</p><p>investigations 观测结果</p><p>establish 建立</p><p>measurable 可测量的</p><p>non-rigidity 非刚性的</p><p>plates 板块</p><p>accumulate 积累</p><p>displacement 位移</p><p>non-negligible 不可忽略的</p><p>manifested 显然的</p><p>centroid-moment tensors 中心矩张量</p><p>event 事件（地震学）；同相轴（地震勘探）</p><p>tradeoff 具有相关性的，互相制约的，一般用作 The tradeoff between A and B</p><p>identify 标识，识别，标定</p><p>depth phases 深度震相</p><p>arrival time 到时</p><p>sophisticated 复杂有效的</p><p>routine 常规的</p><p>constrain 约束</p><p>assuming 假设</p><p>source time function 震源时间函数</p><p>iterative 迭代的</p><p>fitting 拟合</p><p>determine 测定</p><p>teleseismic 远震</p><p>intermediate-size earthquakes 中等大小地震（5-6级）</p><p>increasingly challenging </p><p>isolate 分离</p><p>CAP (cut-and-paste) 剪切粘贴</p><p>optimum 相对来说的最优解</p><p>swell-generated</p><p>periodically 周期性地</p><p>shallow 浅的</p><p>systematically 系统性地</p><p>investigate 观察</p><p>grid-search based algorithm 基于网格搜索的算法</p><p>summed 叠加的</p><p>stack 叠加（地震勘探）</p><p>relocated 重定位</p><p>deformation 变形</p><p>asthenosphere 软流圈</p><p>take off angle 离源角</p><p>discretize 离散化</p><p>triplications 三倍的</p><p>ray paths 射线路径</p><p>transport equation 输运方程</p><p>ray tracing 射线追踪</p><p>ray parameters 射线参数</p><p>lefthand LHS 方程左项</p><p>LRS 方程右项</p><p>signal-to-noise ratio 信噪比（S&#x2F;N或SNR）</p><p>sampling interval 采样间隔</p><p>receiver function 接收函数</p><p>shear wave spliting 横波分裂</p><p>signal window length 信号窗宽度</p><p>tomography-velocity structure 层析成像</p><p>attanuation 衰减</p><p>full wave inversion-velocity structure 全波形反演</p><p>joint inversion 联合反演</p><p>modified 改进的</p><p>continental 大陆的</p><p>taken from 来自于</p><p>field data 实际数据</p><p>increment 间隔</p><p>align 对齐</p><p>linearly stack 线性叠加</p><p>exact 相同</p><p>former 前者</p><p>investigated 调查 研究</p><p>seismicity 地震活动性</p><p>termed 标识</p><p>regions  区域</p><p>strike-slip 走滑型</p><p>thrust 逆冲型</p><p>normal 正断层型</p><p>in contrast 与之相反的</p><p>listed 列举</p><p>temporary stations 流动台站</p><p>broadband stations 宽频地震仪（台站）</p><p>pre-processed 预处理</p><p>post-processed 后处理</p><p>Deep Probe Experiment 深探测实验</p><p>normalized to unity 归一化</p><p>ruptured 破裂的</p><p>perturbed 扰动</p><p>associated 关联的</p><p>converted 转换</p><p>transmission coefficient 透射系数</p><p>conventional（traditional）传统的</p><p>robust 稳定的</p><p>utilizes 利用</p><p>relocated 重定位</p><p>slight 轻微的</p><p>regime 状态</p><p>parallel 平行</p><p>decouple 解耦</p><p>joint 接合处</p><p>pattern 辐射花样图</p><p>orthogonal 直角的</p><h3 id="句式"><a href="#句式" class="headerlink" title="句式"></a>句式</h3><ul><li>… ,indicating that …  指示，表明</li></ul><p>例：The shallow and deep events are determined to be a thrust and normal earthquake, respectively, <strong>indicating that</strong> the stress field within the oceanic<br>lithosphere changes from horizontal deviatoric compression to horizontal deviatoric tension as depth increase, which is consistent with the prediction<br>of lithospheric cooling models.</p><ul><li>…A, consistent with B… A与B一致 （可以替换为： indicating that, suggesting that,suggest that）</li></ul><p>例：Furthermore, we show that the P-axis of the newly investigated thrust-faulting earthquake is perpendicular to that of<br>the previously studied thrust event, <strong>consistent with</strong> the predictions of the shrinking-plate hypothesis.</p><ul><li>along …, along …, along …. 在……中，在……中（出现）</li></ul><p>例：Depth estimates of oceanic earthquakes have been useful in the investigation of many problems of tectonophysics:<br>depth extent of the seismogenic layer in intraplate settings and the corresponding limiting temperature above which<br>earthquakes do not nucleate, <strong>along</strong> mid-ocean ridges, <strong>along</strong> transform faults, and <strong>along</strong> the outer rise of trenches.</p><ul><li>A, and found that B  基于事实A发现、认识B</li></ul><p>例： Sykes and Sbar studied focal mechanism solutions of earthquakes occurring off the mid-ocean ridge axis using P-wave<br>first motion data, <strong>and found that</strong> most earthquakes occurring in oceanic lithosphere older than ~15Ma indicate thrust faulting<br>while those observed in the younger oceanic lithophere indicate normal faulting.</p><ul><li><p>conclude that 得出结论</p></li><li><p>respectively 分别地<br>例：The upper and the lower competent lithosphere are in horizontal deviatoric compression and tension, <strong>respectively</strong>.</p></li></ul><p>We set the P-wave velocity to be 8.04, 6.30 and 1.50 km&#x2F;s for the mantle, crust, and seawater, <strong>respectively</strong>.</p><ul><li><p>have helped to …   有助于</p></li><li><p>the tradeoff between … A and B is …  A和B的争议…<br>例：<strong>The tradeoff between</strong> earthquake origin time and focal depth is a well known problem in hypocentral inversion.</p></li><li><p>… poorly constrained  不够准确<br>例：From only P-wave arrival time data from teleseismic stations, the focal depth is in many cases <strong>poorly constrained</strong>.</p></li><li><p>Here in after … 在这里，……<br>例： <strong>Here in after</strong> we refer to this grid search technique as the Z-H analysis, where Z is the focal depth measured from<br>the ocean floor.</p></li><li><p>by combining … 综合分析</p></li><li><p>and then 然后</p></li><li><p>In contract, …  相反的</p></li><li><p>… be also reversed when necessary.</p></li><li><p>with an uncertainty less than …</p></li></ul><h1 id="来源-2-Mantle-transition-zone-beneath-the-Caribbean-South-American-plate-boundary-and-its-tectonic-implications"><a href="#来源-2-Mantle-transition-zone-beneath-the-Caribbean-South-American-plate-boundary-and-its-tectonic-implications" class="headerlink" title="来源[2] Mantle transition zone beneath the Caribbean-South American plate boundary and its tectonic implications"></a>来源[2] Mantle transition zone beneath the Caribbean-South American plate boundary and its tectonic implications</h1><h3 id="单词-1"><a href="#单词-1" class="headerlink" title="单词"></a>单词</h3><p>keel 山根</p><p>topography 地形起伏</p><p>uplift 向上突起</p><p>scenario 现象</p><p>underlying 根本的 潜在的</p><p>bound 标记</p><p>slab 厚片，平板</p><p>subducting slab 俯冲带</p><p>high-velocity anomalies HVA 高速异常</p><p>global tomography models 全球层析成像模型</p><p>distinguish 辨别</p><p>lateral resolution 空间分辨率</p><p>coverage 覆盖范围</p><p>slopes 斜率</p><p>Clapeyron slopes 克拉贝龙斜率</p><p>phase transition 相变</p><p>map out 成像</p><p>up to 高达</p><p>it was generally believed that 所有人认为</p><p>anhydrous 脱水</p><p>portion 部分</p><p>mineral assemblages 矿物重整</p><p>water content 水含量</p><p>crucial 重要的</p><p>around the Pacific subduction zones 环太平洋俯冲地震带</p><p>mineral physic studies 矿物物理研究</p><p>water storage capacity 储水能力（化学式）</p><p>receiver function 接收函数</p><p>long-standing debate 长期存在的争议</p><p>primary goal （motivition）最初的目标</p><p>temporary 流动台站</p><p>permanent 永久台站</p><p>aperture 孔径</p><p>peak deployment 峰值数量部署（部署的数量较多）</p><p>dense 密集</p><p>national seismic network 国家地震台网</p><p>ocean bottom seismographs 海底地震仪</p><p>radial 径向</p><p>transverse 横向（与大圆面垂直的方向）</p><p>azimuth 方位角</p><p>water level 灌水深度</p><p>first arrival 初至</p><p>simple pulse 简单的脉冲</p><p>manually 人工的</p><p>corner frequency 角频率</p><p>inset 图中的小图</p><p>CCP common-conversion-point </p><p>arrow 箭头</p><p>respect 方向</p><p>3D travel-time anomalies 3D速度校正</p><p>equivalent to 等价于</p><p>overlaps 有交集的</p><p>by 乘</p><p>study area 研究区</p><p>reduce 压制，降低</p><p>linear stack 一阶叠加</p><p>increments 增长间隔，增长率</p><p>centroid 中心</p><p>uplift 上升</p><p>scenario 情况</p><p>unsaturated 不饱和</p><p>out-of-phase stacking 相位错位叠加</p><h1 id="来源-3-Sharp-Sides-to-the-African-Superplume"><a href="#来源-3-Sharp-Sides-to-the-African-Superplume" class="headerlink" title="来源[3]  Sharp Sides to the African Superplume"></a>来源[3]  Sharp Sides to the African Superplume</h1><h3 id="单词-2"><a href="#单词-2" class="headerlink" title="单词"></a>单词</h3><p>superplume 超级热柱<br>obliquely 斜的<br>fortuitous 偶然的<br>fit 拟合<br>dense 致密的<br>thermal structure 热结构<br>on geological time scales 在地质时间尺度上<br>be correlated with 与……相关<br>geoid anomaly 重力异常<br>bulk sound velocity 体波速度<br>laterally 横向的<br>lowermost mantle 下地幔底界<br>trade off 争议<br>patterns 样式、模式<br>African Low Velocity Structure （ALVS）非洲低速结构体<br>leans toward 倾斜<br>evident 明显的<br>multipathing 多路径<br>demonstrate 证明，线路<br>simultaneously 同时<br>plausible range 合理范围<br>Rayleigh number 瑞雷数<br>bouyancy number 浮力数</p><h1 id="来源-4-The-Yellowstone-magmatic-system-from-the-mantle-plume-to-the-upper-crust"><a href="#来源-4-The-Yellowstone-magmatic-system-from-the-mantle-plume-to-the-upper-crust" class="headerlink" title="来源[4] The Yellowstone magmatic system from the mantle plume to the upper crust"></a>来源[4] The Yellowstone magmatic system from the mantle plume to the upper crust</h1><h3 id="单词-3"><a href="#单词-3" class="headerlink" title="单词"></a>单词</h3><p>supervolcano 超级火山<br>silicic 硅质的，含硅的<br>unveil 揭示<br>magma body 岩浆体<br>lower-crustal 下地壳<br>melt fraction 熔融系数<br>critical 重要的<br>bimodal basaltic-rhyolitic 双模式玄武-流纹岩<br>hazard assesment 灾害评估，风险评价<br>extensive earthquakes 剧烈的地震<br>episodic ground deformation 阵发性地面变形<br>flux 值，系数<br>continental hydrothermal system 大陆热释放系统<br>caldera 火山口<br>cataclysmic eruption 灾难性喷发（火山）<br>rhyolitic lava flows 流纹岩质熔岩流（流变熔岩流）<br>lava 熔岩，火山岩<br>account for 解释<br>distinctly 清楚地<br>evidence 假设<br>volcanic plumbing system 火山通道系统<br>framework 构架，结构<br>elucidated 阐明，解释<br>caldera 破火山口<br>basaltic 玄武岩的<br>dominance 起主导作用<br>depict 描述<br>notably 显著地<br>intrude 侵入<br>mafic 铁镁质的<br>silicic 含硅的<br>fractionate 分开，分馏</p>]]></content>
      
      
      <categories>
          
          <category> 专业英语词汇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语词汇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地震数据下载进阶</title>
      <link href="/2022/10/28/%E5%9C%B0%E9%9C%87%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E8%BF%9B%E9%98%B6/"/>
      <url>/2022/10/28/%E5%9C%B0%E9%9C%87%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://seismology.gitee.io/seisnote/obspydoc/plot_3_read_and_write/">https://seismology.gitee.io/seisnote/obspydoc/plot_3_read_and_write/</a><br><a href="https://seisman.github.io/SAC_Docs_zh/fileformat/header-variables/">https://seisman.github.io/SAC_Docs_zh/fileformat/header-variables/</a></p><h1 id="读写波形数据"><a href="#读写波形数据" class="headerlink" title="读写波形数据"></a>读写波形数据</h1><h3 id="根据台网寻找台站相关内容"><a href="#根据台网寻找台站相关内容" class="headerlink" title="根据台网寻找台站相关内容"></a>根据台网寻找台站相关内容</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">from obspy.clients.fdsn import Client as fdsnclient</span><br><span class="line">from obspy import UTCDateTime</span><br><span class="line">t1 = UTCDateTime(&#x27;2014-10-28T00:00:00&#x27;)</span><br><span class="line">t2 = UTCDateTime(&#x27;2014-10-29T00:00:00&#x27;)</span><br><span class="line">fdsnstations = fdsnclient().get_stations(network=&quot;IU&quot;, station=&quot;*&quot;,</span><br><span class="line">                                 starttime=t1,</span><br><span class="line">                                 endtime=t2, level=&quot;response&quot; )  # 获取IU台网的所有台站信息</span><br><span class="line">                                 </span><br><span class="line">print(fdsnstations)  # 显示台站信息</span><br></pre></td></tr></table></figure><p>可以使用下述命令将台站信息保存为pz文件。</p><pre><code>fdsnstations.write(&#39;fdsnstations.pz&#39;, format=&#39;sacpz&#39;)</code></pre><p>但是运行的时候出现如下情况，但是文件却能够正常保存。</p><pre><code>UserWarning: IU.ADK.00.VM2 2009-07-19T00:00:00.000000Z has no paz. Skipping.warnings.warn(msg)</code></pre><p>也可以通过复制台站信息到文本编辑器保存，进行查找比对。但是通过write得到的信息更丰富。</p><p>文件内容为每个台站各个通道的信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">* **************************************************</span><br><span class="line">* NETWORK     : IU</span><br><span class="line">* STATION     : ADK</span><br><span class="line">* LOCATION    : 00</span><br><span class="line">* CHANNEL     : BH1</span><br><span class="line">* CREATED     : 2022-10-28T09:14:39.992066Z</span><br><span class="line">* START       : 2009-07-19T00:00:00.000000Z</span><br><span class="line">* END         : 2018-09-05T02:00:00.000000Z</span><br><span class="line">* DESCRIPTION : Adak, Aleutian Islands, Alaska</span><br><span class="line">* LATITUDE    : 51.8823</span><br><span class="line">* LONGITUDE   : -176.6842</span><br><span class="line">* ELEVATION   : 130.0</span><br><span class="line">* DEPTH       : 0.0</span><br><span class="line">* DIP (SEED)  : 0.0</span><br><span class="line">* AZIMUTH     : 0.0</span><br><span class="line">* SAMPLE RATE : 20.0</span><br><span class="line">* INPUT UNIT  : M</span><br><span class="line">* OUTPUT UNIT : counts</span><br><span class="line">* INSTTYPE    : None</span><br><span class="line">* INSTGAIN    : 2058.13 (m/s)</span><br><span class="line">* SENSITIVITY : 3453210000.0 (m/s)</span><br><span class="line">* A0          : 3948.34</span><br><span class="line">* **************************************************</span><br><span class="line">ZEROS 5</span><br><span class="line"> +0.000000e+00 +0.000000e+00</span><br><span class="line"> +0.000000e+00 +0.000000e+00</span><br><span class="line"> -2.377070e-02 +0.000000e+00</span><br><span class="line"> -2.377070e-02 +0.000000e+00</span><br><span class="line"> +0.000000e+00 +0.000000e+00</span><br><span class="line">POLES 6</span><br><span class="line"> -1.573350e-02 +0.000000e+00</span><br><span class="line"> -1.357340e-02 -1.234000e-02</span><br><span class="line"> -1.357340e-02 +1.234000e-02</span><br><span class="line"> -2.905130e-02 +0.000000e+00</span><br><span class="line"> -3.918000e+01 -4.912000e+01</span><br><span class="line"> -3.918000e+01 +4.912000e+01</span><br><span class="line">CONSTANT 1.363445e+13</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="通过台站具体信息申请数据"><a href="#通过台站具体信息申请数据" class="headerlink" title="通过台站具体信息申请数据"></a>通过台站具体信息申请数据</h3><pre><code>IUdata = fdsnclient().get_waveforms(network=&#39;IU&#39;, station= &#39;ADK&#39;, location=&#39;00&#39;, channel=&#39;*&#39;, starttime=t1, endtime=t2, attach_response=True) # 申请具有仪器响应的地震数据</code></pre><h3 id="将数据写入到文件中"><a href="#将数据写入到文件中" class="headerlink" title="将数据写入到文件中"></a>将数据写入到文件中</h3><pre><code>IUdata.write(&quot;test.mseed&quot;, format=&quot;mseed&quot;)</code></pre><p>可以选择mseed、sac等格式。</p><p>注意！！！<br>选择mseed格式时，所有波形保存在一个文件里。而sac格式文件会单独保存，每一个<br>波形文件将单独保存。其中三通道是分离的，但是文件名称保存需要注意。<br>可以通过Python循环命名，但是需要获取的均为三分量数据，否则会出现顺序错误。</p><h1 id="读写地震目录"><a href="#读写地震目录" class="headerlink" title="读写地震目录"></a>读写地震目录</h1><pre><code>catalogs = fdsnclient().get_events(starttime=t1, endtime=t2, minmagnitude=4,                    catalog=&quot;ISC&quot;) # 获取数据</code></pre><p>保存到本地，为kml格式：（谷歌地球专属格式）</p><pre><code>catalogs.write(&#39;catalogs&#39;, format=&#39;kml&#39;)</code></pre><p>或者直接从服务器读取</p><pre><code>cat = obspy.read_events() # 从服务器读取</code></pre><hr><h1 id="数据信息"><a href="#数据信息" class="headerlink" title="数据信息"></a>数据信息</h1><p>以数据IU_ADK_10_B01.sac的头段信息为例：</p><p>NPTS &#x3D; 3456000<br>数据点数   </p><p>B &#x3D; 5.000000e-04<br>文件起始时间</p><p>E &#x3D; 8.639998e+04<br>文件结束时间</p><p>IFTYPE &#x3D; TIME SERIES FILE<br><a href="https://zhiyuanshi1901.github.io/2022/08/15/SAC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/?highlight=iftype#iftype">sac文件类型</a></p><p>LEVEN &#x3D; TRUE<br>等时间间隔为True</p><p>DELTA &#x3D; 2.500000e-02<br>等间隔数据的数据点采样周期</p><p>DEPMIN &#x3D; -4.688610e+05<br>因变量Y的最小值</p><p>DEPMAX &#x3D; 4.731680e+05<br>因变量Y的最大值</p><p>DEPMEN &#x3D; 8.591051e+01<br>因变量Y的均值</p><p>KZDATE &#x3D; OCT 28 (301), 2014<br>字符数字格式的参考日期，由nzyear、nzjday（一年的第几天）导出</p><p>KZTIME &#x3D; 00:00:00.019<br>字符数字格式参考时间，由nzhour（时）、nzmin（分）、nzsec（秒）、nzmsec（毫秒）导出</p><p>IZTYPE &#x3D; BEGIN TIME<br><a href="https://zhiyuanshi1901.github.io/2022/08/15/SAC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#iztype">等效参考时刻</a></p><p>KSTNM &#x3D; ADK<br>台站名</p><p>KEVNM &#x3D; -12345  -12345<br>事件名，长度为16个字节</p><p>KHOLE &#x3D; 10<br>如果是核爆事件，则是孔眼标识；如果是其它时间，则是位置标识。</p><p>LOVROK &#x3D; TRUE<br>若为 TRUE，则磁盘里的原始数据可被覆盖，否则不可被覆盖。</p><p>NVHDR &#x3D; 6<br>SAC头段版本号。目前最新版本为6</p><p>SCALE &#x3D; 1.000000e+00<br>因变量比例因子，即真实物理场被乘以该比例因子而得到现有数据。</p><p>LPSPOL &#x3D; TRUE<br>在左手坐标系下，若三通道都是正极性则为真，否则为假。</p><p>LCALDA &#x3D; FALSE<br>全称为 Calculate Distance and Azimuth。<br>若为 TRUE，则当事件和台站的坐标被写入或被修改时，<br>头段变量 dist、gcarc、az、 baz 将自动计算，<br>否则不会被自动计算，SAC 头段中会存在信息的不兼容。</p><p>KCMPNM &#x3D; BH1<br>通道名,B、H、1分别代表宽频带、高增益、北向分量</p><p>KNETWK &#x3D; IU<br>台网名</p>]]></content>
      
      
      <categories>
          
          <category> 地震学常用软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Obspy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地震数据下载与数据命名规则</title>
      <link href="/2022/10/23/%E5%9C%B0%E9%9C%87%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/"/>
      <url>/2022/10/23/%E5%9C%B0%E9%9C%87%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/</url>
      
        <content type="html"><![CDATA[<h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><p>[Seisman数据命名规则]<a href="https://seisman.github.io/SAC_Docs_zh/appendix/naming-convections/#id3">https://seisman.github.io/SAC_Docs_zh/appendix/naming-convections/#id3</a></p><p>[地震学笔记]<a href="https://seismology.gitee.io/seisnote/obspydoc/plot_5_retrieving_data/">https://seismology.gitee.io/seisnote/obspydoc/plot_5_retrieving_data/</a></p><h1 id="数据获取"><a href="#数据获取" class="headerlink" title="数据获取"></a>数据获取</h1><p>数据获取有多种方式，例如脚本或者直接网页申请。在这里记录使用方法</p><hr><h2 id="获取数据需要的参数（数据命名规则）"><a href="#获取数据需要的参数（数据命名规则）" class="headerlink" title="获取数据需要的参数（数据命名规则）"></a>获取数据需要的参数（数据命名规则）</h2><p>标准SAC文件命名规则为：</p><pre><code>yyyy.ddd.hh.mm.ss.ffff.NN.SSSSS.LL.CCC.Q.SAC</code></pre><ul><li>yyyy: 年份</li><li>ddd: 年分中的第几天</li><li>hh.mm.ss.ffff: 时、分、秒、毫秒</li><li>NN: 台网代号</li><li>SSSSS: 台站名（代号）</li><li>LL: 位置码，台站中的地震仪编号</li><li>CCC: 通道名</li><li>Q: 质量控制标识</li><li>SAC: 格式后缀</li></ul><h3 id="Network-台网"><a href="#Network-台网" class="headerlink" title="Network 台网"></a>Network 台网</h3><p>台网名如下：<br>所有永久或临时台网：<a href="http://www.fdsn.org/networks/">http://www.fdsn.org/networks/</a></p><h3 id="Station-台站"><a href="#Station-台站" class="headerlink" title="Station 台站"></a>Station 台站</h3><h3 id="Location-位置码（同一台站的不同地震仪）"><a href="#Location-位置码（同一台站的不同地震仪）" class="headerlink" title="Location 位置码（同一台站的不同地震仪）"></a>Location 位置码（同一台站的不同地震仪）</h3><p>常见为空。</p><h3 id="Channel-通道"><a href="#Channel-通道" class="headerlink" title="Channel 通道"></a>Channel 通道</h3><p>通道名有三个字符。三个字符分别表示：频带码、仪器码、方位码。</p><h4 id="频带码（Band-Code）"><a href="#频带码（Band-Code）" class="headerlink" title="频带码（Band Code）"></a>频带码（Band Code）</h4><p>第一个字符表示仪器采样率以及响应频带等信息。</p><p>参考：<a href="https://seisman.github.io/SAC_Docs_zh/appendix/naming-convections/#id3">Seisman频带码表</a></p><h4 id="仪器码（Instrument-Code）"><a href="#仪器码（Instrument-Code）" class="headerlink" title="仪器码（Instrument Code）"></a>仪器码（Instrument Code）</h4><p>第二个字符表示不同的仪器传感器。</p><table><thead><tr><th>仪器码</th><th>说明</th><th></th></tr></thead><tbody><tr><td>H</td><td>High Gain Seismometer</td><td>高增益地震仪</td></tr><tr><td>L</td><td>Low Gain Seismometer</td><td>低增益地震仪</td></tr><tr><td>G</td><td>Gravimeter</td><td>重力仪</td></tr><tr><td>M</td><td>Mass position Seismometer</td><td>质量位置地震仪</td></tr><tr><td>N</td><td>Accelerometer</td><td>加速度计</td></tr></tbody></table><p>常见H 高增益仪器。</p><h4 id="方位码（Orientation-Code）"><a href="#方位码（Orientation-Code）" class="headerlink" title="方位码（Orientation Code）"></a>方位码（Orientation Code）</h4><ul><li>N E Z 南北向、东西向、垂向</li><li>1 2 3（Z） 3（Z）为垂向，1、2为正交的水平向，但并非南北东西向</li><li>T R Z 切向、径向、垂向</li><li>方位码 U V W 未知，可能与1 2 Z（3）相同</li></ul><p>注意：N、E、Z并非指正北等方向，与正北夹角2度以内的均可取N。以头段变量cmpaz和cmpinc为准（cmpaz也可能产生一定误差）。</p><h3 id="Quality-波形质量"><a href="#Quality-波形质量" class="headerlink" title="Quality 波形质量"></a>Quality 波形质量</h3><ul><li>D 不确定状态的数据</li><li>M 已合并的数据</li><li>R 原始波形数据</li><li>Q 经过质量控制的数据<br>常见M与Q。</li></ul><h3 id="Format-格式"><a href="#Format-格式" class="headerlink" title="Format 格式"></a>Format 格式</h3><ul><li>SAC格式</li><li>mSeed格式</li><li>miniSeed格式</li></ul><hr><h2 id="Web-Services-网页获取"><a href="#Web-Services-网页获取" class="headerlink" title="Web Services 网页获取"></a>Web Services 网页获取</h2><hr><h2 id="Obspy获取"><a href="#Obspy获取" class="headerlink" title="Obspy获取"></a>Obspy获取</h2><h3 id="服务器下载波形数据"><a href="#服务器下载波形数据" class="headerlink" title="服务器下载波形数据"></a>服务器下载波形数据</h3><p>使用get_waveforms()从服务器下载波形数据，<br>需要添加关键字参数自定义申请。</p><h4 id="申请单个数据"><a href="#申请单个数据" class="headerlink" title="申请单个数据"></a>申请单个数据</h4><p>参数：</p><pre><code>waveform = get_waveforms（台网名，台站名，位置码，通道名，波形开始时间，波形结束时间（s））</code></pre><ul><li><p>每个参数需要””，多个参数使用 , 隔开。</p></li><li><p>可以使用通配符，?和*</p></li><li><p>filename &#x3D; ‘文件名’waveform</p></li><li><p>attach_response&#x3D;True  添加仪器响应</p><p>  waveform.remove_response(output&#x3D;’VEL’) 去除仪器响应</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">from obspy.clients.fdsn import Client</span><br><span class="line">from obspy.clients.fdsn.header import URL_MAPPINGS # 数据中心列表</span><br><span class="line">from obspy import UTCDateTime # 时间模块</span><br><span class="line"></span><br><span class="line">client = Client(&quot;IRIS&quot;)  # 可以使用URL或者数据中心简写</span><br><span class="line"></span><br><span class="line">for key in sorted(URL_MAPPINGS): # 显示可用的数据中心列表</span><br><span class="line">    print(&quot;&#123;0:&lt;7&#125; &#123;1&#125;&quot;.format(key, URL_MAPPINGS[key]))</span><br><span class="line"></span><br><span class="line">t = UTCDateTime(&quot;2010-02-27T06:45:00.000&quot;)</span><br><span class="line"></span><br><span class="line"># 申请单个数据</span><br><span class="line">waveform = client.get_waveforms(&quot;IU&quot;, &quot;ANMO,AFI&quot;, &quot;0?&quot;, &quot;LH?&quot;, t, t + 60 * 60)  # 多个参数使用逗号分隔</span><br><span class="line">print(waveform)</span><br></pre></td></tr></table></figure><h4 id="申请多组数据"><a href="#申请多组数据" class="headerlink" title="申请多组数据"></a>申请多组数据</h4><p>get_waveforms_bulk()可以同时提交多个申请。</p><ul><li><p>多个列表组成的列表，每一个列表包含：台网名、台站名、位置码、通道名、开始时间和结束时间<br>bulk &#x3D; [[“IU”, “ANMO”, “0?”, “LH?”, t1, t2],(),……]</p></li><li><p>包含有效request（返回信息）的字符串、文件名或者已打开文件的句柄</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">字符串：</span><br><span class="line">bulk = &#x27;quality=B\n&#x27; + \</span><br><span class="line">     &#x27;longestonly=false\n&#x27; + \</span><br><span class="line">     &#x27;IU ANMO * BHZ 2010-02-27 2010-02-27T00:00:02\n&#x27; + \</span><br><span class="line">     &#x27;IU AFI 1? BHE 2010-02-27 2010-02-27T00:00:04\n&#x27; + \</span><br><span class="line">     &#x27;GR GRA1 * BH? 2010-02-27 2010-02-27T00:00:02\n&#x27;</span><br><span class="line">文件名：</span><br><span class="line">client.get_waveforms_bulk(&quot;request.txt&quot;, attach_response=True)</span><br></pre></td></tr></table></figure></li></ul><p>申请多组数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">t1 = UTCDateTime(&quot;2010-02-27T06:45:00.000&quot;)</span><br><span class="line">t2 = t1 + 60</span><br><span class="line">bult = [[&quot;IU&quot;, &quot;ANMO&quot;, &quot;0?&quot;, &quot;LH?&quot;, t1, t2], [&quot;IU&quot;, &quot;AFI&quot;, &quot;0?&quot;, &quot;LH?&quot;, t1, t2]]</span><br><span class="line">waveform = client.get_waveforms_bulk(bult)</span><br><span class="line">print(waveform)</span><br></pre></td></tr></table></figure><h3 id="服务器下载地震目录-catalog"><a href="#服务器下载地震目录-catalog" class="headerlink" title="服务器下载地震目录(catalog)"></a>服务器下载地震目录(catalog)</h3><p>get_events() 申请地震目录。</p><h4 id="使用-eventid-获取地震目录"><a href="#使用-eventid-获取地震目录" class="headerlink" title="使用 eventid 获取地震目录"></a>使用 eventid 获取地震目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client = Client(&quot;IRIS&quot;)</span><br></pre></td></tr></table></figure><h4 id="使用起止时间以及震级等条件筛选地震"><a href="#使用起止时间以及震级等条件筛选地震" class="headerlink" title="使用起止时间以及震级等条件筛选地震"></a>使用起止时间以及震级等条件筛选地震</h4><pre><code>get_events(starttime = 开始时间，endtime = 结束时间，minmagnitude = 震级，catalog = 地震目录来源)</code></pre><ul><li>starttime &#x3D; 开始时间</li><li>endtime &#x3D; 结束时间</li><li>minmagnitude &#x3D; 最小震级</li><li>catalog &#x3D; “地震目录来源”</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">t1 = UTCDateTime(&quot;2001-01-07T00:00:00&quot;)</span><br><span class="line">t2 = UTCDateTime(&quot;2001-01-07T03:00:00&quot;)</span><br><span class="line">catalogs = client.get_events(starttime=t1, endtime=t2, minmagnitude=4,</span><br><span class="line">                        catalog=&quot;ISC&quot;)</span><br><span class="line">catalogs.plot(projection=&quot;ortho&quot;)  # 绘制地图</span><br></pre></td></tr></table></figure><h3 id="下载台站信息数据"><a href="#下载台站信息数据" class="headerlink" title="下载台站信息数据"></a>下载台站信息数据</h3><p>get_stations() 可以得到台站数据，返回值为网络和台站等信息。</p><p>可以通过这个方法查询到相关台网的台站信息、台站所有的位置码和通道等等信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">inventory = client.get_stations(network=&quot;IU&quot;, station=&quot;A*&quot;,</span><br><span class="line">                                 starttime=t1,</span><br><span class="line">                                 endtime=t2, level=&quot;response&quot;)  # 申请所有台站的所有分量和仪器响应文件</span><br><span class="line"></span><br><span class="line">print(inventory)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="绘制仪器相应文件"><a href="#绘制仪器相应文件" class="headerlink" title="绘制仪器相应文件"></a>绘制仪器相应文件</h2><p>利用台站信息get_stations()的返回值的plot_response()获得仪器响应文件。</p><pre><code>inventory.plot_response(min_freq=0.01, output=&quot;DISP&quot;, station=&quot;ADK&quot;, channel=&quot;BH?&quot;)</code></pre><ul><li>minfreq &#x3D; 最小频率</li><li>output &#x3D; 输出形式? 仪器响应中内置仪器类型中BBDISP表示位移型地震仪，参照<a href="https://seisman.github.io/SAC_Docs_zh/appendix/resp/resp-file/">Seisman仪器响应文件-内置仪器响应</a></li><li>station &#x3D; 台站名</li><li>channel &#x3D; 通道号</li></ul>]]></content>
      
      
      <categories>
          
          <category> 地震学常用软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Obspy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>子波提取与反褶积方法综述作业</title>
      <link href="/2022/10/21/%E5%AD%90%E6%B3%A2%E6%8F%90%E5%8F%96%E4%B8%8E%E5%8F%8D%E8%A4%B6%E7%A7%AF%E6%96%B9%E6%B3%95%E7%BB%BC%E8%BF%B0%E4%BD%9C%E4%B8%9A/"/>
      <url>/2022/10/21/%E5%AD%90%E6%B3%A2%E6%8F%90%E5%8F%96%E4%B8%8E%E5%8F%8D%E8%A4%B6%E7%A7%AF%E6%96%B9%E6%B3%95%E7%BB%BC%E8%BF%B0%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="作业内容："><a href="#作业内容：" class="headerlink" title="作业内容："></a>作业内容：</h1><p>1、子波提取方法综述</p><p>2、反褶积方法综述</p><h1 id="1、子波提取方法综述"><a href="#1、子波提取方法综述" class="headerlink" title="1、子波提取方法综述"></a>1、子波提取方法综述</h1><p><img src="1.jpg" alt="子波提取1"><br><img src="2.jpg" alt="子波提取2"><br><img src="3.jpg" alt="子波提取3"><br><img src="4.jpg" alt="子波提取4"></p><h1 id="2、反褶积方法综述"><a href="#2、反褶积方法综述" class="headerlink" title="2、反褶积方法综述"></a>2、反褶积方法综述</h1><p><img src="5.jpg" alt="反褶积1"><br><img src="6.jpg" alt="反褶积1"><br><img src="7.jpg" alt="反褶积1"><br><img src="8.jpg" alt="反褶积1"><br><img src="9.jpg" alt="反褶积1"><br><img src="10.jpg" alt="反褶积1"><br><img src="11.jpg" alt="反褶积1"></p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1].地震数据处理方法&#x2F;李振春主编.东营：中国石油大学出版社,2004.8</p><p>[2].<a href="https://kns.cnki.net/kcms/detail/detail.aspx?dbcode=CJFD&dbname=CJFDLAST2021&filename=SYWT202103001&uniplatform=NZKPT&v=liXv2Ktkr-qoFNjs2QWU_1b4pEln1lZ5Hrco92p293ijIRm_jNubFA6N2d96X_s5">张杰,陈学华,蒋伟.深度域地震子波提取方法综述[J].石油物探,2021,60(03):353-365.</a></p><p>[3].<a href="https://kns.cnki.net/kcms/detail/detail.aspx?dbcode=CJFD&dbname=CJFDLAST2020&filename=SYWT202002003&uniplatform=NZKPT&v=BZuqgJiH9TQE73RcRZBU7Bs8TIBa0xNgAGahye8PMzALPV4TDMWXOP0z5AzXWFv5">戴永寿,张彧豪,张鹏,张红倩,王春娴.时变地震子波提取研究方法综述[J].石油物探,2020,59(02):169-176.</a></p><p>[4].<a href="https://kns.cnki.net/kcms/detail/detail.aspx?dbcode=CMFD&dbname=CMFD201501&filename=1014071870.nh&uniplatform=NZKPT&v=KhCh68wjCJByE2_y8PTjV8Qs0ol6C9vPxGpz1CQ0TCO54ehSnYIKaiCFztYaYZQ9">陈文立. 浅析一种提高地震分辨率的方法_反褶积[D].长安大学,2014.</a></p><p>[5].<a href="https://kns.cnki.net/kcms/detail/detail.aspx?dbcode=CJFD&dbname=CJFD2013&filename=SYXB201301011&uniplatform=NZKPT&v=hRmteNsrv1Go2RCT86X9oWnHpLopL8H-vHJ1zfK1Gg_YegmzNBGPrtoi8vHc8GgM">孟大江,王德利,冯飞,黄飞,朱恒.基于Curvelet变换的稀疏反褶积[J].石油学报,2013,34(01):107-114.</a></p>]]></content>
      
      
      <categories>
          
          <category> 作业布置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> seismic exploration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SAC数据处理笔记</title>
      <link href="/2022/10/21/SAC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/10/21/SAC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="SAC数据处理流程"><a href="#SAC数据处理流程" class="headerlink" title="SAC数据处理流程"></a>SAC数据处理流程</h1><p>命令：</p><ul><li>全称 简写 参数 介绍</li><li>&#x2F;表示未知，如简写未知则在此处填写 &#x2F;。<br>参考:</li></ul><p><a href="https://seisman.github.io/SAC_Docs_zh/">Seisman-SAC参考手册</a></p><h1 id="滤波操作"><a href="#滤波操作" class="headerlink" title="滤波操作"></a>滤波操作</h1><p>参考：<a href="https://seisman.github.io/SAC_Docs_zh/data-process/filter/">滤波</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">fg impulse delta 0.01 npts 1000   # 生成脉冲函数, delta和npts可调</span><br><span class="line">bp c 0.2 2 n 2 p 1                # 要查看的滤波参数</span><br><span class="line">beginframe</span><br><span class="line">xvport 0.1 0.9; yvport 0.7 0.9</span><br><span class="line">fileid off</span><br><span class="line">qdp off</span><br><span class="line">title &#x27;Time Domain Response&#x27;</span><br><span class="line">p                                # 绘制时间域响应</span><br><span class="line">fft</span><br><span class="line">xvport .1 .45; yvport .15 .55</span><br><span class="line">title &#x27;Amplitude Response&#x27;</span><br><span class="line">psp am loglog                    # 振幅响应</span><br><span class="line">xvport .55 .9</span><br><span class="line">title &#x27;Phase Response&#x27;</span><br><span class="line">psp ph linlin                    # 相位响应</span><br><span class="line">endframe</span><br></pre></td></tr></table></figure><h2 id="bandpass-bp-无限脉冲带通滤波"><a href="#bandpass-bp-无限脉冲带通滤波" class="headerlink" title="bandpass bp 无限脉冲带通滤波"></a>bandpass bp 无限脉冲带通滤波</h2><pre><code>bp c 0.2 2 n 2 p 1</code></pre><ul><li>&#x2F; &#x2F; butter|bessel|c1|c2 使用butterworth、bessel、切比雪夫I型、切比雪夫II型滤波器。 默认使用巴特沃兹滤波器。</li><li>corners c v1 v2 拐角频率设置，如上面的命令中，为0.2HZ和2HZ</li><li>Npoles n v 极数，为1-10之间的整数 </li><li>PASSES p v 通道数，取值为1或2</li><li>tranbw &#x2F; v 设置切比雪夫滤波器转换带宽</li><li>atten &#x2F; v 设置切比雪夫滤波器衰减因子</li></ul><h2 id="lowpass"><a href="#lowpass" class="headerlink" title="lowpass"></a>lowpass</h2><h2 id="highpass"><a href="#highpass" class="headerlink" title="highpass"></a>highpass</h2><h2 id="bandrej"><a href="#bandrej" class="headerlink" title="bandrej"></a>bandrej</h2><h1 id="震相理论到时"><a href="#震相理论到时" class="headerlink" title="震相理论到时"></a>震相理论到时</h1><p>保存震相到时信息的头段包括：a、f、tn，(n取值1-9)<br>相应的震相名信息：ka、kf、ktn。</p><h2 id="chnhdr-ch-手动标记"><a href="#chnhdr-ch-手动标记" class="headerlink" title="chnhdr(ch) 手动标记"></a>chnhdr(ch) 手动标记</h2><pre><code>ch t0 400 t1 799 kt0 P kt1 Sch allt -123 iztype i0 # 例如第二行表示从所有的偏移时间减去123，同时改变描述参考时间类型的字段iztype</code></pre><ul><li>file &#x2F; n1 n2 修改指定文件的头段变量，n指内存中文件的文件号</li><li>&#x2F; &#x2F; v vname SAC头段变量名、变量名对应的值</li><li>allt &#x2F; v 将所有已定义的时间相关头段变量的值加v秒，同时参考时刻减去v秒</li></ul><h2 id="traveltime命令-根据预定义的速度模型计算指定震相的走时"><a href="#traveltime命令-根据预定义的速度模型计算指定震相的走时" class="headerlink" title="traveltime命令 根据预定义的速度模型计算指定震相的走时"></a>traveltime命令 根据预定义的速度模型计算指定震相的走时</h2><p>命令默认值：</p><pre><code>traveltime MODEL iasp91 KM PHASE P S Pn Pg Sn Sg</code></pre><ul><li>model &#x2F; v 指定的速度模型，可以为iasp91和ak135</li><li>picks &#x2F; v v取值0-9，表示第一个震相的到时存储在对应头段变量tn中，若未指定不写入头段</li><li>phase &#x2F; vlist 要计算或标记的震相列表，如P、S、Pn</li><li>verbose|quiet &#x2F; &#x2F; 前者在终端输出震相走时以及相对于文件参考时刻的描述，后者不显示震相走时信息</li><li>m|km &#x2F; &#x2F; 头段变量evdp的单位为m或者km</li></ul><h2 id="taup-setsac命令"><a href="#taup-setsac命令" class="headerlink" title="taup_setsac命令"></a>taup_setsac命令</h2><p>Taup软件提供的命令，用于计算震相理论到时并保存到SAC文件中</p><h1 id="波形排序"><a href="#波形排序" class="headerlink" title="波形排序"></a>波形排序</h1><h2 id="sort命令"><a href="#sort命令" class="headerlink" title="sort命令"></a>sort命令</h2><ul><li>&#x2F; &#x2F; v v指头段变量名，即按照该变量名的值进行排序，最多输入5个，优先按照前面的变量排序</li><li>ascend|descend &#x2F; &#x2F; 前者按照升序排列，后者按照降序。默认升序。每一个变量名都需要指定升序或者降序。</li></ul><h1 id="质量控制（标记或删除信噪比低或者不合适的波形）"><a href="#质量控制（标记或删除信噪比低或者不合适的波形）" class="headerlink" title="质量控制（标记或删除信噪比低或者不合适的波形）"></a>质量控制（标记或删除信噪比低或者不合适的波形）</h1><p>人工挑选坏的波形。</p><pre><code>ppk p 5 # plot 每次绘制5个波形# 如果波形的质量很差，使用t9标记wh #将标记的t9保存到头段中q</code></pre><p>t9标记后一般都是正值，而好的波形为未定义状态，值为-12345.0。在命令行使用下面的命令删除定义的波形：</p><pre><code>saclst t9 f *.SAC | awk &#39;$2&gt;0 &#123;print &quot;rm&quot;,$1&#125;&#39; | sh</code></pre><p>也可以用如下命令将不好的波形移动到专门的文件夹下：</p><pre><code>mkdir BADWAVEsaclst t9 f *.SAC | awk &#39;$2&gt;0 &#123;print &quot;mv&quot;,$1,&quot;BAD/&quot;&#125;&#39; | sh</code></pre><h2 id="whitehdr-wh-将内存中文件的头段区覆盖磁盘文件中的头段区"><a href="#whitehdr-wh-将内存中文件的头段区覆盖磁盘文件中的头段区" class="headerlink" title="whitehdr(wh) 将内存中文件的头段区覆盖磁盘文件中的头段区"></a>whitehdr(wh) 将内存中文件的头段区覆盖磁盘文件中的头段区</h2><p>直接使用，不需要任何参数。</p><p>注意：</p><p>write命令的over选项可以用内存中头段区和数据区覆盖磁盘文件中的头段区<br>和数据区。该命令用内存中头段区覆盖磁盘文件中的头段区，数据区不会被覆盖。<br>如果使用了cut命令，读取数据时将仅读入部分数据，内存中的头段区将会做<br>相应修改以反映cut命令的效果，但是磁盘中的数据并没有被修改，因而此时<br>不能使用writehdr命令。对被cut的数据使用writehdr命令将可能导致磁<br>盘中的数据产生类似于平移或截断的效果。</p><h1 id="震相拾取（到时标定）"><a href="#震相拾取（到时标定）" class="headerlink" title="震相拾取（到时标定）"></a>震相拾取（到时标定）</h1><h2 id="plotpk-ppk-命令（模式）"><a href="#plotpk-ppk-命令（模式）" class="headerlink" title="plotpk(ppk)命令（模式）"></a>plotpk(ppk)命令（模式）</h2><pre><code>ppk # 进入ppk模式，进入后终端不在提示sac&gt;；# 如果之前打开过绘图，需要鼠标点击一下绘图窗口。</code></pre><p>直接按下q，即可退出ppk模式。</p><p>注意：进入ppk模式所有键盘输入会解释为ppk命令。当焦点转移到终端时，键盘输入显示在<br>终端中，退出ppk模式时sac依次解释终端中的命令。</p><h2 id="ppk模式下拾取震相"><a href="#ppk模式下拾取震相" class="headerlink" title="ppk模式下拾取震相"></a>ppk模式下拾取震相</h2><p>在绘图窗口，移动鼠标到标记到时位置，依次按下t、0，在标记处出现T0标记，并保存到相应名称头段变量中。</p><p>按q退出ppk模式。</p><pre><code>wh # 保存头段变量</code></pre><p>全局变量SAC_PPK_USE_CROSSHAIRS可以控制ppk下鼠标形态。0为十字，1为全图十型。</p><h2 id="关闭快速绘图（显示图形时降采显示）"><a href="#关闭快速绘图（显示图形时降采显示）" class="headerlink" title="关闭快速绘图（显示图形时降采显示）"></a>关闭快速绘图（显示图形时降采显示）</h2><p>现代计算机性能足够，通常关闭快速绘图已获得最佳观感。qdp控制快速绘图开启与关闭。</p><pre><code>qdp off # 关闭快速绘图</code></pre><h2 id="放大与缩小"><a href="#放大与缩小" class="headerlink" title="放大与缩小"></a>放大与缩小</h2><p>光标移动到某一位置按下x键，再移动到另一个位置按下x键。两次键入确定了一个时间窗，<br>只显示该时间窗内的波形。</p><p>在窗口某位置按下左键拖动到另一位置实现框内波形放大。</p><p>键入o缩小图幅，但是只能回退5次。</p><h2 id="同时标记三分量"><a href="#同时标记三分量" class="headerlink" title="同时标记三分量"></a>同时标记三分量</h2><p>使用命令：</p><pre><code>ppk p 3 a m</code></pre><p>显示三个波形数据。在ppk模式下：</p><p>键入 n 可以依次显示接下来的3个波形。波形显示完成后自动退出ppk模式。</p><p>键入 b 可以显示前3个波形。</p><p>注意：三个分量波形数据参考时刻必须相同；内存中存储的数据顺序需要符合需求。</p><h2 id="ppk命令"><a href="#ppk命令" class="headerlink" title="ppk命令"></a>ppk命令</h2><p>详见<a href="https://seisman.github.io/SAC_Docs_zh/data-process/picking-phase/#id7">ppk命令</a></p><pre><code>plotpk </code></pre><ul><li>perplot &#x2F; n|ON|OFF  一张图绘制n个文件，on表示使用旧值，off表示绘制所有文件</li><li>bell &#x2F; on|off 绘图区内击键时是否响铃</li><li>absolute|relative &#x2F; &#x2F; 绝对&#x2F;相对绘图模式</li><li>reference &#x2F; v|on|off v表示参考线的参考值，on|off是否显示参考线</li><li>markall &#x2F; on|off 一次标记一张图上所有文件到时|指标及光标位置对应的震相到时</li><li>sacelocs &#x2F; on|off 是否将L命令拾取的位置保存到黑板变量中</li></ul><h2 id="标定P、S波"><a href="#标定P、S波" class="headerlink" title="标定P、S波"></a>标定P、S波</h2><p>ppk模式可以键入：</p><ul><li><p>p 标定P波到时，到时信息保存到头段变量A中</p></li><li><p>s 标定S波到时，到时信息保存到头段变量T0中。</p></li><li><p>键入e，震相onset类型，震相方向、震相质量等信息仅用于标记P、S波，这些信息会保留在头段变量KA或者KTO中。<br>例如：进入ppk模式，按下ed1p，KA中的值为EPD1，表示Emergent和极性向下的P波，震相质量为1表示震相清晰。</p></li></ul><h2 id="ppk修改版"><a href="#ppk修改版" class="headerlink" title="ppk修改版"></a>ppk修改版</h2><p>详见<a href="https://blog.seisman.info/faster-ppk/">faster-ppk</a></p><h1 id="信号叠加"><a href="#信号叠加" class="headerlink" title="信号叠加"></a>信号叠加</h1><p>SAC提供Signal Stack Subprocess（简称SSS）来实现。</p><h2 id="进入和退出sss"><a href="#进入和退出sss" class="headerlink" title="进入和退出sss"></a>进入和退出sss</h2><pre><code>sss # 键入sss进入子程序quitsub # 退出子程序quit # 退出sac</code></pre><h2 id="添加文件"><a href="#添加文件" class="headerlink" title="添加文件"></a>添加文件</h2><pre><code>sss # 进入子程序addstack a.sac weight 1 delay 20 seconds</code></pre><ul><li><p>addstack 读入文件a.sac。</p></li><li><p>weight 设置文件在叠加中的权重，值为0-1。</p></li><li><p>delay 波形向后延迟。</p><p>  liststack # 列出叠加文件列表中的文件属性</p></li></ul><h2 id="叠加文件"><a href="#叠加文件" class="headerlink" title="叠加文件"></a>叠加文件</h2><pre><code>zerostack # 清除之前添加的文件和设置addstack # 添加文件timewindow 0 19 # 选定时窗，这里为0-19秒sumstack # 叠加波形</code></pre><p>注意：波形按照相对时刻对齐；叠加后会做归一化。</p>]]></content>
      
      
      <categories>
          
          <category> 地震学常用软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu初始环境配置</title>
      <link href="/2022/10/19/Ubuntu%E5%88%9D%E5%A7%8B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/10/19/Ubuntu%E5%88%9D%E5%A7%8B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="1-火狐浏览器配置"><a href="#1-火狐浏览器配置" class="headerlink" title="1 火狐浏览器配置"></a>1 火狐浏览器配置</h1><p>参考：<a href="https://zhiyuanshi1901.github.io/2022/08/06/Ubuntu%E5%AE%89%E8%A3%85firefox%E4%B8%AD%E5%9B%BD%E7%89%88/">国内版火狐浏览器安装</a></p><h1 id="2-安装conda"><a href="#2-安装conda" class="headerlink" title="2 安装conda"></a>2 安装conda</h1><p>参考：<a href="https://seismo-learn.org/software/anaconda/">conda 安装教程</a></p><p>在官方下载linux 64的安装包。<a href="https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh">Linux 64</a></p><p>运行命令行：</p><pre><code>bash Miniconda3-latest-Linux-x86_64.sh # 下载的包名</code></pre><p>测试安装，运行python即可，在界面显示anaconda即安装成功。</p><h1 id="3-安装pycharm并配置python环境"><a href="#3-安装pycharm并配置python环境" class="headerlink" title="3 安装pycharm并配置python环境"></a>3 安装pycharm并配置python环境</h1><p>参考：<a href="https://blog.csdn.net/qq_44749630/article/details/125683049">pycharm等安装教程</a></p><p>pycharm在官网下载：<a href="https://www.jetbrains.com/zh-cn/edu-products/download/#section=pycharm-edu">Pycharm Edu linux</a></p><p>将包内内容提取出来，在该包的<code>bin</code>下打开命令行：</p><pre><code>./pycharm.sh</code></pre><p>执行即可。<br>安装完成后的左下角选择 Create Desktop Entry 即可添加快捷方式。</p><p>使用Pycharm需要配置conda的python环境。</p><p>在Python Interpreter中选择 <code>Add Interpreter</code>，其中的路径选择已存在的Virtualenv Environment,在路径中<br>选择conda安装路径下的python3。 例如我的路径为：</p><pre><code>/home/用户名/Downloads/yes/bin/python3.9</code></pre><p>在这个环境下能够找到使用conda安装的库即可。</p><h1 id="4-使用conda安装必要的库"><a href="#4-使用conda安装必要的库" class="headerlink" title="4 使用conda安装必要的库"></a>4 使用conda安装必要的库</h1><p>参考：<a href="https://seismo-learn.org/software/anaconda/">conda 安装教程</a></p><pre><code>conda install 库名</code></pre><p>可以使用 <code>conda</code>命令或者<code>pip</code>命令安装python环境库。</p><p>使用以下命令进行其他操作：</p><pre><code>conda update 库名  # 升级conda search 库名  # 搜索pip install 库名 # pip安装</code></pre><h1 id="5-安装搜狗输入法"><a href="#5-安装搜狗输入法" class="headerlink" title="5 安装搜狗输入法"></a>5 安装搜狗输入法</h1><p>参考：<a href="https://shurufa.sogou.com/linux/guide">搜狗输入法官方安装教程</a></p><p>搜狗输入法默认使用 <code>ctrl+space</code> 激活。<br>注：不建议删除系统自带ibus</p><h1 id="6-Rdseed-安装"><a href="#6-Rdseed-安装" class="headerlink" title="6 Rdseed 安装"></a>6 Rdseed 安装</h1><p>参考：<a href="http://www.manongjc.com/detail/50-gfwopzloqnbvxkj.html">Rdseed与SAC安装教程</a><br>在官网下载Rdseed安装包。可以使用IRIS网站下载，但是现在IRIS已经停止支持Rdseed。<br><a href="http://ds.iris.edu/pub/programs/">http://ds.iris.edu/pub/programs/</a></p><p>在github中可以下载最新版本Rdseed。</p><p>解包后，在Rdseed解包后的目录下使用命令:</p><pre><code>cp -p rdseed.rh6.linux_64 /usr/local/bin/rdseed</code></pre><p>之后即可在命令行中输入Rdseed，可进入界面。<br>注： 如果使用的非Linux 64位系统，需要对makefile文件进行编译。具体参考上述参考链接。</p><h1 id="7-SAC-安装"><a href="#7-SAC-安装" class="headerlink" title="7 SAC 安装"></a>7 SAC 安装</h1><p>参考：<a href="https://seisman.github.io/SAC_Docs_zh/install/linux-binary/">SAC linux安装</a></p><h1 id="8-GMT-安装"><a href="#8-GMT-安装" class="headerlink" title="8 GMT 安装"></a>8 GMT 安装</h1><p>参考：<a href="https://docs.gmt-china.org/latest/install/ubuntu-debian/">GMT安装</a></p><p>使用conda安装：</p><pre><code>conda install gmt -c conda-forgegmt -v  # 测试conda update gmt  # 升级conda remove gmt  # 卸载</code></pre><p>官方二进制包：</p><pre><code>sudo apt updatesudo apt install gmt gmt-dcw gmt-gshhgsudo apt install ghostscriptsudo apt install gdal-binsudo apt install graphicsmagicksudo apt install ffmpeg</code></pre><p>建议使用conda安装，使用官方二进制包安装时产生了下载错误等问题。</p><h1 id="Opendtect"><a href="#Opendtect" class="headerlink" title="Opendtect"></a>Opendtect</h1><p><a href="https://doc.opendtect.org/6.6.0/doc/admindoc/Default.htm#installation/opendtect/installing-opendtect-on-linux.htm?TocPath=2%2520Installation%257COpendTect%257CInstalling%2520OpendTect%2520on%2520Linux%257C_____0">官方安装教程</a></p><p><a href="https://dgbes.com/download">官方下载链接</a></p><p>在官方下载处下载得到.sh文件，运行：</p><pre><code>sudo bash OpendTect_Installer_lux64.sh</code></pre><p>安装即可。</p><p>To start OpendTect change the terminal or<br>Konsole directory into &#x2F;home&#x2F;your_username&#x2F;OpendTectPro&#x2F;6.6.0 and then run .&#x2F;start_dtect</p>]]></content>
      
      
      <categories>
          
          <category> Linux学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吉布斯现象作业</title>
      <link href="/2022/09/30/%E5%90%89%E5%B8%83%E6%96%AF%E7%8E%B0%E8%B1%A1%E4%BD%9C%E4%B8%9A/"/>
      <url>/2022/09/30/%E5%90%89%E5%B8%83%E6%96%AF%E7%8E%B0%E8%B1%A1%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="使用matlab和C进行绘图与计算。"><a href="#使用matlab和C进行绘图与计算。" class="headerlink" title="使用matlab和C进行绘图与计算。"></a>使用matlab和C进行绘图与计算。</h1><p>程序如下：<br>C程序计算采样和DFT频域转换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;math.h&gt;</span><br><span class="line">//# define NP 2001</span><br><span class="line"># define PI 2*asin(1.0)</span><br><span class="line">#define T 2.0</span><br><span class="line">void dft(xreal, ximag);</span><br><span class="line">float xtime(float dt, float *x, float *t, int N);</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    float dt1=1.6;</span><br><span class="line">    float dt2=2.5;</span><br><span class="line">    int N1=T*1000/dt1;</span><br><span class="line">    printf(&quot;%d &quot;,N1);</span><br><span class="line"></span><br><span class="line">    float x1[N1],t1[N1];</span><br><span class="line">    int N2 = T*1000/dt2;</span><br><span class="line">    float x2[N2],t2[N2];</span><br><span class="line"></span><br><span class="line">    xtime(dt1,x1,t1, N1);</span><br><span class="line">    xtime(dt2,x2,t2, N2);</span><br><span class="line"></span><br><span class="line">    float xreal1[N1], ximag1[N1];</span><br><span class="line">    printf(&quot;输出测试&quot;);  //测试无误</span><br><span class="line">    for(int i=0; i&lt;N1; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        xreal1[i]=x1[i]; ximag1[i]=0;  //将雷克子波输入实部为原值，虚部为0</span><br><span class="line">        printf(&quot;xreal1 %f\t%d\n&quot;, xreal1[i], i);</span><br><span class="line">    &#125;</span><br><span class="line">    dft(xreal1, ximag1,N1);</span><br><span class="line">    for(int i=0; i&lt;N1; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%f\t%f\t%d\n&quot;, xreal1[i],ximag1[i],i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    float xreal2[N1], ximag2[N1];</span><br><span class="line">    printf(&quot;输出测试&quot;);  //测试无误</span><br><span class="line">    for(int i=0; i&lt;N2; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        xreal2[i]=x1[i]; ximag2[i]=0;  //将雷克子波输入实部为原值，虚部为0</span><br><span class="line">        printf(&quot;xreal2 %f\t%d\n&quot;, xreal2[i], i);</span><br><span class="line">    &#125;</span><br><span class="line">    dft(xreal2, ximag2, N2);</span><br><span class="line">    for(int i=0; i&lt;N1; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%f\t%f\t%d\n&quot;, xreal2[i],ximag2[i], i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    FILE *DFT;  //打开最终输出的文件</span><br><span class="line">    DFT = fopen(&quot;work_dt1.csv&quot;, &quot;w&quot;);</span><br><span class="line">printf( &quot;dt1 \n&quot;);</span><br><span class="line">    for(int i=0; i&lt;N1; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%10.6f\t %10.6f\n&quot;, sqrt(pow(xreal1[i],2)+pow(ximag1[i], 2)), i/dt1/N1);</span><br><span class="line">         fprintf(DFT, &quot;%10.6f\t %10.6f\n&quot;, sqrt(pow(xreal1[i],2)+pow(ximag1[i], 2)), i/dt1/N1);</span><br><span class="line">    &#125;</span><br><span class="line">    FILE *DFT2;</span><br><span class="line">    DFT2 = fopen(&quot;work_dt2.csv&quot;, &quot;w&quot;);</span><br><span class="line">    printf( &quot;dt2 \n&quot;);</span><br><span class="line">     for(int i=0; i&lt;N2; i++)</span><br><span class="line">    &#123;</span><br><span class="line">         printf(&quot;%10.6f\t %10.6f\n&quot;, sqrt(pow(xreal2[i],2)+pow(ximag2[i], 2)), i/dt2/N2);</span><br><span class="line">         fprintf(DFT2, &quot;%10.6f\t %10.6f\n&quot;, sqrt(pow(xreal2[i],2)+pow(ximag2[i], 2)), i/dt2/N2);</span><br><span class="line">    &#125;</span><br><span class="line">fclose(DFT);</span><br><span class="line">fclose(DFT2);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void dft(float *xreal,float *ximag, int N)  //DFT 离散傅里叶正变换</span><br><span class="line">&#123;</span><br><span class="line">    float Xreal[N],Ximag[N];</span><br><span class="line">    float sumreal, sumimag, rad;  //定义实部计算加和、虚部计算加和、角度</span><br><span class="line"></span><br><span class="line">    for(int k = 0; k &lt; N; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        sumreal = 0.0; sumimag = 0.0;</span><br><span class="line">        for(int n=0; n&lt;N; n++)</span><br><span class="line">        &#123;</span><br><span class="line">            rad = 2*PI/N*n*k;</span><br><span class="line">            //printf(&quot;thisxreal %f\t%d\t%d\n&quot;, xreal[n], n, k);</span><br><span class="line">            sumreal += xreal[n]*cos(rad) + ximag[n]*sin(rad);</span><br><span class="line">            sumimag += -xreal[n]*sin(rad) + ximag[n]*cos(rad);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Xreal[k] = sumreal;</span><br><span class="line">        Ximag[k] = sumimag;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int k = 0; k &lt; N; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        xreal[k] = Xreal[k];</span><br><span class="line">        ximag[k] = Ximag[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">float xtime(float dt, float *x, float *t, int N)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    for(int i=0;i&lt;N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t[i] = -T/2+i*dt/1000;</span><br><span class="line">        if(t[i]==0)</span><br><span class="line">             x[i] = 227.0;</span><br><span class="line">        else</span><br><span class="line">        x[i] = sin(300*t[i])/PI/t[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MATLAB进行图像绘制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">dt1 = 1.6;</span><br><span class="line">dt2 = 2.5;</span><br><span class="line">[t1,x1,N1] = xtime(dt1);</span><br><span class="line">[t2,x2,N2] = xtime(dt2);</span><br><span class="line"></span><br><span class="line">figure(1)</span><br><span class="line">hold on</span><br><span class="line">subplot(2,1,1)</span><br><span class="line">plot(t1,x1,&#x27;-r&#x27;)</span><br><span class="line">legend(&#x27;采样间隔1.6ms&#x27;);</span><br><span class="line">title(&#x27;时域采样结果&#x27;)</span><br><span class="line">subplot(2,1,2)</span><br><span class="line">plot(t2,x2,&#x27;-b&#x27;)</span><br><span class="line">legend(&#x27;采样间隔2.5ms&#x27;);</span><br><span class="line"></span><br><span class="line">load work_dt1.csv</span><br><span class="line">load work_dt2.csv</span><br><span class="line"></span><br><span class="line">figure(2)</span><br><span class="line">subplot(2,1,1)</span><br><span class="line">hold on</span><br><span class="line">plot(work_dt1(:,2),work_dt1(:,1),&#x27;-r&#x27;)</span><br><span class="line">legend(&#x27;采样间隔1.6ms&#x27;)</span><br><span class="line">title(&#x27;频谱绘制&#x27;)</span><br><span class="line">subplot(2,1,2)</span><br><span class="line">hold on</span><br><span class="line">plot(work_dt2(:,2),work_dt2(:,1),&#x27;-b&#x27;)</span><br><span class="line">legend(&#x27;采样间隔2.5ms&#x27;)</span><br><span class="line"></span><br><span class="line">function [t,x,N] = xtime(dt)</span><br><span class="line">    T = 2; % 采样总时间为2s，原点两边各采样1s</span><br><span class="line">    N = floor(T*1000/dt);</span><br><span class="line">    x = zeros(1,N);</span><br><span class="line">    t = zeros(1,N);</span><br><span class="line">    for i=1 : N</span><br><span class="line">        t(i) = -T/2+(i-1)*dt/1000;</span><br><span class="line">        x(i) = 1/pi/t(i)*sin(300*t(i));</span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p><img src="%E9%A2%91%E5%9F%9F%E9%87%87%E6%A0%B7.jpg" alt="频率采样"></p><p><img src="%E6%97%B6%E5%9F%9F%E9%87%87%E6%A0%B7.jpg" alt="时域采样"></p>]]></content>
      
      
      <categories>
          
          <category> 作业布置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 地震资料数字处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《重力场与重力勘探》英语词汇</title>
      <link href="/2022/09/21/%E3%80%8A%E9%87%8D%E5%8A%9B%E5%9C%BA%E4%B8%8E%E9%87%8D%E5%8A%9B%E5%8B%98%E6%8E%A2%E3%80%8B%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/"/>
      <url>/2022/09/21/%E3%80%8A%E9%87%8D%E5%8A%9B%E5%9C%BA%E4%B8%8E%E9%87%8D%E5%8A%9B%E5%8B%98%E6%8E%A2%E3%80%8B%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>这里的名词大多是在学习中所记得，因为英语单词实在是难记，而且有些名词<br>在其他翻译软件中没有专业解释，因此，在这里当做词典，可以通过搜索进行查找。</p><h1 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h1><p>[1].[重力场与重力勘探&#x2F;曾华霖编著.-北京：地质出版社，2005.6]</p><h1 id="词汇"><a href="#词汇" class="headerlink" title="词汇"></a>词汇</h1><p>Gravity Field and Gravity Exploration 重力场与重力勘探</p><p>Gravity 重力</p><p>acceleration 加速度</p><p>concept 概念</p><p>Gravitational field 引力场</p><p>Gravitational potential 引力位</p><p>Gravity potential 重力位</p><p>anomaly 异常</p><p>formulae 公式</p><p>gravitational force caused by density contrast 剩余质量引力</p><p>Free air anomolies 自由空气重力异常</p><p>Bougure gravity anomolies 布格重力异常</p><p>instruments for absolute gravity measurements 绝对重力测量仪</p><p>instruments for relative gravity measurements 相对重力测量仪</p><p>Land gravity metres 地面测量仪器</p><p>marine 海洋</p><p>areo 航空</p><p>borehole 井中</p><p>calibration 标定</p><p>coincidence 一致性</p><p>scale 格值</p><p>basis-points net 基点网</p><p>arrangement 布置</p><p>combination measurements 联测</p><p>Gravity points 普通点</p><p>points for monltor 检查点</p><p>additional measurements 补充观测</p><p>Geodesy 测地工作</p><p>Airlome gravity surcey 航空重力测量</p><p>gravity gradients 重力梯度</p><p>torsion balance gradiometre 扭秤</p><p>satellite 卫星</p><p>reduction 整理</p><p>adjustments 平差</p><p>closer error 闭合差</p><p>condition adjustment 条件平差</p><p>Terrain correction 地形校正</p><p>Bouguer correction 中间层矫正（美国等国家将中间层矫正称为布格校正）</p><p>Free-air coorection 自由空气（高度）矫正</p><p>combine elevation correction 综合高度校正（国内称布格校正）</p><p>Normal correction 正常场（纬度）校正</p><p>gravity anomolies 重力异常</p><p>illustration of gravity anomalies 异常的图示</p><p>contour map 异常平面图</p><p>profile 剖面图</p><p>profiles on a plane 异常平剖图</p><p>isostasy 均衡</p><p>isostatic gravity anomaly 均衡重力异常</p><p>principle 原理</p><p>estimation 估计</p><p>illutration 表示方法，插图</p><p>least-square method 最小二乘法</p><p>forward calculation 证问题</p><p>irregular 不规则</p><p>interfaces 分界面</p><p>multi-interfaces 多分界面</p><p>characteristic point method 特征点法</p><p>Optimization 选择法</p><p>Interactive method 人机交互式反演方法</p><p>Linear regression 线性回归法</p><p>interation 迭代法</p><p>frequency domain 频率域反演方法</p><p>Ambiguity 多解性问题</p><p>effect 效应</p><p>Separation 分离 </p><p>deep structures 深部的因素</p><p>Regional gravity anomaly 区域异常</p><p>local gravity anomaly 局部异常</p><p>average field method (Grids) 平均场法</p><p>Polygon method 圆周法（多边形法）</p><p>Grid calulation 网格法</p><p>continuation 延拓</p><p>filtering in spatial frequency demain 频率域滤波法</p><p>faults 断裂构造（断层）</p><p>paleo-burial hill 古潜山</p><p>oil trap 封闭</p><p>salt 盐矿</p><p>ore 金属矿</p>]]></content>
      
      
      <categories>
          
          <category> 专业英语词汇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 重力勘探 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《信号分析与处理》英语词汇</title>
      <link href="/2022/09/15/%E3%80%8A%E4%BF%A1%E5%8F%B7%E5%88%86%E6%9E%90%E4%B8%8E%E5%A4%84%E7%90%86%E3%80%8B%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/"/>
      <url>/2022/09/15/%E3%80%8A%E4%BF%A1%E5%8F%B7%E5%88%86%E6%9E%90%E4%B8%8E%E5%A4%84%E7%90%86%E3%80%8B%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>这里的名词大多是在学习中所记得，因为英语单词实在是难记，而且有些名词<br>在其他翻译软件中没有专业解释，因此，在这里当做词典，可以通过搜索进行查找。</p><h1 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h1><p>[信号分析与处理 &#x2F; 张军华主编. –青岛：中国石油大学出版社,2020.8]</p><h1 id="词汇"><a href="#词汇" class="headerlink" title="词汇"></a>词汇</h1><p>signal analysis and processing 信号分析与处理</p><p>random noise 随机噪声</p><p>periodic signal 周期信号</p><p>even 偶</p><p>odd 奇</p><p>decompose （信号）分解</p><p>compose 合成</p><p>sinusoidal signal 正弦信号</p><p>exponential signal 指数信号</p><p>absorption coefficient 吸收系数</p><p>sample signal 抽样信号</p><p>Fourier kernel function 傅里叶核函数</p><p>unit step signal 单位阶跃信号</p><p>rectangular pulse signal 矩形脉冲信号</p><p>normalize 归一化</p><p>unit sign function 单位符号函数</p><p>linear system 线性系统</p><p>zero-input response 零输入响应</p><p>zero-state response 零状态相应</p><p>nonlinear system 非线性系统</p><p>time-invariant system 时不变系统</p><p>time varying system 时变系统</p><p>linear time-invariant systems （LTI系统）线性时不变系统</p><p>stable system 稳定系统</p><p>unstable system 不稳定系统</p><p>convolution 卷积（褶积）</p><p>synthetic seismogram 合成地震记录</p><p>impedance inversion 波阻抗反演</p><p>wavelet processing 子波处理</p><p>Ricker wacelet 雷克子波</p><p>homogeneous solution 齐次解</p><p>particular solution 特解</p><p>Fourier transform 傅里叶变换（傅氏变换）</p><p>multiscale analysis 多尺度分析</p><p>multiresolution analysis 多分辨率分析</p><p>time shift 时移</p><p>Parseval 帕塞瓦尔（定理）</p><p>aliasing 假频</p><p>antialiasing 防假频</p><p>resample 重采样</p><p>DFT (discrete Fourier transform) 离散傅里叶变换</p><p>FFT (fast Fourier transform) 快速傅里叶变换</p><p>DFS (discrete Fourier series) 离散傅里叶级数正变换</p><p>IDFS (inverse discrete Fourier series) 离散傅里叶级数反变换</p><p>IFFT (inverse fast Fourier transform) 快速傅里叶反变换</p><p>Hanning 海宁窗（升余弦窗）</p><p>Hamming 汉明窗（改进的升余弦窗）</p><p>Blackman 布莱克曼窗</p><p>Laplace transform 拉普拉斯变换</p><p>bilateral 双边（积分的积分域双边）</p><p>numerator 分子</p><p>denominator 分母</p><p>pole 极点（留数法）</p><p>series 级数</p><p>pole-zero plot 零极点图</p><p>DTFT (discrete time Fourier transform) 离散时间傅里叶变换</p><p>IDTFT (inverse discrete time Fourier transform) 离散时间傅里叶反变换</p><p>filter 滤波器</p><p>Hilbert transform 希尔伯特变换</p><p>AGC (automatic gain control) 自动增益控制</p><p>Butterworth 巴特沃兹</p><p>Chebyshev 切比雪夫</p><p>IIR (infinite impulse response digital filter) IIR数字滤波器</p><p>FIR (finite impulse response digital filter) FIR数字滤波器</p><p>A&#x2F;D (analog&#x2F;digital) 模数转换</p><p>TDM ( time-division multiplexing) 时分复用</p><p>GML (group mapping law) 组映射规则</p>]]></content>
      
      
      <categories>
          
          <category> 专业英语词汇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语词汇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《地震资料解释基础》英语词汇</title>
      <link href="/2022/09/15/%E3%80%8A%E5%9C%B0%E9%9C%87%E8%B5%84%E6%96%99%E8%A7%A3%E9%87%8A%E5%9F%BA%E7%A1%80%E3%80%8B%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/"/>
      <url>/2022/09/15/%E3%80%8A%E5%9C%B0%E9%9C%87%E8%B5%84%E6%96%99%E8%A7%A3%E9%87%8A%E5%9F%BA%E7%A1%80%E3%80%8B%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>这里的名词大多是在学习中所记得，因为英语单词实在是难记，而且有些名词<br>在其他翻译软件中没有专业解释，因此，在这里当做词典，可以通过搜索进行查找。</p><h1 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h1><p>[1].[曹丹平等编著.地震资料解释基础 北京：石油工业出版社，2020.10]</p><h1 id="来源-1-《地震资料解释基础》"><a href="#来源-1-《地震资料解释基础》" class="headerlink" title="来源 [1]《地震资料解释基础》"></a>来源 [1]《地震资料解释基础》</h1><h2 id="第一章-三维地震资料解释基础"><a href="#第一章-三维地震资料解释基础" class="headerlink" title="第一章 三维地震资料解释基础"></a>第一章 三维地震资料解释基础</h2><p>seismic exploration 地震勘探</p><p>acquisition 采集（地震勘探）</p><p>interpretation 解释（地震勘探）</p><p>seismic data 地震资料</p><p>reservoir 储层</p><p>density 密度</p><p>medium 介质</p><p>medium model for seismic wave propagation 地震波传播介质模型</p><p>viscoelastic body 黏弹性体</p><p>isotropy 各向同性</p><p>anisotropy 各向异性</p><p>AVO(amplitude variation with angle)振幅随偏移距变化；(amplitude versus offset ) 振幅与炮检距关系</p><p>homogeneous medium 均匀介质</p><p>heterogeneous medium 非均匀介质</p><p>single-phase medium 单相介质</p><p>double-phase medium 双相介质</p><p>elastomer 弹性体</p><p>elastic wave 弹性波</p><p>wave equation 波动方程</p><p>Fermat principle 费马原理</p><p>Huygens-Fresnel principle 惠更斯-菲涅尔原理</p><p>Snell’s law 斯奈尔定律</p><p>reflected wave 反射波</p><p>transmitted wave 透射波</p><p>wave seismology 波动地震学</p><p>geometric seismology 集合地震学</p><p>eikonal equation 程函方程</p><p>geometry 观测系统</p><p>CDP(common depth point) 共深度点</p><p>xline 横向方向</p><p>inline 测线方向</p><p>CMP(common mid point) 共中心点</p><p>OVT(offset vector tile) 炮检距向量片（域偏移技术）</p><p>Kirchhoff 克其霍夫</p><p>convolution 褶积</p><p>reflection coefficient 反射系数</p><p>reflectivity 反射率</p><p>resolving power 分辨能力</p><p>resolution 分辨率</p><p>vertical 垂向</p><p>lateral 横向</p><p>first fresnel zone 第一菲涅尔带</p><p>Rayleigh 瑞利准则</p><p>Ricker 雷克准则</p><p>Widess 怀德斯准则</p><p>AVA(amplitude variation with incident angle) 振幅随入射角变化</p><p>AVP(amplitude variation with ray-parameter) 振幅随射线参数的变化</p><p>Zoeppritz 佐普里兹</p><p>gradient 梯度</p><p>rock physics 岩石物理</p><p>seismic rock physics 地震岩石物理</p><p>seismic petrophysics 地震岩石物理</p><h2 id="第二章-三维地震数据与计算机可视化"><a href="#第二章-三维地震数据与计算机可视化" class="headerlink" title="第二章 三维地震数据与计算机可视化"></a>第二章 三维地震数据与计算机可视化</h2><p>3D seismic data volume 三维地震数据体</p><p>seismic trace 地震记录道</p><p>seismic section&#x2F;seismic cross-section&#x2F; seismic profile&#x2F;proflie 地震剖面</p><p>trace space &#x2F; group interval 道间距</p><p>sample interval 采样间隔</p><p>sample rate 采样率</p><p>seismic recording length 地震记录长度</p><p>inline&#x2F;line 主测线&#x2F;主测线剖面</p><p>crossline&#x2F;xline 横测线&#x2F;联络测线</p><p>arbitrary line 任意线</p><p>horizontal sections&#x2F;horizontal slice 水平切片</p><p>time slice 时间切片</p><p>depth slice 深度切片</p><p>seiscrop section 水平切片（起源于seiscrop公司）</p><p>horizon slice 沿层切片&#x2F;层位切片</p><p>fault slice 断面切片</p><p>vertical sections 垂直剖面</p><p>stratal slice 地层切片</p><p>wave peak &#x2F; wave crest 波峰</p><p>wave trough 波谷</p><p>scaling 缩放</p><p>digital clipping 数字限幅</p><p>spectrum 谱</p><p>bandwidth 带宽</p><p>zero phase wavelet 零相位子波</p><p>minimum phase wavelet 最小相位子波</p><p>polarity 极性</p><p>positive 正(反射)</p><p>hard 硬(反射)</p><p>normal polarity 正常极性（正极性）</p><p>reverse polarity 反极性 negative polarity 负极性</p><p>American polarity 美洲极性</p><p>European polarity 欧洲极性</p><p>primary color 原色&#x2F;基色</p><p>magenta 品红</p><p>cyan 青</p><p>hue 色调</p><p>saturation 饱和度</p><p>lightness 亮度</p><p>color scheme 色标</p><p>color bar 色棒</p><p>contrasting color scheme 对比配色法</p><p>gradational color scheme 渐变配色法</p><p>single-gradational color scheme 单向渐变色标</p><p>single-graditional gray scale 单向渐变灰色色标（灰度色标）</p><p>double-gradational color scheme 双向渐变色标</p><p>enhanced dynamic range double-gradational color scheme 增强动态范围的双向渐变色标</p><p>contrasting spectral color scheme 对比色色标（彩虹色标）</p><p>composite color scheme 复合色标</p><p>1D cyclical color scheme 一维周期性色标</p><p>2D color scheme 二维色标</p><p>3D color scheme 三维色标</p><p>cross-section display 剖面显示</p><p>WT (wiggle trace) 波形曲线显示</p><p>VA (variable area) 变面积显示</p><p>D-VA (dual polarity variable area) 双极性变面积显示</p><p>VD (variable density) 变密度（灰度）显示</p><p>VI (variable intensity) 彩色变密度显示</p><p>VI-WT &#x2F; VD-WT 波形加变密度显示</p><p>VA-VD 变面积加变密度叠合显示</p><p>seismic overlays 叠合显示</p><p>blended or mixed displays 叠合显示</p><p>surface visualization 平面可视化（计数）</p><p>composite display 复合显示</p><p>cube display 立方体显示</p><p>chair display 椅状显示</p><p>seismic data 3D visualization 地震数据三维可视化</p><p>volume visualization 三维体可视化</p><p>voxel 体元</p><p>visual integration 可视化集成</p><p>virtual reality 虚拟现实</p><p>immersive visualization 浸入式可视化</p><p>full 3D interpretation of seismic data 地震资料全三维解释</p><p>autotracking 自动追踪</p><p>autopicking 自动拾取</p><p>seed voxel 种子点</p><p>seismic interpretation system 地震解释系统</p><p>interactive interpretation system of seismic data 地震资料（人机）交互解释系统</p><p>results of seismic data interpretation 地震资料解释成果</p><p>CGM (computer graphics metafile) 计算机图形元文件</p><p>PPI (pixel per inch) 每英寸像素</p><p>DPI (dot per inch) 每英寸点</p>]]></content>
      
      
      <categories>
          
          <category> 专业英语词汇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 地震勘探 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地震学英语专业词汇</title>
      <link href="/2022/09/15/%E5%9C%B0%E9%9C%87%E5%AD%A6%E8%8B%B1%E8%AF%AD%E4%B8%93%E4%B8%9A%E8%AF%8D%E6%B1%87/"/>
      <url>/2022/09/15/%E5%9C%B0%E9%9C%87%E5%AD%A6%E8%8B%B1%E8%AF%AD%E4%B8%93%E4%B8%9A%E8%AF%8D%E6%B1%87/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>这里的名词大多是在学习中所记得，因为英语单词实在是难记，而且有些名词<br>在其他翻译软件中没有专业解释，因此，在这里当做词典，可以通过搜索进行查找。</p><h1 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h1><p>[1].[现代地震学教程&#x2F;周仕勇，许忠怀等编著.-2版.-北京：北京大学出版社,2018.2]</p><p>[2].<a href="https://seismo-learn.org/seismology101/">地震’学’网站</a></p><h1 id="来源-1-《现代地震学教程》"><a href="#来源-1-《现代地震学教程》" class="headerlink" title="来源 [1]《现代地震学教程》"></a>来源 [1]《现代地震学教程》</h1><p>potential function 势函数</p><p>angular frequency 角频率</p><p>wave number 波数</p><p>plane wave 平面波</p><p>wavefront 波阵面 </p><p>slowness 慢度</p><p>fast direction 快方向（横波分裂）</p><p>wave front 波前</p><p>seismic ray 射线</p><p>Eikonal equation 程函方程</p><p>Snell 斯奈尔</p><p>Fermat 费马</p><p>Hugens 惠更斯</p><p>apparent slowness 水平慢度，视慢度</p><p>head wave 首波</p><p>coda 尾波</p><p>regional event 区域地震（&lt;1000km或10°）</p><p>local event 地方震</p><p>phase lag 相位滞后</p><p>dispersion 频散 波散</p><p>dynamic wave phase velocities 波场动态相速度</p><p>structural phase velocities 结构相速度</p><p>non-planar wavefield 非平面波场</p><p>spheroidal oscillation 球型振荡</p><p>torsional oscillation &#x2F; toroidal oscillation 环型震荡</p><h1 id="来源-2-地震“学”网站"><a href="#来源-2-地震“学”网站" class="headerlink" title="来源 [2] 地震“学”网站"></a>来源 [2] 地震“学”网站</h1><p>inner-core bondary 内核边界（ICB）</p><p>core-mantle boundary 核幔边界（CMB）</p><p>moho discontinuity 莫霍间断面</p><p>Conrad discontinuity 康拉德界面</p><p>mantle transition zone 地幔转换带（410-660km）</p><p>seismic phase 震相</p><p>seismic source 震源</p><p>seismic event 地震事件</p><p>seismic wave 地震波</p><p>seismograph 地震仪</p><p>seismic station 地震台</p><p>seismogram 地震图</p><p>Hooke’s law 胡克定律</p><p>origin time 发震时刻</p><p>hypocenter 震源位置</p><p>epicenter 震中</p><p>magnitude 震级</p><p>body wave 体波</p><p>surface wave 面波</p><p>primary wave(P-wave) P波</p><p>secondary wave(S-wave) S波</p><p>compression wave 压缩波</p><p>shear wave 剪切波</p><p>Rayleigh wave 瑞利波</p><p>Love wave 勒夫波</p><p>longitudinal wave 纵波</p><p>transverse wave 横波</p><p>seismic waveform 地震波形</p><p>metadata 元数据</p><p>catalog 地震目录</p><p>crust 地壳</p><p>mantle 地幔</p><p>core 地核</p><p>outer core 外核</p><p>inner core 内核</p><p>SAC(seismic analysis codes)</p><p>miniSEED(standard for the exchange of earthquake data)</p><p>fetch 获取</p><p>processing 处理</p><p>analysis 分析</p>]]></content>
      
      
      <categories>
          
          <category> 专业英语词汇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语词汇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vista地震剖面简单处理顺序</title>
      <link href="/2022/08/21/Vista%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E9%A1%BA%E5%BA%8F/"/>
      <url>/2022/08/21/Vista%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E9%A1%BA%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><p><a href="https://max.book118.com/html/2016/0128/34253742.shtm">Vista Windows 7.0 浅层地震反射波法处理流程分解讲义 -李澎</a><br>在下文中简称为PDF。</p><p><a href="https://wenku.baidu.com/view/54062b0a2c60ddccda38376baf1ffc4ffe47e2d0.html">地震数据处理vista软件使用手册</a></p><h1 id="注意！-一定要及时保存工程文件！"><a href="#注意！-一定要及时保存工程文件！" class="headerlink" title="注意！ 一定要及时保存工程文件！"></a>注意！ 一定要及时保存工程文件！</h1><h1 id="新建工程"><a href="#新建工程" class="headerlink" title="新建工程"></a>新建工程</h1><h1 id="创建一个2D空白数据"><a href="#创建一个2D空白数据" class="headerlink" title="创建一个2D空白数据"></a>创建一个2D空白数据</h1><p><img src="%E5%9B%BE%E7%89%871.png" alt="空白数据"></p><h1 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h1><p><img src="%E5%9B%BE%E7%89%872.png" alt="空白数据"></p><p>点击相应数据点OK窗口，出现一个弹窗，关掉即可。</p><p><img src="%E5%9B%BE%E7%89%873.png" alt="空白数据"></p><p>出现该页面。</p><p><img src="%E5%9B%BE%E7%89%874.png" alt="空白数据"></p><h1 id="点击第二个按钮，打开观测系统进行设置"><a href="#点击第二个按钮，打开观测系统进行设置" class="headerlink" title="点击第二个按钮，打开观测系统进行设置"></a>点击第二个按钮，打开观测系统进行设置</h1><p><img src="%E5%9B%BE%E7%89%875.png" alt="空白数据"></p><p>第一个为炮点设置，第二个为检波器设置。</p><p>炮点设置如下：</p><p><img src="%E5%9B%BE%E7%89%876.png" alt="空白数据"></p><p>红色一行填好，蓝色填好第一行，点击</p><p><img src="%E5%9B%BE%E7%89%877.png" alt="空白数据"></p><p>添加对应的行数即可。</p><p>检波器设置如下：</p><p><img src="%E5%9B%BE%E7%89%878.png" alt="空白数据"></p><p>然后设置：</p><p><img src="%E5%9B%BE%E7%89%879.png" alt="空白数据"></p><p>点击第一个按钮，出现如下界面：</p><p><img src="%E5%9B%BE%E7%89%8710.png" alt="空白数据"></p><p>第二个、第三个按钮，如下界面（一般默认不需要更改）：</p><p><img src="%E5%9B%BE%E7%89%8711.png" alt="空白数据"></p><p>点击上面第四个按钮，点击auto calculate：</p><p><img src="%E5%9B%BE%E7%89%8712.png" alt="空白数据"></p><p>然后点击第六个按钮f∑。</p><p><img src="%E5%9B%BE%E7%89%8713.png" alt="空白数据"></p><p>第三、四、五、六检查观测系统，截个图和这个一样就可以了。</p><p><img src="%E5%9B%BE%E7%89%8714.png" alt="空白数据"></p><p><img src="%E5%9B%BE%E7%89%8715.png" alt="空白数据"></p><p>点击保存按钮（保存下第一个），保存geom文件，在之后需要调用这个文件。</p><p>然后再点击右边保存到道头（保存下第二个）。</p><p>在interactive栏中找到如下，点击后检查道头文件。</p><p><img src="%E5%9B%BE%E7%89%8716.png" alt="空白数据"></p><h1 id="进行道均衡"><a href="#进行道均衡" class="headerlink" title="进行道均衡"></a>进行道均衡</h1><p><img src="%E5%9B%BE%E7%89%8717.png" alt="空白数据"></p><p>点击job flow的第一个、第二个按钮，然后点击window下的tile vertically，界面显示为垂直多列。</p><p>道均衡流程图件PDF讲义P1。</p><p>记得在下面图片中对准流程标记点击右键，点击该按钮，流程块左侧变绿之后，再点击GO。</p><p><img src="%E5%9B%BE%E7%89%8718.png" alt="空白数据"></p><h1 id="频谱分析"><a href="#频谱分析" class="headerlink" title="频谱分析"></a>频谱分析</h1><p><img src="%E5%9B%BE%E7%89%8719.png" alt="空白数据"></p><p>得到的输出左边，点击第一个按钮，得到剖面界面</p><p><img src="%E5%9B%BE%E7%89%8720.png" alt="空白数据"></p><p>点击第六个按钮，顶部栏变化，出现如下界面：</p><p><img src="%E5%9B%BE%E7%89%8721.png" alt="空白数据"></p><p>最右侧一栏选择如上。点击绿色+号，点击OK。也可以在显示OK这个界面调节频谱显示范围，一般选择0-100即可，默认也可以。</p><p><img src="%E5%9B%BE%E7%89%8722.png" alt="空白数据"></p><p>在这个界面，左边使用鼠标指针放置在对应噪音的位置，可以看到右边振幅谱的变化情况。记住噪音的频率范围，<br>一般为40HZ以下。<br>关闭这个页面。</p><p><img src="%E5%9B%BE%E7%89%8723.png" alt="空白数据"></p><p>最右边一栏选择如上。再次单击+号，进入FK频谱分析界面。</p><p>先使用鼠标左键选中放大下方频谱范围。</p><p><img src="%E5%9B%BE%E7%89%8724.png" alt="空白数据"><br><img src="%E5%9B%BE%E7%89%8725.png" alt="空白数据"></p><p>选择中间红色第四个按钮，可以使用某种形状的范围选择。<br>这里使用长条形，可以直接选择滤掉的频率范围。点击后，在频谱界面拖拽出去除部分。<br>斜线区域就是去除部分。然后点击保存按钮，保存的fkl文件作为滤波文件，在之后会进行使用。</p><p>参考PDF P2 一维滤波和二维滤波进行滤波处理，然后保存文件。</p><h1 id="抽道集"><a href="#抽道集" class="headerlink" title="抽道集"></a>抽道集</h1><p>抽取CMP道集，参考PDF P2 抽道集。</p><h1 id="速度分析"><a href="#速度分析" class="headerlink" title="速度分析"></a>速度分析</h1><p>参考 PDF P3速度分析。注意一定使用抽道集后的数据作为输入。</p><h1 id="速度拾取"><a href="#速度拾取" class="headerlink" title="速度拾取"></a>速度拾取</h1><p>参考PDF P7 速度拾取。点击<img src="%E5%9B%BE%E7%89%8726.png" alt="空白数据">之后，从最左边图像选取最红的位置，使得最右边的同相轴尽可能平直。<br>中间的同相轴呈现一定规律。（这里的选择方式不确定是否正确）</p><p><img src="%E5%9B%BE%E7%89%8727.png" alt="空白数据"></p><p>点击后，左边会有一个圆圈，多点几个位置会有连线。具体意义不明，目前认为是拾取了这几个点处的速度。</p><p>点击保存按钮，保存速度分析文件，之后会使用。</p><h1 id="时间剖面"><a href="#时间剖面" class="headerlink" title="时间剖面"></a>时间剖面</h1><p>参考PDF P7之后的NMO, P8的水平叠加、P9的混波和P13的信号增强。流程图可参考如下：输入数据为一维、<br>二维滤波后的数据，选择CMP_NO格式。</p><p><img src="%E5%9B%BE%E7%89%8728.png" alt="空白数据"><br><img src="%E5%9B%BE%E7%89%8729.png" alt="空白数据"></p><p>得到的结果就是水平叠加剖面。</p><h1 id="偏移剖面"><a href="#偏移剖面" class="headerlink" title="偏移剖面"></a>偏移剖面</h1><p>参考PDF P10 FK偏移，最后得到偏移剖面。</p>]]></content>
      
      
      <categories>
          
          <category> 地震勘探 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vista </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SAC数据格式与数据合并</title>
      <link href="/2022/08/21/SAC%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%90%88%E5%B9%B6/"/>
      <url>/2022/08/21/SAC%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%90%88%E5%B9%B6/</url>
      
        <content type="html"><![CDATA[<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://seisman.github.io/SAC_Docs_zh/data-process/data-format/">SAC数据格式及转换</a><br>[]</p><h4 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h4><p>SEED：存储多台站多分量的波形数据和台站元数据。<br>miniSEED：仅包含波形数据。<br>datalessSEED：仅包含台站元数据。<br>CSS3.0：为数据库设计。</p><h4 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h4><p>使用Rdseed进行格式转换：</p><p>从SEED数据中提取SAC格式的波形数据以及台站的RESP仪器响应文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rdseed -Rdf file.seed</span><br></pre></td></tr></table></figure><p>从SEED数据中提取SAC格式的波形数据以及PZ仪器响应文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rdseed -pdf file.seed</span><br></pre></td></tr></table></figure><h4 id="数据合并"><a href="#数据合并" class="headerlink" title="数据合并"></a>数据合并</h4><p>使用<code>merge</code>命令进行合并：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r *.NET.STA.00.BHZ  # 读入所有需要合并的文件</span><br><span class="line">merge              # 内存中所有的文件被合并为一个文件</span><br><span class="line">w NET.STA.00.BHZ   # 写回到磁盘中</span><br></pre></td></tr></table></figure><p>SAC会检测所有需要合并文件的<code>knetwk</code>、<code>kstnm</code>、<code>kcmpnm</code>、<code>delta</code>参数是否完全匹配，并智能判断文件的合并顺序。</p><p>如果出现数据间断或者数据重叠的情况：</p><ul><li>存在间断，可以直接补零或者线性插值；</li><li>存在重叠，可以比较重叠部分数据是否相同或对重叠的波形进行平均。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 地震学常用软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SAC时间变量</title>
      <link href="/2022/08/19/SAC%E6%97%B6%E9%97%B4%E5%8F%98%E9%87%8F/"/>
      <url>/2022/08/19/SAC%E6%97%B6%E9%97%B4%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://seisman.github.io/SAC_Docs_zh/data-process/event-info/">https://seisman.github.io/SAC_Docs_zh/data-process/event-info/</a><br><a href="https://seisman.github.io/SAC_Docs_zh/fileformat/times/#id15">https://seisman.github.io/SAC_Docs_zh/fileformat/times/#id15</a></p><h4 id="时间变量"><a href="#时间变量" class="headerlink" title="时间变量"></a>时间变量</h4><p>一般数据使用时刻+数据点的形式，占用存储空间较多。因此，选择一个参考时刻，其余时刻<br>使用与参考时刻的秒数差表示。</p><p>一般而言，选择一个特殊的时刻作为参考时刻。</p><p>SAC使用的是：<br>“起始相对时间 + 采样间隔 + 数据点数 + 结束相对时间” 表示。即：<br>“<code>b</code> + <code>deltea</code> + <code>npts</code> + <code>e</code>”，但这样造成了头段变量<code>e</code>的特殊性。</p><p>SAC 将震相到时（时刻）相对于参考时刻的时间差（即相对时间）保存到头段变量 <code>o</code>、 <code>a</code>、<code>f</code>、<code>tn</code> 中。</p><p>参考时刻变量：<code>nzyear</code>、<code>nzjday</code>、<code>nzhour</code>、<code>nzmin</code>、<code>nzsec</code>、<code>nzmsec</code><br>相对时间：<code>b</code>、<code>e</code>、<code>o</code>、<code>a</code>、<code>f</code>、<code>tn</code><br>绝对时刻：参考时刻+相对时间</p><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><p><code>listhdr</code>简写<code>lh</code>，用于列出头段变量的值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lh 头段变量名（可以列出多个）</span><br></pre></td></tr></table></figure><p><code>chnhdr</code>简写<code>ch</code>，用于修改头段变量的值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ch b 修改值</span><br></pre></td></tr></table></figure><p>使用注意事项：</p><ul><li>如果 <code>o</code>、<code>a</code>、<code>f</code>、<code>tn</code> 都没有定义， 那么修改 b 值可以用于校正仪器的时间零点漂移以及时区差异。</li><li>如果  <code>o</code>、<code>a</code>、<code>f</code>、<code>tn</code> 已经被定义， 则修改 b 值会导致与震相相关的头段变量出现错误！</li></ul><h4 id="修改参考时间"><a href="#修改参考时间" class="headerlink" title="修改参考时间"></a>修改参考时间</h4><p>修改参考时间会导致除了参考时间外的其他变量都没有变化，因此造成绝对时刻发生平移。<br>理论上可以校正零点漂移和时区，但是由于SAC不支持智能判断时间，因此修改时区相对繁琐。<br>如果要校正时区，建议直接修改<code>b</code>。</p><h4 id="修改发震时刻"><a href="#修改发震时刻" class="headerlink" title="修改发震时刻"></a>修改发震时刻</h4><p>修改<code>o</code>实现很危险，因此使用<code>ch</code>命令<code>allt</code>选项。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">SAC&gt; r ./cdv.z</span><br><span class="line">SAC&gt; ch o gmt 1987 173 11 10 10 363   # 06月22日是第173天</span><br><span class="line">                                        # 设置发震时刻</span><br><span class="line">SAC&gt; lh kzdate kztime o  # 列出发震日期、发震时间和发震时刻相对于参考时刻的秒数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     kzdate = JUN 22 (173), 1987</span><br><span class="line">     kztime = 11:09:56.363</span><br><span class="line">          o = 1.400000e+01       # 发震时刻相对于参考时刻的时间为14秒</span><br><span class="line">SAC&gt; ch allt -14 iztype IO       # 参考时刻加14秒，其他时间减14秒</span><br><span class="line">SAC&gt; lh kzdate kztime o</span><br><span class="line"></span><br><span class="line">     kzdate = JUN 22 (173), 1987</span><br><span class="line">     kztime = 11:10:10.363</span><br><span class="line">          o = 0.000000e+00</span><br><span class="line">SAC&gt; wh                          # 写回磁盘</span><br></pre></td></tr></table></figure><p>处理大量数据时：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">r *.SAC</span><br><span class="line">synchronize            # 同步所有数据的参考时间</span><br><span class="line">ch o gmt 1987 173 11 10 10 363</span><br><span class="line">ch allt (0 - &amp;1,o&amp;) iztype IO</span><br><span class="line">wh</span><br></pre></td></tr></table></figure><p><code>(0 - &amp;1,o&amp;)</code>中：<br><code>&amp;1,o&amp;</code> 表示引用内存中第一个SAC文件的头段变量<code>o</code>的值，<br>然后用<code>0-o的值</code>得到结果。优势：不需要使用<code>lh o</code>查看<code>o</code>的值。</p><p><code>synchronize</code> :同步所有数据的参考时间，将内存中所有数据拥有相同的参考时刻。<br>使用此命令后，所有数据的<code>o</code>拥有相同的值。</p>]]></content>
      
      
      <categories>
          
          <category> 地震学常用软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SAC学习笔记</title>
      <link href="/2022/08/15/SAC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/08/15/SAC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>[seisman]<a href="https://seisman.github.io/SAC_Docs_zh/">https://seisman.github.io/SAC_Docs_zh/</a></p><h1 id="SAC入门"><a href="#SAC入门" class="headerlink" title="SAC入门"></a>SAC入门</h1><h2 id="启动与退出"><a href="#启动与退出" class="headerlink" title="启动与退出"></a>启动与退出</h2><h3 id="启动SAC"><a href="#启动SAC" class="headerlink" title="启动SAC"></a>启动SAC</h3><p>在控制端输入<br><code>sac</code></p><h3 id="退出SAC"><a href="#退出SAC" class="headerlink" title="退出SAC"></a>退出SAC</h3><p>在SAC控制端输入<code>quit</code></p><h2 id="样本数据"><a href="#样本数据" class="headerlink" title="样本数据"></a>样本数据</h2><p>SAC支持生成样本数据进行学习，即使手头没有SAC数据也可以进行学习使用。</p><h3 id="funcgen（fg）"><a href="#funcgen（fg）" class="headerlink" title="funcgen（fg）"></a>funcgen（fg）</h3><p>funcgen（function generator），该命令可以生成一些特定的函数，例如脉冲函数、阶跃函数、正弦函数等。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fg impluse  # 生成脉冲函数</span><br><span class="line">plot  # 绘图，将上面的脉冲函数绘制出来</span><br><span class="line">fg seismogram  # 生成地震波形样本 使用该命令会在内存中删除上面生成的脉冲信号。</span><br></pre></td></tr></table></figure><h3 id="datagen（dg）"><a href="#datagen（dg）" class="headerlink" title="datagen（dg）"></a>datagen（dg）</h3><p>datagen（data generator）。该命令用于生成数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dg sub local cdv.?  # 生成了CDV台站记录到的近震三分量波形数据，共有三个波形</span><br><span class="line">pl  # plot的简写</span><br></pre></td></tr></table></figure><h2 id="读写数据"><a href="#读写数据" class="headerlink" title="读写数据"></a>读写数据</h2><h3 id="写入数据"><a href="#写入数据" class="headerlink" title="写入数据"></a>写入数据</h3><p>读取数据之前需要拥有SAC数据。除了申请获取之外，换可以通过生成样本数据的方式获取SAC数据。</p><p>在SAC中进行下列输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">datagen sub local cdv.n cdv.e cdv.z  # 生成三个SAC数据</span><br><span class="line">write cdv.n cdv.e cdv.z  # 写入磁盘中</span><br><span class="line">ls  # SAC中调用的linux系统命令，表示显示当前文件夹下的目录</span><br></pre></td></tr></table></figure><p>写入数据的步骤如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">w test.n test.e test.z  # 将内存中的三组数据分别写入到三个新的文件中</span><br><span class="line">w over    # 覆盖原来的文件</span><br><span class="line">w append .new  # 在原来的文件名后面加上后缀.new</span><br></pre></td></tr></table></figure><h3 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h3><p>通配符与Linux相同。</p><ol><li><code>*</code> 匹配任意长度字符串</li><li><code>?</code> 匹配任意单个非空字符</li><li><code>[]</code> 匹配从a到g范围内的任意单个字符<ul><li><code>[ABC]</code>或者<code>A,B,C</code>匹配单个字符A或B或C</li><li><code>[0-9]</code>匹配任意一位数字</li><li><code>[a-g]</code>匹配a到g范围内任意单个字符</li></ul></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">read cdv.n cdv.e cdv.z  # 读取这三个文件，分别指定这三个文件的文件名</span><br><span class="line">read cdv.?  # 读取cdv.开头的所有文件，但是.后面只有一个字符。</span><br><span class="line">read cdv.[nez] # 匹配这三个字符的cdv.开头的文件</span><br><span class="line">r *  # 读取该目录下的所有文件</span><br></pre></td></tr></table></figure><p> ！！！注意：数据读取到内存中时，每次读取都会清空内存，因此只会保留一次<code>read</code>的数据。<br>使用<code>more</code>进行追加。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">read more 文件名（绝对地址）</span><br></pre></td></tr></table></figure><h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><p>绘图在上文中已经提及，使用<code>plot</code>进行绘制。此外，还有<br><code>plot1</code>、<code>plot2</code>、<code>plotpk</code>命令。</p><p>同时绘制多个波形时，先显示一个波形，在命令行界面显示<code>Waiting</code><br>。使用回车显示下一个波形。如果不想显示，可以使用<code>kill</code>命令，简写<code>k</code>杀死进程。</p><h3 id="绘图命令"><a href="#绘图命令" class="headerlink" title="绘图命令"></a>绘图命令</h3><h4 id="plot"><a href="#plot" class="headerlink" title="plot"></a>plot</h4><p>plot绘制内存块中的所有波形数据，但是每次只显示一个波形，然后等待用户输入再决定是否显示下一个波形。</p><p>使用回车显示下一个波形，或者使用<code>kill</code>命令杀死进程。</p><h4 id="plot1"><a href="#plot1" class="headerlink" title="plot1"></a>plot1</h4><p>绘制内存块中的所有波形数据，在同一个窗口中一次显示多个波形，拥有共同的X轴和单独的Y轴。</p><p>使用<code>perplot</code>命令设置每个窗口显示的图形数量。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot1 perplot n # n为显示数量</span><br></pre></td></tr></table></figure><p>默认情况波形数据按照绝对时间<code>absolute</code>对齐，若波形数据具有不同的开始时间，则波形数据会出现相对错动；<br>可以使用所有波形数据相对于<code>relative</code>各自的开始时间进行绘图，此时X坐标起始为0。</p><h4 id="plot2"><a href="#plot2" class="headerlink" title="plot2"></a>plot2</h4><p>一次性将所有内存块中的所有波形绘制在一个窗口内，所有波形共用X轴和Y轴。<br>因此其适合多个波形对比。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">color red inc list red blue # 对两个数据分别设置红色和蓝色</span><br><span class="line">plot2 # 简写p2</span><br></pre></td></tr></table></figure><h4 id="plotpk-ppk"><a href="#plotpk-ppk" class="headerlink" title="plotpk ppk"></a>plotpk ppk</h4><p>在窗口中显示指定个数的波形，共用X轴，具有单独Y轴。常用于拾取震相。</p><h4 id="plotpm-ppm"><a href="#plotpm-ppm" class="headerlink" title="plotpm ppm"></a>plotpm ppm</h4><p>利用成对的波形数据，提取出任一时间段内两个波形数据的振幅信息，绘制在“振幅-振幅”图上。<br>如果若一对波形数据恰好是同一台站两个互相垂直的分量，则“振幅-振幅”图即为“质点运动图”。从“质点运动图”中，可以提取出震相的一些重要信息。</p><p>利用垂直和径向分量的波形数据绘制 Rayleigh 面波的质点运动轨迹：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dg sub tele nykl.z             # Z分量</span><br><span class="line">w nykl.z</span><br><span class="line">dg sub tele nykl.e nykl.n      # E、N分量</span><br><span class="line">rotate to gcp                  # 旋转至大圆路径</span><br><span class="line">w nykl.r nykl.t                # R、T分量</span><br><span class="line">r nykl.z nykl.r                # 读入Z和R分量</span><br><span class="line">xlabel &#x27;Radial component&#x27;</span><br><span class="line">ylabel &#x27;Vertical component&#x27;</span><br><span class="line">title &#x27;Particle-motion plot for partial Rayleigh wave&#x27;</span><br><span class="line">xlim 1300 1340                 # 仅绘制Rayleigh面波的部分时间窗</span><br><span class="line">ppm                            # 绘制质点运动图</span><br></pre></td></tr></table></figure><h4 id="plotsp"><a href="#plotsp" class="headerlink" title="plotsp"></a>plotsp</h4><p>用于绘制不同格式的谱文件，可以绘制“振幅+相位”或者“实部+虚部”，可以任意指定X、Y轴为线性轴或者对数轴。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fg seis</span><br><span class="line">fft  # 进行fft快速傅里叶变换</span><br><span class="line">plotsp am loglog  # 绘制振幅谱。</span><br></pre></td></tr></table></figure><h3 id="图像外观元素"><a href="#图像外观元素" class="headerlink" title="图像外观元素"></a>图像外观元素</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">fg seis                # 生成数据</span><br><span class="line">qdp on                 # qdp选项指采样绘制数据点。由于计算机性能不佳使用采样的方式绘制数据点提高绘制速度。现在可以使用off选项。</span><br><span class="line">grid on                # 显示网格</span><br><span class="line">title &#x27;Seismic Trace&#x27;  # 设置标题</span><br><span class="line">xlabel &quot;Time(s)&quot;       # 设置x轴标签</span><br><span class="line">ylabel &quot;Amplitude&quot;     # 设置y轴标签</span><br><span class="line">filenumber on          # 显示文件号</span><br><span class="line">axes only left bottom  # left和bottom显示axes</span><br><span class="line">ticks only right       # right显示ticks</span><br><span class="line">border on              # top显示border</span><br><span class="line">p                      # 绘图</span><br></pre></td></tr></table></figure><p>此外，可以使用以下命令控制坐标轴和坐标系。</p><ul><li>xlim 控制绘图的X轴范围</li><li>xdiv 控制X轴刻度间隔</li><li>xfudge 设定fudge因子，根据数据极值扩展X轴范围</li><li>linlin</li><li>linlog</li><li>loglin</li><li>loglog</li><li>xlin</li><li>xlog</li><li>ylin</li><li>ylog<br>对数坐标轴可以使用以下命令控制外观：</li><li>xfull</li><li>loglab</li><li>floor</li></ul><h3 id="线条属性控制"><a href="#线条属性控制" class="headerlink" title="线条属性控制"></a>线条属性控制</h3><p>使用line命令进行线条属性控制。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">line 4  # 线型为4</span><br><span class="line">width 2  # 线宽为2</span><br><span class="line">color red # 红色</span><br><span class="line">p  # 绘制</span><br></pre></td></tr></table></figure><p>可以对波形数据进行颜色填充</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fg seis  # 创建一个数据</span><br><span class="line">qdp on  # qdp选项指采样绘制数据点。由于计算机性能不佳使用采样的方式绘制数据点提高绘制速度。现在可以使用off选项。</span><br><span class="line">rmean; rtr; taper</span><br><span class="line">line 0 fill red/blue  # 线型为0 负振幅为blue 正振幅为red</span><br></pre></td></tr></table></figure><h3 id="绘制组合图"><a href="#绘制组合图" class="headerlink" title="绘制组合图"></a>绘制组合图</h3><p>典型组合图示例：<a href="https://seisman.github.io/SAC_Docs_zh/graphics/composite-plots/">源自seisman</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">fg seis                        # 生成数据</span><br><span class="line">beginframe                     # 打开 frame，开始绘制组合图</span><br><span class="line">xvport 0.1 0.9                 # 设定第一个绘图命令的 viewport</span><br><span class="line">yvport 0.7 0.9</span><br><span class="line">title &#x27;Seismic Trace&#x27;          # 设定标题</span><br><span class="line">fileid off                     # 不显示文件 id</span><br><span class="line">qdp off</span><br><span class="line">p</span><br><span class="line">fft wmean                      # FFT</span><br><span class="line">xvport .1 .45                  # 设定第二个绘图命令的 viewport</span><br><span class="line">yvport .15 .55</span><br><span class="line">title &#x27;Amplitude Response (linlog)&#x27;</span><br><span class="line">ylim 1e-5 1                    # Y 轴范围</span><br><span class="line">psp am linlog                  # 绘制振幅谱</span><br><span class="line">xvport .55 .9                  # 设定第三个绘图命令的 viewport</span><br><span class="line">title &#x27;Amplitude Response (loglog)&#x27;</span><br><span class="line">xlim 1 60</span><br><span class="line">psp am loglog                  # 绘制振幅谱</span><br><span class="line">endframe                       # 关闭 frame</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="图形设备"><a href="#图形设备" class="headerlink" title="图形设备"></a>图形设备</h3><p>可以使用<code>begindevices</code>和<code>enddevices</code>命令开启、关闭指定的图形设备。<br>使用<code>setdevice</code>命令设置默认的图形设备。</p><h4 id="xwindows"><a href="#xwindows" class="headerlink" title="xwindows"></a>xwindows</h4><p>以位图方式显示的软件窗口系统。</p><h4 id="begindevices"><a href="#begindevices" class="headerlink" title="begindevices"></a>begindevices</h4><p>启动命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BeginDevices Sgf|Xwindows</span><br></pre></td></tr></table></figure><ul><li>Sgf：Sac图像文件设备</li><li>Xwindows：X window窗口显示系统</li></ul><h4 id="enddevices"><a href="#enddevices" class="headerlink" title="enddevices"></a>enddevices</h4><p>关闭命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EndDevices [ALL|Sgf|Xwindows]</span><br></pre></td></tr></table></figure><ul><li>ALL：关闭所有图像设备</li><li>SGF：SAC图形文件设备</li><li>Xwindows：X Window图像窗口系统</li></ul><h4 id="setdevices"><a href="#setdevices" class="headerlink" title="setdevices"></a>setdevices</h4><p>定义后续绘图默认图形设备</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SETDEVICE name</span><br></pre></td></tr></table></figure><ul><li>name：图形设备名</li></ul><h4 id="sgftops"><a href="#sgftops" class="headerlink" title="sgftops"></a>sgftops</h4><p>SGF格式是SAC自定义的图像文件格式，转换到其他图像格式需要此命令、<br>用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sgftops</span><br><span class="line">Usage: sgftops sgf_file ps_file [line_width scale_id]</span><br><span class="line">    sgf_file   :  SGF 文件名</span><br><span class="line">    ps_file    :  PS 文件名</span><br><span class="line">    line_width :  图像线宽，可以取1,1.5,2等等</span><br><span class="line">    scale_id   :    - i : landscape模式加上文件id</span><br><span class="line">                    - s : 对图像进行平移、旋转、缩放</span><br><span class="line">                    - si：landscape模式+文件id+平移+旋转+缩放</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sgftops SGF文件名 PS文件名 [图像线宽 [i|s|si]] # 具体含义见上</span><br></pre></td></tr></table></figure><h3 id="绘图流程"><a href="#绘图流程" class="headerlink" title="绘图流程"></a>绘图流程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">r cdv.[nez] # 读取数据文件到内存中</span><br><span class="line">begindevices xwindows # 启动xwindows图形设备，简写： bd x</span><br><span class="line">plot  # 绘图，简写：p</span><br><span class="line">### 进行绘制</span><br><span class="line">enddevices xwindows  # 关闭图形设备xwindows，简写：ed x</span><br><span class="line">q # 退出SAC</span><br></pre></td></tr></table></figure><h2 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h2><h3 id="头段变量"><a href="#头段变量" class="headerlink" title="头段变量"></a>头段变量</h3><h4 id="基本变量"><a href="#基本变量" class="headerlink" title="基本变量"></a>基本变量</h4><h5 id="nvhdr"><a href="#nvhdr" class="headerlink" title="nvhdr"></a><code>nvhdr</code></h5><ul><li>nzyear 年</li><li>nzjday 一年的第几天 </li><li>kzdate（由上面两个变量构成）</li><li>kztime（由下面两个变量构成）</li><li>nzhour 时</li><li>nzmin 分</li><li>nzsec 秒</li><li>nzmsec 毫秒</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fg seis</span><br><span class="line">lh nzyear nzjday nzhour # 显示头段变量信息</span><br></pre></td></tr></table></figure><h5 id="iztype"><a href="#iztype" class="headerlink" title="iztype"></a><code>iztype</code></h5><p>等效参考时刻。</p><ul><li>IUNKN 未知</li><li>IB 文件开始时刻为参考时间</li><li>IDAY 参考日期当天午夜为参考时间</li><li>IO 事件发生时间为参考时间</li><li>IA 初动到时为参考时间</li><li>ITn 用户自定义时间Tn为参考时间，n可取0-9</li></ul><p><code>iztype=IO</code>表示数据以发震时刻作为参考时刻，此时头段变量o的值为0</p><h5 id="iftype"><a href="#iftype" class="headerlink" title="iftype"></a><code>iftype</code></h5><p>SAC文件类型，决定了头段区之后有几个数据区</p><ul><li>ITIME 时间序列文件 即Y数据，一般的地震波形数据</li><li>IRLIM 频谱文件 格式为实部-虚部</li><li>IAMPH 频谱文件 格式为 振幅-相位</li><li>IXY 一般的X-Y数据</li><li>IXYZ 一般的XYZ 3D文件</li></ul><h5 id="idep"><a href="#idep" class="headerlink" title="idep"></a><code>idep</code></h5><p>因变量（Y）类型。该头段变量可以不定义</p><ul><li>IUNKN 未知类型</li><li>IDISP 位移量 单位：nm</li><li>IVEL 速度量 单位：nm&#x2F;s</li><li>IVOLTS 速度量 单位：V（未知含义）</li><li>IACC 加速度量 单位：nm&#x2F;s2</li></ul><h4 id="数据相关变量"><a href="#数据相关变量" class="headerlink" title="数据相关变量"></a>数据相关变量</h4><h5 id="npts"><a href="#npts" class="headerlink" title="npts"></a><code>npts</code></h5><p>数据点数，决定了数据区有多少个数据点。</p><h5 id="delta"><a href="#delta" class="headerlink" title="delta"></a><code>delta</code></h5><p>等间隔数据的数据点采样周期 （标称值）。</p><h5 id="odelta"><a href="#odelta" class="headerlink" title="odelta"></a><code>odelta</code></h5><p>采样周期的实际值。如果实际值与标称值不同则有值。<br>一般来说都是未定义的。</p><h5 id="b-e"><a href="#b-e" class="headerlink" title="b, e"></a><code>b, e</code></h5><p>文件的起始时间和结束时间，相对于参考时刻的秒数</p><h5 id="leven"><a href="#leven" class="headerlink" title="leven"></a><code>leven</code></h5><p>数据为等间隔则为True，否则为False</p><h5 id="depmin-depmax-depmen"><a href="#depmin-depmax-depmen" class="headerlink" title="depmin depmax depmen"></a><code>depmin depmax depmen</code></h5><p>因变量Y的最小值、最大值、均值。在读入SAC文件以及对数据进行处理时，这三个头段变量的值会被自动计算并更新。</p><h5 id="scale"><a href="#scale" class="headerlink" title="scale"></a><code>scale</code></h5><p>因变量比例因子，即真实物理场被乘以该比例因子而得到现有数据。<br><code>scale=1.0e20</code> 指乘10^20转换量级</p><h5 id="xmininum-xmaximum-yminimum-ymaximum"><a href="#xmininum-xmaximum-yminimum-ymaximum" class="headerlink" title="xmininum xmaximum yminimum ymaximum "></a><code>xmininum xmaximum yminimum ymaximum </code></h5><p>仅用于3D文件中，记录X、Y的最小、最大值。</p><h5 id="nxsize-nysize"><a href="#nxsize-nysize" class="headerlink" title="nxsize nysize"></a><code>nxsize nysize</code></h5><p>仅用于3D文件中，记录X、Y方向的数据点数。</p><h5 id="iqual"><a href="#iqual" class="headerlink" title="iqual"></a><code>iqual</code></h5><p>iqual标识数据质量，可以取如下值：</p><ul><li>IGOOD 高质量数据</li><li>IGLCH 数据中有毛刺 glitches</li><li>IDROP 数据有丢失 dropouts</li><li>ILOWSN 低信噪比数据</li><li>IOTHER 其他</li></ul><h5 id="isynth"><a href="#isynth" class="headerlink" title="isynth"></a><code>isynth</code></h5><p>合成数地震图标识<br><code>IRLDTA</code> 真实数据</p><h4 id="事件相关变量"><a href="#事件相关变量" class="headerlink" title="事件相关变量"></a>事件相关变量</h4><h5 id="kevnm"><a href="#kevnm" class="headerlink" title="kevnm"></a><code>kevnm</code></h5><p>事件名，长度为16个字节</p><h5 id="evla-evlo-evel-evdp"><a href="#evla-evlo-evel-evdp" class="headerlink" title="evla evlo evel evdp"></a><code>evla evlo evel evdp</code></h5><p>分别代表事件发生的 纬度（-90<del>90） 经度（-180</del>180） 高程（m）和深度（km）</p><h5 id="ievreg"><a href="#ievreg" class="headerlink" title="ievreg"></a><code>ievreg</code></h5><p>事件发生的地理区域</p><p>Flinn-Engdahl Regions: <a href="http://en.wikipedia.org/wiki/Flinn-Engdahl_regions">http://en.wikipedia.org/wiki/Flinn-Engdahl_regions</a></p><h5 id="ievtyp"><a href="#ievtyp" class="headerlink" title="ievtyp"></a><code>ievtyp</code></h5><p>事件类型</p><ul><li>IUNKN 未知事件</li><li>INUCL 核事件</li><li>IEQ 地震</li><li>IOTHER 其他</li></ul><h5 id="mag"><a href="#mag" class="headerlink" title="mag"></a><code>mag</code></h5><p>震级</p><h5 id="imagsrc"><a href="#imagsrc" class="headerlink" title="imagsrc"></a><code>imagsrc</code></h5><p>震级信息来源</p><ul><li>INEIC：<a href="http://earthquake.usgs.gov/earthquakes/search/">http://earthquake.usgs.gov/earthquakes/search/</a></li><li>IPDE：<a href="https://earthquake.usgs.gov/data/comcat/catalog/us/">https://earthquake.usgs.gov/data/comcat/catalog/us/</a></li><li>IISC：<a href="http://www.isc.ac.uk/iscbulletin/search/catalogue/">http://www.isc.ac.uk/iscbulletin/search/catalogue/</a></li><li>IREB：人工检查过的事件目录</li><li>IUSGS ：USGS</li><li>IBRK ：UC Berkeley</li><li>ICALTECH：California Institute of Technology</li><li>ILLNL：Lawrence Livermore National Laboratory</li><li>IEVLOC：Event Location</li><li>IJSOP：Joint Seismic Observation Program</li><li>IUSER：The individual using SAC2000</li><li>IUNKNOWN：未知</li></ul><h5 id="imagtyp"><a href="#imagtyp" class="headerlink" title="imagtyp"></a><code>imagtyp</code></h5><p>震级类型</p><ul><li>IMB：体波震级</li><li>IMS：面波震级</li><li>IML：区域震级</li><li>IMW：矩震级</li><li>IMD：持续时间震级</li><li>IMX：用户自定义震级</li></ul><h5 id="grarc"><a href="#grarc" class="headerlink" title="grarc"></a><code>grarc</code></h5><p>全称Great Circle Arc；震中距，震中到台站大圆弧的长度，单位为度</p><h5 id="dist"><a href="#dist" class="headerlink" title="dist"></a><code>dist</code></h5><p>震中与台站之间的距离，单位为km</p><h5 id="az"><a href="#az" class="headerlink" title="az"></a><code>az</code></h5><p>方位角，震中到台站的连线与地理北向的夹角，单位为度</p><h5 id="baz"><a href="#baz" class="headerlink" title="baz"></a><code>baz</code></h5><p>反方位角，台站到震中的连线与地理北向的夹角，单位为度</p><h5 id="o-ko"><a href="#o-ko" class="headerlink" title="o ko"></a><code>o ko</code></h5><ul><li>o 事件发生时刻相对于参考时刻的秒数</li><li>ko 绘图时时间变量o的标识符</li></ul><h5 id="khole"><a href="#khole" class="headerlink" title="khole"></a><code>khole</code></h5><p>若为核爆事件，为孔眼标识；如果是其他事件为位置标识</p><h5 id="nevid-norid-nwfid"><a href="#nevid-norid-nwfid" class="headerlink" title="nevid norid nwfid"></a><code>nevid norid nwfid</code></h5><p>标识事件ID、 起始时间ID、 波形ID</p><h4 id="台站相关变量"><a href="#台站相关变量" class="headerlink" title="台站相关变量"></a>台站相关变量</h4><h5 id="knetwk-kstnm"><a href="#knetwk-kstnm" class="headerlink" title="knetwk kstnm"></a><code>knetwk kstnm</code></h5><p>地震台网名、台站名</p><h5 id="istreg"><a href="#istreg" class="headerlink" title="istreg"></a><code>istreg</code></h5><p>台站地理区域</p><h5 id="stla-stlo-stel-stdp"><a href="#stla-stlo-stel-stdp" class="headerlink" title="stla stlo stel stdp"></a><code>stla stlo stel stdp</code></h5><p>台站纬度、精度、高程（地震仪与海平面之间高程差（m））和深度（地震仪相对于当地地表的深度（m））</p><h5 id="cmpaz-cmpinc-kcmpnm-kstcmp"><a href="#cmpaz-cmpinc-kcmpnm-kstcmp" class="headerlink" title="cmpaz cmpinc kcmpnm kstcmp"></a><code>cmpaz cmpinc kcmpnm kstcmp</code></h5><p>方位角、入射角、通道名和辅助型变量（表示台站分量）<br>前两者详见<a href="https://zhiyuanshi1901.github.io/2022/08/14/Rdseed%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/">Rdseed学习笔记</a></p><p>kcmpnm 通道名（component name），用于存储通道的信息。包含三个英文字符，包括：<br>频带码（Band Code）、仪器码（Instrument Code）和方位码（Orientation Code）。</p><h5 id="lpspol"><a href="#lpspol" class="headerlink" title="lpspol"></a><code>lpspol</code></h5><p>如图，左手坐标系下，三通道都是正极性为真，否则为假</p><h4 id="震相相关变量"><a href="#震相相关变量" class="headerlink" title="震相相关变量"></a>震相相关变量</h4><h5 id="a-f-tn"><a href="#a-f-tn" class="headerlink" title="a f tn"></a><code>a f tn</code></h5><p>a、f存储事件初动、结束时刻相对于参考时刻的秒数<br>Tn：n&#x3D;0-9 存储用户自定义的时刻相对于参考时刻的秒数，常用存储震相到时</p><h5 id="ka-kf-ktn"><a href="#ka-kf-ktn" class="headerlink" title="ka kf ktn"></a><code>ka kf ktn</code></h5><p>头段变量a、f、tn都有一个对应的k开头的字符型头段变量，称之为时间标识。<br>时间标识用于说明对应的时间头段变量中所包含时间的含义。</p><p>a中包含P波到时，ka&#x3D;P；</p><p>t1中包含PcP震相的到时，则kt1设置为PcP</p><p>在绘图时，若时间头段变量中有值，则默认会在该时刻处绘制一条垂线，若相应的时间标记有定义，则将时间标记的值显示在垂线附近。</p><h5 id="Xmarker"><a href="#Xmarker" class="headerlink" title="Xmarker"></a><code>Xmarker</code></h5><p>震相相关的变量可以构成一个辅助型变量。<br><code>a</code>和<code>ka</code>可以构成<code>amarker</code>,<code>f</code>和<code>kf</code>可以构成<code>fmarker</code>，<br><code>o</code>和<code>ko</code>可以构成<code>omarker</code>，<code>tn</code>和<code>ktn</code>可以构成<code>tnmarker</code>(n&#x3D;0-9)。</p><h4 id="仪器相关变量"><a href="#仪器相关变量" class="headerlink" title="仪器相关变量"></a>仪器相关变量</h4><h5 id="kinst"><a href="#kinst" class="headerlink" title="kinst"></a><code>kinst</code></h5><p>记录仪器的通用名称</p><h5 id="iinst"><a href="#iinst" class="headerlink" title="iinst"></a><code>iinst</code></h5><p>记录仪器的类型</p><h5 id="respn"><a href="#respn" class="headerlink" title="respn"></a><code>respn</code></h5><p>仪器相应参数</p><h4 id="其它变量"><a href="#其它变量" class="headerlink" title="其它变量"></a>其它变量</h4><h5 id="usern"><a href="#usern" class="headerlink" title="usern"></a><code>usern</code></h5><p>n&#x3D;0-9 用于存储用户自定义的浮点型数值</p><h5 id="kusern"><a href="#kusern" class="headerlink" title="kusern"></a><code>kusern</code></h5><p>n&#x3D;0-2 用于存储用户自定义字符型值</p><h5 id="lovrok"><a href="#lovrok" class="headerlink" title="lovrok"></a><code>lovrok</code></h5><p>若为真，则磁盘里的原始数据可以被覆盖；</p><p>若为假，则原始数据不可被覆盖。</p><p>用于保护原始数据。建议先做好备份再操作原始数据。</p><h5 id="lcalda"><a href="#lcalda" class="headerlink" title="lcalda"></a><code>lcalda</code></h5><p>全称：Calculate Distance and Azimuth。如果为真，则当事件和台站<br>的坐标被写入或被修改时，头段变量<code>dist</code> <code>gcarc</code> <code>az</code> <code>baz</code>将自动计算，否则不会被自动计算，SAC头段中存在信息的不兼容。</p><h5 id="kdatrd"><a href="#kdatrd" class="headerlink" title="kdatrd"></a><code>kdatrd</code></h5><p>数据被读入计算机的日期。</p>]]></content>
      
      
      <categories>
          
          <category> 地震学常用软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rdseed学习笔记</title>
      <link href="/2022/08/14/Rdseed%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/08/14/Rdseed%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>Rdseed软件是IRIS提供，用于读取SEED格式文件、并转化为SAC、ASCII、SEGY等<br>常用格式的转化软件。</p><p>由于Rdseed安装较为繁琐，在本电脑上未能成功实现安装。若安装成功，将在未来几个月内进行更新。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>[1] <a href="https://github.com/iris-edu-legacy/rdseed">https://github.com/iris-edu-legacy/rdseed</a></p><p>[2] <a href="https://blog.seisman.info/rdseed-notes/">https://blog.seisman.info/rdseed-notes/</a></p><p>说明：<br>()内文字为[2]中的中文内容，[]中文字为[1]中README文件的中文直译。语法说明中其他中文补充内容为[1]中README文件中文直译。</p><h1 id="语法说明"><a href="#语法说明" class="headerlink" title="语法说明"></a>语法说明</h1><p>使用<code>rdseed -h</code>或者<code>rdseed -u</code>可查看命令选项和语法说明。</p><p>The following options may be selected:</p><ul><li><p>-a  retrieve the abbreviation dictionaries (提取缩略词词典)</p></li><li><p>-b n  set the seismogram input buffer size (bytes) (设置输出波形数据的最大数据点数<br>，默认为2*E7)</p></li><li><p>-c retrieve volume table of contents (提取文件内容的目录信息)[检索卷目录]</p></li><li><p>-C arg  retrieve the comments where ‘arg’ is either STN or CHN<br>(提取台站或分量的注释信息)    [检索 “arg”为STN或CHN的注释]</p></li><li><p>-d output data records (follow with -o to select a format or it defaults to SAC)<br>(从seed数据中提取波形数据)[输出数据记录(后跟-o以选择格式，否则默认为SAC)]</p></li><li><p>-e  extract event&#x2F;station data<br>(提取事件或台站数据到文件)[提取事件&#x2F;站数据]</p></li><li><p>-E output filename will include endtime<br>(输出的波形数据的文件名中包含结束时间)[输出文件名将包括结束时间]</p></li><li><p>-f file   input file name<br>(输入文件名)[输入文件名]</p></li><li><p>-g file   specify alternate SEED volume for metadata (see ALT_RESPONSE_FILE)</p><p>  (为 SEED 或 miniSEED 数据单独指定响应文件。响应文件可以是 SEED 格式也可以是 dateless SEED 格式，也可以通过设置环境变量 ALT_RESPONSE_FILE 指定响应文件，这样 做的好处在于可以多个 SEED 文件共用一套响应文件。)</p><p>  [为元数据指定备用SEED卷(参见ALT_RESPONSE_FILE)]</p></li><li><p>-h help (this list)<br>(显示语法)[显示这个用法列表]</p></li><li><p>-i ignore location codes<br>(忽略位置码)[忽略位置代码]</p></li><li><p>-k  strip records from output which have a zero sample count (miniSEED and SEED output only)<br>(跳过数据点为0的记录)[采样计数为零的输出条带记录(仅限miniSEED和SEED输出)]</p></li><li><p>-l  list contents of each record in the volume<br>(列出每个 block 的内容)[列出卷中每条记录的内容]</p></li><li><p>-o n  specify output format (numeric value, see examples below). Use -d with this option.<br>(输出波形数据的格式。默认为SAC格式。n取值范围为1-9。其中 SAC（1）、 AH（2）、CSS（3）、miniSEED（4）、SEED（5）、SAC ASCII（6）、SEGY（7）、 Simple ASCII(SLIST)（8）、Simple ASCII(TSPAIR)（9）)</p><p>  [指定输出格式(数值，参见下面的示例)。在此选项中使用-d。]</p></li><li><p>-p output poles and zeros<br>(输出 SAC PZ 格式的仪器响应文件)[输出极点和零点]</p></li><li><p>-q dir   specify the output directory<br>(指定输出目录，该目录必须已经存在，默认输出到当前目录)[指定输出目录为dir]</p></li><li><p>-Q  qual specify data quality [E,D,M,Q,R] (see Input Options below for details)<br>(选择波形数据质量)[qual指定数据质量<a href="%E8%AF%A6%E8%A7%81%E4%B8%8B%E9%9D%A2%E7%9A%84%E8%BE%93%E5%85%A5%E9%80%89%E9%A1%B9">E,D,M,Q,R</a>]</p><ul><li>E： 全部质量的波形数据 </li><li>D： 不确定状态的数据</li><li>M： 已合并的数据</li><li>R： 原始波形数据</li><li>Q： 经过质量控制的数据</li></ul></li><li><p>-R print response data<br>(输出RESP格式的仪器响应文件)[打印响应数据]</p></li><li><p>-s retrieve all station header information<br>(输出全部台站的RESP格式一起响应文件到终端)[检索所有站标头信息]</p></li><li><p>-S retrieve station summary information<br>(提取台站汇总信息到文件rdseed.stations，内容包括台站名、台网名、经纬度、海拔、分量、台站开始时间和结束时间)</p><p>[检索站摘要信息]</p></li><li><p>-t show start&#x2F;stop times, start blocks of events<br>(输出波形相关信息到终端，包括：台站名、分量名、台网名、位置码、质量控制符、波形开始时间、结束时间、采样率、数据点数。)</p><p>  [显示开始&#x2F;停止时间，开始事件块]</p></li><li><p>-u show usage (this list)<br>(显示语法)[显示使用方式]</p></li><li><p>-v n   select volume number<br>(选择卷号，默认值为1.对于seed文件n只能取1)[选择卷号]</p><ul><li>可以使用(-v选项)选择文件或磁带上所需的顺序卷。<br>  第一卷是“1”，第二卷是“2”，以此类推。备注:该选项仅适用于包含多个逻辑卷的物理卷。</li></ul></li><li><p>-x use summary file<br>(使用JWEED生成的summary文件，根据summary文件提取指定台站、分量和时间窗内的波形数据)[使用summary文件]</p></li><li><p>-z n  check for reversals and apply sign change correction based on the number n&#x3D;[0-3]<br>    (see Check Reversal under Options section below)<br>(检查并校正数据极性)</p><p>  [检查反转情况，并根据数字n&#x3D;[0-3]应用符号更改纠正</p></li></ul><p>(请参阅下面选项部分的逆转检查)]</p><h1 id="极性及其校正"><a href="#极性及其校正" class="headerlink" title="极性及其校正"></a>极性及其校正</h1><p>参考于<a href="https://blog.seisman.info/rdseed-notes/">seisman</a>博客</p><p>地震仪的传感器记录三分量值，若地面运动与仪器的敏感轴运动方向一致时，输出为正值。</p><p>SAC头段中cmpaz和cmpinc是用于描述正方向的方法。</p><p>cmpaz：敏感轴的方位角，从正北方向N开始顺时针旋转。</p><p>cmpinc：敏感轴的入射角，垂直向上方向开始旋转的角度。</p><p>下列方向对应的方位角和入射角参数：</p><table><thead><tr><th align="center">方向</th><th align="center">cmpaz（方位角）</th><th align="center">cmpinc（入射角）</th><th align="center">方位码</th><th align="center">极性</th></tr></thead><tbody><tr><td align="center">垂直向上</td><td align="center">&gt;0</td><td align="center">&gt;0</td><td align="center">&gt;Z</td><td align="center">&gt;正</td></tr><tr><td align="center">垂直向下</td><td align="center">&gt;0</td><td align="center">&gt;180</td><td align="center">&gt;Z</td><td align="center">&gt;负</td></tr><tr><td align="center">正北</td><td align="center">&gt;0</td><td align="center">&gt;90</td><td align="center">&gt;N</td><td align="center">&gt;正</td></tr><tr><td align="center">正南</td><td align="center">&gt;180</td><td align="center">&gt;90</td><td align="center">&gt;N</td><td align="center">&gt;负</td></tr><tr><td align="center">正东</td><td align="center">&gt;90</td><td align="center">&gt;90</td><td align="center">&gt;E</td><td align="center">&gt;正</td></tr><tr><td align="center">正西</td><td align="center">&gt;270</td><td align="center">&gt;90</td><td align="center">&gt;E</td><td align="center">&gt;负</td></tr></tbody></table><p><code>-z n</code>选项可以用于检测和校正负极性。</p><ul><li>n&#x3D;0  不检测极性</li><li>n&#x3D;1  只检查两个参数； 如果是负极性，就反转所有数据点的正负号并修改这两个参数的值。</li><li>n&#x3D;2  只检查总增益的正负值；如果是负值表示负极性，反转所有数据的正负号，不修改这两个参数的值。</li><li>n&#x3D;3  同时检查两个参数和总增益，只有其中之一符合负极性要求时做校正。</li></ul><p>注意：两个参数指cmpaz和cmpnic</p><p>由于正负极性概念仅适用于6个标准分量方向，对于垂向分量而言，通常需要校正极性，负责查看Z分量波形数据时，可能出现某个台站波形极性错误。对于水平分量不做校正也不会有问题。<br><a href="https://blog.seisman.info/rdseed-notes/">seisman</a>建议使用n&#x3D;1做极性校正。</p>]]></content>
      
      
      <categories>
          
          <category> 地震学常用软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rdseed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu与windows双系统设置windows默认启动</title>
      <link href="/2022/08/13/Ubuntu%E8%AE%BE%E7%BD%AEwindows%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8/"/>
      <url>/2022/08/13/Ubuntu%E8%AE%BE%E7%BD%AEwindows%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p>参考：<br><a href="https://blog.csdn.net/qq_35708970/article/details/124853492">https://blog.csdn.net/qq_35708970/article/details/124853492</a></p><h1 id><a href="#" class="headerlink" title></a></h1><p>在安装ubuntu和windows双系统后，<br>默认进入ubuntu。平时经常使用windows，所以很不方便。因此修改为windows默认启动。</p><p>打开终端，输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/default/grub</span><br></pre></td></tr></table></figure><p>将第6行的 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GTUB_DEFAULT=0</span><br></pre></td></tr></table></figure><p>后面的数字修改为进入系统前windows所处的位置，为第n个时，0改为n-1。</p><p>保存后，运行以下命令更新grub文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure><p>重启系统即可。</p><p>安装双系统后，<br>Windows系统重启不能重启到BIOS界面之前，只能对Windows系统进行重启。Linux系统重启可以重新进入BIOS。目前未能解决这个问题。</p>]]></content>
      
      
      <categories>
          
          <category> Linux学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Obspy学习笔记</title>
      <link href="/2022/08/10/Obspy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/08/10/Obspy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="1、UTC标准时间、地震数据读取、数据中心"><a href="#1、UTC标准时间、地震数据读取、数据中心" class="headerlink" title="1、UTC标准时间、地震数据读取、数据中心"></a>1、UTC标准时间、地震数据读取、数据中心</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">from obspy.core import UTCDateTime</span><br><span class="line"></span><br><span class="line"># 设置UTC世界标准时间</span><br><span class="line">    print(UTCDateTime(&quot;2012-09-07T12:15:00&quot;))</span><br><span class="line">    </span><br><span class="line">    print(UTCDateTime(2012, 9, 7, 12, 15))</span><br><span class="line">    </span><br><span class="line">    print(UTCDateTime(1347020100.0))</span><br><span class="line">    </span><br><span class="line">    print(UTCDateTime(&quot;2012-09-07T12:15:00+02:00&quot;)) # 更改时区</span><br><span class="line">    </span><br><span class="line">    time = UTCDateTime(&quot;2012-09-07T12:15:00&quot;)</span><br><span class="line">    print(time.year) # 年份属性</span><br><span class="line">    print(time.julday) # 属性</span><br><span class="line">    print(time.timestamp) #</span><br><span class="line">    print(time.weekday) #存疑 返回一周的第几天，周一为0开始</span><br><span class="line">    </span><br><span class="line">    print(time + 3600)   # 增加3600秒</span><br><span class="line">    time2 = UTCDateTime(2012, 9, 7)</span><br><span class="line">    print(time - time2)  # 返回秒数差</span><br><span class="line"></span><br><span class="line">## 地震数据读取</span><br><span class="line">from obspy import read</span><br><span class="line"></span><br><span class="line"># 读取obspy实例网站http://examples.obspy.org/内的数据。</span><br><span class="line">st = read(&quot;http://examples.obspy.org/RJOB_061005_072159.ehz.new&quot;)</span><br><span class="line">print(st)</span><br><span class="line">tr = st[0]  # st中只有一个示例</span><br><span class="line"></span><br><span class="line">print(&quot;next\n&quot;)</span><br><span class="line">print(tr)</span><br><span class="line">## 访问元信息</span><br><span class="line">print(&quot;next\n&quot;)</span><br><span class="line">print(tr.stats)</span><br><span class="line">print(tr.stats.station)  # 返回stats中的station信息</span><br><span class="line">print(tr.stats.gse2.datatype) # 返回datatype信息</span><br><span class="line"></span><br><span class="line"># 访问波形数据</span><br><span class="line">print(tr.data)  # 对tr中的波形数据检索，返回值为数组</span><br><span class="line">print(tr.data[0:3])</span><br><span class="line">print(len(tr)) # 返回波形数据长度</span><br><span class="line"></span><br><span class="line"># 数据浏览</span><br><span class="line">st.plot()  # 快速浏览波形</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"># 波形绘制</span><br><span class="line">from obspy.core import read</span><br><span class="line">singlechannel = read(&#x27;https://examples.obspy.org/COP.BHZ.DK.2009.050&#x27;)</span><br><span class="line">print(singlechannel)</span><br><span class="line">threechannels = read(&quot;https://examples.obspy.org/COP.BHE.DK.2009.050&quot;)</span><br><span class="line">threechannels += read(&quot;https://examples.obspy.org/COP.BHN.DK.2009.050&quot;)</span><br><span class="line">threechannels += read(&quot;https://examples.obspy.org/COP.BHZ.DK.2009.050&quot;)</span><br><span class="line">print(threechannels)</span><br><span class="line"></span><br><span class="line">singlechannel.plot()  # 绘制singlechannel图像</span><br><span class="line"># 自定义选项</span><br><span class="line">dt = singlechannel[0].stats.starttime</span><br><span class="line">singlechannel.plot(color=&#x27;red&#x27;, number_of_ticks=7,</span><br><span class="line">     tick_rotation = 5, tick_format=&#x27;%l:%M %p&#x27;,</span><br><span class="line">     starttime = dt + 60*60, endtime = dt+60*60+120,</span><br><span class="line">                   outfile = &#x27;singlechannel.png&#x27;)</span><br><span class="line">## outfile 将图像保存到系统中。</span><br><span class="line"></span><br><span class="line">threechannels.plot(size=(800, 600))</span><br><span class="line"># 自行设置图像分辨率大小，多个trace会同时显示</span><br><span class="line"></span><br><span class="line">singlechannel.plot(type=&#x27;dayplot&#x27;)</span><br><span class="line"># 一天的trace图像，设置dayplot参数可以打印一天的图像</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"># 绘制具有事件信息的记录</span><br><span class="line">from obspy import read</span><br><span class="line">st = read(&quot;http://examples.obspy.org/GR.BFO..LHZ.2012.108&quot;)</span><br><span class="line">st.filter(&quot;lowpass&quot;, freq=0.1, corners=2)</span><br><span class="line">st.plot(type=&quot;dayplot&quot;, interval=60, right_vertical_labels=False,</span><br><span class="line">        vertical_scaling_range=5e3,</span><br><span class="line">        one_tick_per_line=True,</span><br><span class="line">        color=[&#x27;k&#x27;,&#x27;r&#x27;,&#x27;b&#x27;,&#x27;g&#x27;],</span><br><span class="line">        show_y_UTC_label=False,</span><br><span class="line">        events=&#123;&#x27;min_magnitude&#x27;:6.5&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># stream.plot(type=&#x27;section&#x27;)</span><br><span class="line"># 绘制stream中的某一段记录</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"># 使用matplotlib自定义绘图</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from obspy import read</span><br><span class="line"></span><br><span class="line">st = read(&quot;http://examples.obspy.org/RJOB_061005_072159.ehz.new&quot;)</span><br><span class="line">tr = st[0]</span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.add_subplot(1, 1, 1)</span><br><span class="line">ax.plot(tr.times(&quot;matplotlib&quot;), tr.data, &quot;b-&quot;)</span><br><span class="line">ax.xaxis_date()</span><br><span class="line">fig.autofmt_xdate()</span><br><span class="line">plt.show()</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><h1 id="重要"><a href="#重要" class="headerlink" title="重要"></a>重要</h1><h2 id="数据中心检索数据"><a href="#数据中心检索数据" class="headerlink" title="数据中心检索数据"></a>数据中心检索数据</h2><h2 id="1-FDSN网络服务"><a href="#1-FDSN网络服务" class="headerlink" title="1 FDSN网络服务"></a>1 FDSN网络服务</h2><pre><code>import obspy.clients.fdsn</code></pre><h2 id="2-Arclink网络服务"><a href="#2-Arclink网络服务" class="headerlink" title="2 Arclink网络服务"></a>2 Arclink网络服务</h2><h2 id="3-IRIS网络服务"><a href="#3-IRIS网络服务" class="headerlink" title="3 IRIS网络服务"></a>3 IRIS网络服务</h2><h2 id="4-Earthworm-wave服务"><a href="#4-Earthworm-wave服务" class="headerlink" title="4 Earthworm wave服务"></a>4 Earthworm wave服务</h2><pre><code>import obspy.clients.earthworm</code></pre><h2 id="5-NEIC网络服务"><a href="#5-NEIC网络服务" class="headerlink" title="5 NEIC网络服务"></a>5 NEIC网络服务</h2><pre><code>import obspy.clients.neic</code></pre><h2 id="6-Syngine服务"><a href="#6-Syngine服务" class="headerlink" title="6 Syngine服务"></a>6 Syngine服务</h2><pre><code>import obspy.clients.syngine</code></pre>]]></content>
      
      
      <categories>
          
          <category> 地震学常用软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Obspy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客增加搜索功能</title>
      <link href="/2022/08/06/%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/"/>
      <url>/2022/08/06/%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>hexo博客可以使用本地搜索实现搜索服务。</p><p>参考：</p><p><a href="https://blog.csdn.net/zyq55917/article/details/125278500">https://blog.csdn.net/zyq55917/article/details/125278500</a></p><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><p>在blog根目录下git bash：</p><pre><code>npm install hexo-generator-searchdb</code></pre><h1 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h1><p>在blog根目录下的_config.yml中增加内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">    path: search.xml</span><br><span class="line">    field: post</span><br><span class="line">    content: true</span><br><span class="line">    format: html</span><br></pre></td></tr></table></figure><h1 id="next配置"><a href="#next配置" class="headerlink" title="next配置"></a>next配置</h1><p>在主题之下的_config.yml文件中启用search服务。</p><p>只要将<code>enable</code>修改为<code>true</code>即可。</p><p>可以选择auto自动搜索或者manual按回车搜索。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # If auto, trigger search by changing input.</span><br><span class="line">  # If manual, trigger search by pressing enter key or search button.</span><br><span class="line">  trigger: auto</span><br><span class="line">  # Show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  # Unescape html strings to the readable one.</span><br><span class="line">  unescape: false</span><br><span class="line">  # Preload the search data when the page loads.</span><br><span class="line">  preload: false</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客创建 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu安装firefox中国版</title>
      <link href="/2022/08/06/Ubuntu%E5%AE%89%E8%A3%85firefox%E4%B8%AD%E5%9B%BD%E7%89%88/"/>
      <url>/2022/08/06/Ubuntu%E5%AE%89%E8%A3%85firefox%E4%B8%AD%E5%9B%BD%E7%89%88/</url>
      
        <content type="html"><![CDATA[<p>Ubuntu安装有firefox，但是登录账号之后书签数据不能同步，因为Ubuntu默认安装为国际版firefox<br>，因此将其卸载并安装中国版firefox。</p><p>参考：</p><p><a href="https://www.jianshu.com/p/775f1f6b75d5">https://www.jianshu.com/p/775f1f6b75d5</a></p><h1 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h1><p>在官方应用商店即可卸载firefox</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>官网下载firefox：<a href="https://www.firefox.com.cn/">https://www.firefox.com.cn/</a><br>解压到&#x2F;opt目录：</p><pre><code>tar -xjvf 将文件拖到此处即可 -C /opt</code></pre><h1 id="创建桌面快捷方式"><a href="#创建桌面快捷方式" class="headerlink" title="创建桌面快捷方式"></a>创建桌面快捷方式</h1><pre><code>sudo nano /usr/share/applications/firefox.desktop</code></pre><p>使用vi编辑器编辑该文件，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name=firefox</span><br><span class="line">Name[zh_CN]=火狐浏览器</span><br><span class="line">Comment=火狐浏览器</span><br><span class="line">Exec=/opt/firefox/firefox</span><br><span class="line">Icon=/opt/firefox/browser/chrome/icons/default/default128.png</span><br><span class="line">Terminal=false</span><br><span class="line">Type=Application</span><br><span class="line">Categories=Application;</span><br><span class="line">Encoding=UTF-8</span><br><span class="line">StartupNotify=true</span><br></pre></td></tr></table></figure><h1 id="创建启动程序链接"><a href="#创建启动程序链接" class="headerlink" title="创建启动程序链接"></a>创建启动程序链接</h1><pre><code>sudo ln -s /usr/share/applications/firefox.desktop /usr/bin/firefox</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GMT学习笔记</title>
      <link href="/2022/08/05/GMT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/08/05/GMT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>参考：</p><p><a href="https://docs.gmt-china.org/latest/">https://docs.gmt-china.org/latest/</a></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>GMT分为Linux版本和Windows版本，本次使用在linux版本，在ubuntu下运行。<br>使用miniconda进行安装gmt十分方便。</p><pre><code>conda install gmt -c conda-forgegmt --version  //进行测试</code></pre><p>升级：</p><pre><code>conda update gmt</code></pre><p>卸载：</p><pre><code>conda remove gmt</code></pre><h1 id="入门使用"><a href="#入门使用" class="headerlink" title="入门使用"></a>入门使用</h1><h2 id="初步使用"><a href="#初步使用" class="headerlink" title="初步使用"></a>初步使用</h2><h3 id="GMT基本内容"><a href="#GMT基本内容" class="headerlink" title="GMT基本内容"></a>GMT基本内容</h3><p>在终端中输入</p><pre><code>gmt  //开始使用gmtgmt --new-script &gt; 文件名 //创建一个.sh文件gedit 文件名 //使用gedit文本编辑器编辑脚本文件bash 文件名  //执行该脚本</code></pre><p>建立的gmt文件内容为：</p><p>文件内容：</p><pre><code>gmt begin figurename pdf  # figurename指生成图片文件名，不给定时默认gmtsession# pdf为格式。    # Place modern session commands here    gmt coast -Rg -JH15c -Gpurple -Baf -B+t&quot;My first Plot&quot;gmt end show  # show表示自动打开生成的图片文件</code></pre><h3 id="GMT脚本模板"><a href="#GMT脚本模板" class="headerlink" title="GMT脚本模板"></a>GMT脚本模板</h3><p>gmt的命令格式为：</p><p>gmt+模块名+[-选项+参数]</p><p>coast 表示绘制海岸线</p><p>-R指选项，g为参数</p><p>+t为-B的子选项</p><h3 id="coast模块"><a href="#coast模块" class="headerlink" title="coast模块"></a>coast模块</h3><ul><li><p>-JH180&#x2F;15c：指定地图投影参数，H表示使用Hammer投影，地图中心为经度180°（0-360°为标准）<br>地图宽度为15cm</p><ul><li>H：hammer投影</li><li>M：墨卡托投影</li></ul></li><li><p>-R 表示指定绘图范围。格式为：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-R起始经度/结束经度/起始纬度/结束纬度</span><br><span class="line">-Rg # g表示global，写法相当于下面语句，表示绘制全球地图</span><br><span class="line">-R0/360/-90/90</span><br></pre></td></tr></table></figure><p>  或者使用国家代码表示区域范围</p><ul><li>NZ：新西兰国家代码，表示绘制该国的地图。</li><li>CN：中国国家代码。</li></ul></li><li><p>-B 表示增加边框及经纬线，参数一般为g。</p><ul><li>a：annotation 增加标注，即经纬度数字等</li><li>f：frame 刻度线，周边的刻度线</li><li>g：grid 网格线</li><li>xa4g2： 表示x轴标注间隔4°，网格线间隔2°，y轴同理</li><li>WSen：控制四条边的属性，大写表示添加标注，小写表示只绘制边框不显示标注</li><li>+t“标题内容”：增加标题</li></ul></li><li><p>-W 表示绘制海岸线</p><ul><li>0.5p,black：表示岸线为0.5p宽的黑色线条<ul><li>颜色有：黑色black，浅红色lightred</li></ul></li><li>1&#x2F;0.5p,black：1&#x2F;表示绘制1级海岸线</li></ul></li><li><p>-A 绘制对象湖泊或岛屿的最小面积（平方千米）</p></li><li><p>-G 设置陆地填充色</p></li><li><p>-S 设置水体颜色</p></li><li><p>-C 设置湖泊颜色，不设置为S颜色</p></li><li><p>-N 绘制国界、省界等，</p><ul><li>-N1 表示国界</li><li>-N2 表示省界 此处使用中国国界省界数据绘制，具体内容如下：<a href="https://docs.gmt-china.org/latest/dataset-CN/CN-border/">https://docs.gmt-china.org/latest/dataset-CN/CN-border/</a></li></ul><p>下载好相应数据包后，使用方式如下：<br>      <figure class="highlight plaintext"><figcaption><span>plot CN-border-La.gmt -W0.1p```，此绘制的事中国国界省界十段线和南海诸岛。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  </span><br><span class="line">+ -L 添加比例尺</span><br><span class="line">    </span><br><span class="line">    比例尺参数</span><br><span class="line">  + g经度/纬度  比例尺位置</span><br><span class="line">  + +w1000k 比例尺长度为1000km</span><br><span class="line">  + +c25 绘制比例尺为北纬25°</span><br><span class="line">  + +f 比例尺风格</span><br><span class="line">  + +u 显示比例尺对应单位</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### basemap模块</span><br><span class="line">绘制线性坐标轴和三维坐标轴</span><br><span class="line">+ -J</span><br><span class="line">  + X8c/5c：X轴宽度8cm、高度5cm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+ -R</span><br><span class="line">  + x轴左/x轴右/y轴左/y轴右，表示图的范围</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+ -B  参数同上</span><br><span class="line">  + +l“坐标轴名”</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">三维线性坐标轴：</span><br><span class="line">+ -R </span><br><span class="line">  + x轴左/x轴右/y轴左/y轴右/z轴下/z轴上</span><br><span class="line"></span><br><span class="line">z轴参数同x、y轴</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### gridimage模块 </span><br><span class="line">绘制全球地形起伏</span><br><span class="line"></span><br><span class="line">+ @erath_relief_xxx指定地形起伏数据精度</span><br><span class="line">  + 30m表示30′分辨率。1′约2km。</span><br><span class="line">  + 1s表示以1″为分辨率，约为30m</span><br><span class="line"></span><br><span class="line">+ -J 同coast模块</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+ -I+d 增加光照效果</span><br><span class="line"></span><br><span class="line">#### 增加色标：</span><br><span class="line"></span><br><span class="line">    gmt colorbar</span><br><span class="line"></span><br><span class="line">+ -B 设置色标标注间隔，添加标签</span><br><span class="line">  + xaf+l“标签”：设置间隔和标签，同上</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+ -D 色标放置位置</span><br><span class="line">  + JMR 地形起伏图右侧中间</span><br><span class="line">  + +w10c 色标长度10cm</span><br><span class="line">  + +o1.5c/0c 向右偏移1.5cm</span><br><span class="line">  + +ml 标签放在色标左侧</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### makecpt模块：</span><br><span class="line">制作CPT文件，供接下来的grdimage和colorcolorbar命令使用。</span><br><span class="line"></span><br></pre></td></tr></table></figure></p></li></ul><p>gmt basemap 参数<br>gmt makecpt -Cglobe -T -8000&#x2F;8000<br>gmt colorbar -Bxa2000 -B+l”m”</p><pre><code></code></pre>]]></content>
      
      
      <categories>
          
          <category> 地震学常用软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GMT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu学习笔记</title>
      <link href="/2022/08/03/Ubuntu%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/08/03/Ubuntu%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>参考：</p><p>邓淼磊,马宏琳.Ubuntu Linux基础教程：微课版[M].北京:清华大学出版社,2021</p><h1 id="创建、挂载、卸载文件系统"><a href="#创建、挂载、卸载文件系统" class="headerlink" title="创建、挂载、卸载文件系统"></a>创建、挂载、卸载文件系统</h1><p>由于不常用，因此忽略。</p><h1 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h1><h2 id="Linux命令"><a href="#Linux命令" class="headerlink" title="Linux命令"></a>Linux命令</h2><h3 id="Shell程序启动"><a href="#Shell程序启动" class="headerlink" title="Shell程序启动"></a>Shell程序启动</h3><p>Ctrl+Alt+T 混合键启动</p><h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><p>命令名 [-选项…][参数…]</p><h2 id="目录操作基本命令"><a href="#目录操作基本命令" class="headerlink" title="目录操作基本命令"></a>目录操作基本命令</h2><h3 id="ls命令：-显示目录下的列表"><a href="#ls命令：-显示目录下的列表" class="headerlink" title="ls命令： 显示目录下的列表"></a>ls命令： 显示目录下的列表</h3><pre><code>ls //当前目录下所有文件及子目录ls 文件名 //显示文件的信息ls [-l] 文件名 //显示文件的详细信息ls /home //显示目录home下的内容</code></pre><h3 id="cd命令：-转换所在目录"><a href="#cd命令：-转换所在目录" class="headerlink" title="cd命令： 转换所在目录"></a>cd命令： 转换所在目录</h3><pre><code>cd [路径名] </code></pre><p>特殊用法： </p><p>. ：当前目录</p><p>.. ：上层目录</p><p>~ ：当前用户的宿主目录</p><p><del>用户名 ：进入</del>后用户的宿主目录</p><p>&#x2F; ：回到根目录</p><p>-：代表前一目录</p><h3 id="pwd命令：-显示当前目录的绝对路径"><a href="#pwd命令：-显示当前目录的绝对路径" class="headerlink" title="pwd命令： 显示当前目录的绝对路径"></a>pwd命令： 显示当前目录的绝对路径</h3><pre><code>pwd</code></pre><h3 id="mkdir命令：-创建一个新目录"><a href="#mkdir命令：-创建一个新目录" class="headerlink" title="mkdir命令： 创建一个新目录"></a>mkdir命令： 创建一个新目录</h3><pre><code>mkdir [选项] 目录名-m //权限 对新建目录设置存取权限-p //一次性建立多级目录，以递归形式建立目录</code></pre><h3 id="rmdir命令：-删除一个空目录"><a href="#rmdir命令：-删除一个空目录" class="headerlink" title="rmdir命令： 删除一个空目录"></a>rmdir命令： 删除一个空目录</h3><pre><code>rmdir [-p] 目录名 // -p指递归删除各级空目录</code></pre><h2 id="文件操作基本命令"><a href="#文件操作基本命令" class="headerlink" title="文件操作基本命令"></a>文件操作基本命令</h2><h3 id="touch命令：-创建空文件"><a href="#touch命令：-创建空文件" class="headerlink" title="touch命令： 创建空文件"></a>touch命令： 创建空文件</h3><pre><code>touch 文件名</code></pre><h3 id="cat命令：-显示文件内容、合并文件"><a href="#cat命令：-显示文件内容、合并文件" class="headerlink" title="cat命令： 显示文件内容、合并文件"></a>cat命令： 显示文件内容、合并文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat [选项] [文件名]</span><br><span class="line">-A 显示所有字符</span><br><span class="line">-n 所有行编号并显示行号</span><br><span class="line">-b 除了空行不编号，对文件中其他行都进行编号并显示行号</span><br><span class="line">-s 将连续的空行压缩为一个空行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; 新文件名  //重导向，将键盘输入文本保存到文件</span><br><span class="line">cat 文件名1 文件名2 &gt; 文件名3  //将1、2文件合并到3文件</span><br><span class="line">cat 文件名2 &gt;&gt; 文件名1  //把文件2的全部内容追加到文件1末尾 </span><br></pre></td></tr></table></figure><h3 id="cp命令：-复制文件"><a href="#cp命令：-复制文件" class="headerlink" title="cp命令： 复制文件"></a>cp命令： 复制文件</h3><pre><code>cp [-选项] 源文件 目标-i //以安全询问方式进行复制 y确认，n否认</code></pre><h3 id="rm命令：-删除指定文件"><a href="#rm命令：-删除指定文件" class="headerlink" title="rm命令： 删除指定文件"></a>rm命令： 删除指定文件</h3><pre><code>rm [选项] [文件名或目录名]-i  //安全询问-r/-R  //递归处理，目录与子目录中所有文件一并删除-f  //强制删除文件或目录-v  //显示命令执行过程-d  //直接把删除的目录硬连接数据修改为0* // 通配符，删除多个文件。例如tr*为删除首为tr开头的所有文件</code></pre><h3 id="mv命令：-文件移动"><a href="#mv命令：-文件移动" class="headerlink" title="mv命令： 文件移动"></a>mv命令： 文件移动</h3><pre><code>mv 文件名 路径名</code></pre><h3 id="chmod命令：-修改文件的权限和文件属性"><a href="#chmod命令：-修改文件的权限和文件属性" class="headerlink" title="chmod命令： 修改文件的权限和文件属性"></a>chmod命令： 修改文件的权限和文件属性</h3><pre><code>chmod [文件使用者-/+/=权限类型] 文件名1 文件名2</code></pre><p>文件使用者类型：</p><ul><li>u：文件主</li><li>g：文件主所在用户组</li><li>o：其他用户</li><li>a：所有用户</li></ul><p>+&#x2F;-&#x2F;&#x3D;：</p><ul><li>+：增加权限</li><li>-：取消权限</li><li>&#x3D;：赋予指定的权限并取消其他权限</li></ul><p>权限类型：</p><ul><li>r：读</li><li>w：写</li><li>x：可执行权限</li></ul><p>数字表示：</p><p>4：读权限&amp;emsp;2：写权限&amp;emsp;1：执行权限&amp;emsp;0：没有权限</p><pre><code>chmod a=rwx filenamechomd 777 filename </code></pre><p>二者等价</p><h2 id="文件处理命令"><a href="#文件处理命令" class="headerlink" title="文件处理命令"></a>文件处理命令</h2><h3 id="grep命令：-制定的文件中查找某个特定的字符串"><a href="#grep命令：-制定的文件中查找某个特定的字符串" class="headerlink" title="grep命令： 制定的文件中查找某个特定的字符串"></a>grep命令： 制定的文件中查找某个特定的字符串</h3><pre><code>grep [选项] 关键字 文件名-i  //不区分大小写</code></pre><h3 id="head命令：-查看文件开头部分的内容"><a href="#head命令：-查看文件开头部分的内容" class="headerlink" title="head命令： 查看文件开头部分的内容"></a>head命令： 查看文件开头部分的内容</h3><pre><code>head [数字选项] 文件名 //数字表示显示几行</code></pre><h3 id="tail命令：-查看文件结尾部分的内容"><a href="#tail命令：-查看文件结尾部分的内容" class="headerlink" title="tail命令： 查看文件结尾部分的内容"></a>tail命令： 查看文件结尾部分的内容</h3><pre><code>tail [数字选项] 文件名</code></pre><h3 id="wc命令：-对文件的行数、单词数、字符数进行统计"><a href="#wc命令：-对文件的行数、单词数、字符数进行统计" class="headerlink" title="wc命令： 对文件的行数、单词数、字符数进行统计"></a>wc命令： 对文件的行数、单词数、字符数进行统计</h3><pre><code>wc [选项] 文件名-l //显示行数-w //显示单词数-m //显示字符数</code></pre><h3 id="sort命令：-对文件内容或者查询结果进行排序"><a href="#sort命令：-对文件内容或者查询结果进行排序" class="headerlink" title="sort命令： 对文件内容或者查询结果进行排序"></a>sort命令： 对文件内容或者查询结果进行排序</h3><pre><code>sort [选项] 文件名//有很多选项，部分如下：-f // 忽略大小写-r //反向排序-t //指定分隔符-i //只考虑可以打印的字符</code></pre><h3 id="find命令：-查找文件或者目录"><a href="#find命令：-查找文件或者目录" class="headerlink" title="find命令： 查找文件或者目录"></a>find命令： 查找文件或者目录</h3><pre><code>find 文件名/目录名</code></pre><h3 id="which命令：-按路径查找相应命令，显示命令的绝对路径"><a href="#which命令：-按路径查找相应命令，显示命令的绝对路径" class="headerlink" title="which命令： 按路径查找相应命令，显示命令的绝对路径"></a>which命令： 按路径查找相应命令，显示命令的绝对路径</h3><pre><code>which 命令名</code></pre><h3 id="whereis命令：查找命令、查找Ubuntu资料库中记载的文件"><a href="#whereis命令：查找命令、查找Ubuntu资料库中记载的文件" class="headerlink" title="whereis命令：查找命令、查找Ubuntu资料库中记载的文件"></a>whereis命令：查找命令、查找Ubuntu资料库中记载的文件</h3><pre><code>whereis [选项] 文件名-b //只查找二进制文件-w //只查找manual路径下的文件</code></pre><h3 id="locate命令：所有与被查询的文件名相同的文件查找出来"><a href="#locate命令：所有与被查询的文件名相同的文件查找出来" class="headerlink" title="locate命令：所有与被查询的文件名相同的文件查找出来"></a>locate命令：所有与被查询的文件名相同的文件查找出来</h3><pre><code>locate 文件名</code></pre><h2 id="压缩备份基本命令"><a href="#压缩备份基本命令" class="headerlink" title="压缩备份基本命令"></a>压缩备份基本命令</h2><h3 id="bzip2和bunzip2命令：-压缩与解压-bz2"><a href="#bzip2和bunzip2命令：-压缩与解压-bz2" class="headerlink" title="bzip2和bunzip2命令： 压缩与解压 .bz2"></a>bzip2和bunzip2命令： 压缩与解压 .bz2</h3><pre><code>bzip2 文件名1 [文件名2] ……bunzip2 文件名1 [文件名2] ……</code></pre><p>压缩文件后，拓展名为.bz2，且必须用<code>bunzip2</code>命令解压。</p><h3 id="gzip命令：-常用压缩命令-gz"><a href="#gzip命令：-常用压缩命令-gz" class="headerlink" title="gzip命令： 常用压缩命令 .gz"></a>gzip命令： 常用压缩命令 .gz</h3><pre><code>gzip [-选项] 文件名-d //解压-n //制定压缩级别（1-9） 9压缩级别最高 默认为6</code></pre><h3 id="unzip命令：-解压命令-zip"><a href="#unzip命令：-解压命令-zip" class="headerlink" title="unzip命令： 解压命令 .zip"></a>unzip命令： 解压命令 .zip</h3><pre><code>unzip [选项] 文件名-d //文件解压到指定目录-n //不覆盖已存在的同名文件-v //查看文件目录列表但不解压-o //以默认方式覆盖已经存在的同名文件</code></pre><h3 id="zcat-bzcat命令：-查看压缩文件内容"><a href="#zcat-bzcat命令：-查看压缩文件内容" class="headerlink" title="zcat bzcat命令： 查看压缩文件内容"></a>zcat bzcat命令： 查看压缩文件内容</h3><pre><code>zcat 文件名  //查看.gzbzcat 文件名  //查看.bz2</code></pre><h3 id="tar命令：-对文件或者目录进行打包备份和解包操作"><a href="#tar命令：-对文件或者目录进行打包备份和解包操作" class="headerlink" title="tar命令： 对文件或者目录进行打包备份和解包操作"></a>tar命令： 对文件或者目录进行打包备份和解包操作</h3><pre><code>tar [-选项] [备份包的文件名] [要打包（或者解包）的文件或者目录]-c //创建新的打包文件-x //抽取.tar内的内容-z //打包后直接用gzip命令压缩或者解压文件-j //打包后直接用bzip2命令压缩或者解压文件-t //查看打包文件里的文件目录-f //使用文件或设备-v //打包或解包后将文件的详细清单显示出来</code></pre><h2 id="磁盘操作命令"><a href="#磁盘操作命令" class="headerlink" title="磁盘操作命令"></a>磁盘操作命令</h2><p>由于在图形界面下不常用，因此不进行详细记录。具体参考相关书籍</p><h3 id="mount命令：-挂载"><a href="#mount命令：-挂载" class="headerlink" title="mount命令： 挂载"></a>mount命令： 挂载</h3><h3 id="umount命令：-卸载一个文件系统"><a href="#umount命令：-卸载一个文件系统" class="headerlink" title="umount命令： 卸载一个文件系统"></a>umount命令： 卸载一个文件系统</h3><h3 id="df命令：-查看当前硬盘的分区信息"><a href="#df命令：-查看当前硬盘的分区信息" class="headerlink" title="df命令： 查看当前硬盘的分区信息"></a>df命令： 查看当前硬盘的分区信息</h3><pre><code>df [选项]</code></pre><h3 id="du命令：-查看当前目录下的所有文件及目录信息"><a href="#du命令：-查看当前目录下的所有文件及目录信息" class="headerlink" title="du命令： 查看当前目录下的所有文件及目录信息"></a>du命令： 查看当前目录下的所有文件及目录信息</h3><pre><code>du [选项]</code></pre><h3 id="fsk命令：-硬盘检测，只能由root用户执行"><a href="#fsk命令：-硬盘检测，只能由root用户执行" class="headerlink" title="fsk命令： 硬盘检测，只能由root用户执行"></a>fsk命令： 硬盘检测，只能由root用户执行</h3><pre><code>fsk 分区名</code></pre><h2 id="关机重启"><a href="#关机重启" class="headerlink" title="关机重启"></a>关机重启</h2><h3 id="shutdown命令：-安全关机"><a href="#shutdown命令：-安全关机" class="headerlink" title="shutdown命令： 安全关机"></a>shutdown命令： 安全关机</h3><pre><code>shutdown [选项] [时间] [警告信息]-h // 停止系统服务-k // 不真正关机，发出警告信息-r // 停止系统服务，然后安全重启-t // 规定的时间后关机</code></pre><h3 id="halt命令：-关机"><a href="#halt命令：-关机" class="headerlink" title="halt命令： 关机"></a>halt命令： 关机</h3><pre><code>halt [选项]-f //强制关机</code></pre><h3 id="poweroff命令：关机"><a href="#poweroff命令：关机" class="headerlink" title="poweroff命令：关机"></a>poweroff命令：关机</h3><h3 id="reboot命令：-重启"><a href="#reboot命令：-重启" class="headerlink" title="reboot命令： 重启"></a>reboot命令： 重启</h3><h3 id="init命令：切换Ubuntu的运行级别"><a href="#init命令：切换Ubuntu的运行级别" class="headerlink" title="init命令：切换Ubuntu的运行级别"></a>init命令：切换Ubuntu的运行级别</h3><pre><code>init [运行级别]</code></pre><p>运行级别共有7级：0为关机，6为重启。</p><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><h3 id="echo命令：-显示命令行中的字符串，用于输出提示信息"><a href="#echo命令：-显示命令行中的字符串，用于输出提示信息" class="headerlink" title="echo命令： 显示命令行中的字符串，用于输出提示信息"></a>echo命令： 显示命令行中的字符串，用于输出提示信息</h3><pre><code>echo [选项] [字符串]-n //表示输出字符串后光标不换行</code></pre><h3 id="more、less命令：将文件内容或者查询结果分屏显示"><a href="#more、less命令：将文件内容或者查询结果分屏显示" class="headerlink" title="more、less命令：将文件内容或者查询结果分屏显示"></a>more、less命令：将文件内容或者查询结果分屏显示</h3><pre><code>more [选项] 文件名 -p //不滚屏，清屏-s //连续空行压缩为一个空行+n //从第n行开始显示其他命令 文件名|moreless [选项] 文件名 </code></pre><p>more：命令将屏幕信息分屏显示，空格下翻一页，B上翻一页，Q退出。</p><p>less：Page up&#x2F;down或者上下箭头实现翻行</p><h3 id="help、man命令：显示内建命令的格式和用法、显示系统手册（manual）中的内容"><a href="#help、man命令：显示内建命令的格式和用法、显示系统手册（manual）中的内容" class="headerlink" title="help、man命令：显示内建命令的格式和用法、显示系统手册（manual）中的内容"></a>help、man命令：显示内建命令的格式和用法、显示系统手册（manual）中的内容</h3><pre><code>help 命令名man 命令名  //使用范围更广</code></pre><h3 id="cal命令：-显示日历"><a href="#cal命令：-显示日历" class="headerlink" title="cal命令： 显示日历"></a>cal命令： 显示日历</h3><pre><code>cal [选项] [[月]年]-m //以周一为每周第一天显示-j //以凯撒历显示-y //显示今年年历</code></pre><h3 id="date命令：显示及设定系统时间"><a href="#date命令：显示及设定系统时间" class="headerlink" title="date命令：显示及设定系统时间"></a>date命令：显示及设定系统时间</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">date [选项]+显示时间的格式</span><br><span class="line">-u //使用格林尼治时间</span><br><span class="line">-r //最后一次修改文件的时间</span><br></pre></td></tr></table></figure><p>date命令常用的时间格式参考书。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">date 设定的系统时间 //修改系统时间时，采用MMDDhhmmYYYY.ss的格式</span><br><span class="line">clock -w //将系统时间写入CMOS，系统重启后会显示正确时间</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客创建笔记</title>
      <link href="/2022/07/31/%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/07/31/%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/wapchief/article/details/54602515">https://blog.csdn.net/wapchief/article/details/54602515</a><br><a href="https://www.bilibili.com/video/BV1Eg41157tL?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=aa4150b17b76703c92ffe73e278bf292">https://www.bilibili.com/video/BV1Eg41157tL?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=aa4150b17b76703c92ffe73e278bf292</a></p><h1 id="1、准备工作"><a href="#1、准备工作" class="headerlink" title="1、准备工作"></a>1、准备工作</h1><ul><li>安装 Git</li><li>安装Nodejs</li></ul><p>安装包在<a href>此处</a>可以找到。</p><ul><li>win + R 打开cmd命令行，执行以下语句：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure>注意：<br>运行npm -v 之后出现下面情况<br><img src="NPM.png" alt="NPM错误"><br>如果出现WARN，执行下述命令即可<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g npm-windows-upgrade</span><br><span class="line">npm-windows-upgrade</span><br></pre></td></tr></table></figure></li></ul><p>安装过程如果卡住，说明网络条件不好，可以使用国内镜像源：</p><pre><code>npm config set registry https://registry.npm.taobao.orgnpm config get registry  # 查看镜像源更新成功</code></pre><p>根据提示第4行，输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g npm@8.15.1</span><br></pre></td></tr></table></figure><p>最后进行测试，显示对应的版本信息即可。</p><p>如果还不可以，尝试该方法：<a href="https://www.pudn.com/news/62d6b57855398e076ba77d65.html">https://www.pudn.com/news/62d6b57855398e076ba77d65.html</a><br>以上内容如下：</p><blockquote><p>1、打开node.js的安装路径–&gt;找到npm.cmd文件，右键编辑打开</p><p>2、将文件中的prefix-g 更改为prefix –location&#x3D;global。如同所示。注意后面还有个单引号！！！</p><p>3、保存文件，如果提示权限问题则选中该文件–&gt;右键选择属性–&gt;安全–&gt;修改权限为完全控制就可以正常保存。<br>如果安装出现问题，</p></blockquote><p>经过该方法后，问题应该得到了解决。</p><ul><li>安装Hexo<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>安装完成后，输入<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>查看版本信息后，显示正常为安装成功</li></ul><h1 id="2、在Github上创建库"><a href="#2、在Github上创建库" class="headerlink" title="2、在Github上创建库"></a>2、在Github上创建库</h1><p>注：库的名称必须和用户名相同。<br>git初始化时需要连接github账户，具体参考书籍《Github入门与实践》</p><h1 id="3、初始化Hexo"><a href="#3、初始化Hexo" class="headerlink" title="3、初始化Hexo"></a>3、初始化Hexo</h1><p>创建一个文件夹，用于存放hexo与博客文件。<br>运行下述命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo --save</span><br><span class="line">hexo init myblog</span><br><span class="line">cd myblog</span><br><span class="line">hexo g //进行编译（类似行为）</span><br><span class="line">hexo s //创建一个本地网页</span><br></pre></td></tr></table></figure><p>如果<code>cd myblog</code>并不能正常运行，下一步会出现“注”中的问题。</p><p>使用<code>hexo s</code>之后，在浏览器输入<a href="http://localhost:4000/">http://localhost:4000/</a>即可查看本地页面</p><p>注：如果此处出现<code>hexo &lt;command&gt;</code>，可以使用如下解决方案：<br><a href="https://blog.csdn.net/m0_50299150/article/details/121467368?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~default-1-121467368-blog-85267550.pc_relevant_sortByStrongTime&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~default-1-121467368-blog-85267550.pc_relevant_sortByStrongTime&utm_relevant_index=1">该方案链接</a><br>：（进入刚刚创建的myblog文件夹内进行git bash）</p><h1 id="4、安装主题"><a href="#4、安装主题" class="headerlink" title="4、安装主题"></a>4、安装主题</h1><p>这里使用next主题。<a href="http://theme-next.iissnan.com/">http://theme-next.iissnan.com/</a><br>next在github中有库，直接clone即可。<br>在上述的文件夹下，使用 git bash<br>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>将clone下来的主题包放置在&#x2F;myblog&#x2F;themes下。</p><h1 id="5、配置文件"><a href="#5、配置文件" class="headerlink" title="5、配置文件"></a>5、配置文件</h1><p>在&#x2F;mybog下的_config.yml文件中，将<code>theme: landscape</code>修改为<code>theme: hexo-theme-next</code>,此操作为将其修改为你使用的主题文件。<br>运行<code>hexo s</code>在本地查看主题情况。</p><p>此处也需要进行修改，将repo修改为你的仓库SSH。注意Branch名称为你所设置的名称。如果为main修改为main。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27;</span><br><span class="line">  repo: git@github.com:你的用户名/你的用户名.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在主题文件夹下，即myblog&#x2F;themes&#x2F;hexo-theme-next文件夹下的_config.yml文件中，进行主题文件信息的配置。<br>具体根据主题官方提示进行修改。</p><h1 id="6、部署到github"><a href="#6、部署到github" class="headerlink" title="6、部署到github"></a>6、部署到github</h1><p>完成配置后，需要将所有内容部署到github上。</p><p>首先进行SSH key的部署。 内容参照[Git学习笔记]。</p><p>然后安装插件：</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>最后执行以下命令：</p><pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><p>进行缓存清空、生成html文件、部署到github。</p><h1 id="7、写文章"><a href="#7、写文章" class="headerlink" title="7、写文章"></a>7、写文章</h1><p>输入命令</p><pre><code>hexo new &quot;文章名&quot;</code></pre><p>即可在source&#x2F;_posts文件夹下看到所属的文章。在其中编写markdown即可。<br>Markdown指南：<a href="https://markdown.com.cn/">https://markdown.com.cn/</a></p><h1 id="8、插入图片的方法"><a href="#8、插入图片的方法" class="headerlink" title="8、插入图片的方法"></a>8、插入图片的方法</h1><p>参考：<a href="https://zhuanlan.zhihu.com/p/542101567/">https://zhuanlan.zhihu.com/p/542101567/</a></p><p>需要安装插件：<br>在根目录myblog下，使用git bash</p><pre><code>npm install hexo-asset-image --save</code></pre><p>然后在根目录下，找到文件：&#x2F;node_modules&#x2F;hexo-asset-image&#x2F;index.js<br>打开该文件，在第58行将以下代码修改：</p><pre><code>$(this).attr(&#39;src&#39;, config.root + link + src);</code></pre><p>修改为：</p><pre><code>$(this).attr(&#39;src&#39;, src);</code></pre><p>保存文件。</p><p>在根目录下的_config.yml文件中，<br><code>post_asset_folder: false</code>修改为true。</p><p>使用该插件后，新建的文章会有一个文件夹，在文件夹中存储图片。</p><p>使用方式:  ![图片名] ( 图片位置 )</p><p>图片位置格式为：&#x2F;文件名&#x2F;图片名</p>]]></content>
      
      
      <categories>
          
          <category> 博客创建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用网站汇总</title>
      <link href="/2022/07/31/%E5%B8%B8%E7%94%A8%E7%BD%91%E7%AB%99%E6%B1%87%E6%80%BB/"/>
      <url>/2022/07/31/%E5%B8%B8%E7%94%A8%E7%BD%91%E7%AB%99%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="地震学常用网站"><a href="#地震学常用网站" class="headerlink" title="地震学常用网站"></a>地震学常用网站</h1><ul><li><p><a href="www.iris.com">IRIS</a> ：免费的、全球性的学习性地震资料网站，<a href="https://ds.iris.edu/ds/nodes/dmc/software/downloads/sac/">SAC</a>、<a href="https://github.com/iris-edu-legacy/rdseed">Rdseed</a>等软件均可在此网站中下载</p></li><li><p><a href="http://www.soest.hawaii.edu/gmt/">GMT</a> ：GMT地震波绘图软件</p></li><li><p><a href="http://neic.usgs.gov/">美国联邦地质调查局</a> ：全球地震资料。但是网站需要梯子</p></li><li><p><a href="http://www.globalcmt.org/CMTsearch.html">globalCMT</a> ：具有震源机制解的地震数据</p></li></ul><h1 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h1><ul><li><p><a href="http://www.sublimetext.com/">Sublime</a> ：编辑器，但是推荐Pycharm</p></li><li><p><a href="https://www.jetbrains.com/zh-cn/pycharm/">Pycharm</a> ：Python推荐编辑器</p></li><li><p><a href="https://www.anaconda.com/">Anaconda</a> ：可批量管理Python库</p></li><li><p><a href="http://www.codeblocks.org/">CodeBlocks</a> ：C语言推荐编译器</p></li><li><p><a href="https://www.python.org/">Python</a></p></li><li><p><a href="https://git-scm.com/">Git</a> ：Github工具</p></li><li><p><a href="https://ww2.mathworks.cn/">Matlab</a> ：数学计算与绘图工具</p></li><li><p><a href="https://nodejs.org/zh-cn/">Node.js</a> ：博客工具</p></li><li><p><a href="https://www.writage.com/">writage</a> ：Word转Markdown</p></li><li><p><a href="https://www.pandoc.org/installing.html">pandoc</a> ：Word转Markdown工具</p></li><li><p><a href="https://zh-cn.libreoffice.org/">libreoffice</a> ：办公套件，类似于office</p></li><li><p><a href="https://www.latex-project.org/">Latex</a> ：论文排版软件</p></li></ul><h1 id="其他网站"><a href="#其他网站" class="headerlink" title="其他网站"></a>其他网站</h1><ul><li><a href="https://hexo.io/zh-cn/">hexo</a> ：博客搭建框架</li><li><a href="https://www.runoob.com/">菜鸟教程</a> ：较为齐全的编程教程网站</li><li><a href="https://bgi.obs-mip.fr/">BGI</a> ：全球重力数据网站</li><li><a href="https://www.ubuntu.org.cn/global">ubuntu</a> ：Ubuntu官方网站</li><li><a href="https://www.ubuntukylin.com/">ubuntukylin</a> ：优麒麟</li><li><a href="https://www.deepin.org/index/zh">deepin</a> ：深度操作系统</li><li><a href="https://www.centos.org/">Centos</a> ：Centos</li><li><a href="https://seismo-learn.org/">地震”学“网站</a> ：出色的地震学学习网站</li><li><a href="https://blog.seisman.info/">Seisman</a> ：出色的地震学相关学习博客，与地震“学”网站相同</li><li><a href="https://markdown.com.cn/">Markdown</a> ：Markdown语法官方网站</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>层状介质时间场模拟与报告</title>
      <link href="/2022/07/31/%E5%B1%82%E7%8A%B6%E4%BB%8B%E8%B4%A8%E6%97%B6%E9%97%B4%E5%9C%BA%E6%A8%A1%E6%8B%9F%E4%B8%8E%E6%8A%A5%E5%91%8A/"/>
      <url>/2022/07/31/%E5%B1%82%E7%8A%B6%E4%BB%8B%E8%B4%A8%E6%97%B6%E9%97%B4%E5%9C%BA%E6%A8%A1%E6%8B%9F%E4%B8%8E%E6%8A%A5%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h2><p>已知一个简单的二维层状介质模型，模型横向长3500m，纵向深1000m。一水平界面的埋深为500m，界面上、下介质的速度分别是v1&#x3D;2000m&#x2F;s，v2&#x3D;4000m&#x2F;s。震源位于地表、距离左边界（400+你的学号后三位数X10）m处。 要求完成以下工作：</p><p>（1）设计一定的方法计算直达波、反射波、透射波、滑行波、折射波的时间场，按照0.05s间隔绘制时间场的等时线。</p><p>（2）根据各等时线到达地面各点的时间绘制直达波、反射波和折射波的时距曲线。<br>注意：距离比例尺为1:10000，即1cm代表100m；时间比例尺为1cm代表0.1s。</p><p>（3）编写《层状介质时间场模拟》研究报告，详细阐述所使用的方法原理、计算过程。要求至少阅读5篇相关的文献，并在研究报告中加以引用。</p><h2 id="最终结果"><a href="#最终结果" class="headerlink" title="最终结果"></a>最终结果</h2><p><img src="timeline.jpg" alt="时间场模拟"></p><h2 id="已知BUG"><a href="#已知BUG" class="headerlink" title="已知BUG"></a>已知BUG</h2><ul><li>震源点坐标为100的整数倍时，会有左半部分直达波时距曲线缺失。</li><li>提高或降低时间场绘制精度时，出现绘制错误。</li></ul><h2 id="MATLAB代码"><a href="#MATLAB代码" class="headerlink" title="MATLAB代码"></a>MATLAB代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br></pre></td><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line"></span><br><span class="line">v1 = 2000;</span><br><span class="line">v2 = 4000;</span><br><span class="line">h1 = 500;  % 第一个界面深度</span><br><span class="line">h2 = 1000;  % 最终深度</span><br><span class="line">x1 = 2000;   % 震源点的横坐标</span><br><span class="line">xmax = 3500; % 显示边界最大横坐标</span><br><span class="line">xmin = 0;   % 显示边界最小横坐标</span><br><span class="line">dangle = 0.01;</span><br><span class="line">dt = 0.05;</span><br><span class="line">sigma_C = asin(v1/v2);  % 存在透射波边界下的入射角</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t_all = [ 0:dt:1.5];</span><br><span class="line">N_t_all = length(t_all);</span><br><span class="line">N = 180/dangle+1;</span><br><span class="line">angle = zeros(1, N);</span><br><span class="line">k = 0;</span><br><span class="line">angle(1) = 0;</span><br><span class="line">for i = 2:N  % 创建角度序列angle</span><br><span class="line">    k = k + dangle;</span><br><span class="line">    angle(i) = k;</span><br><span class="line">end</span><br><span class="line">angle = angle./180.*pi;</span><br><span class="line"></span><br><span class="line">% 求取时间场有效点</span><br><span class="line">[DW_x, DW_y, direct_time, k_dir]=direct_wave_count(angle, t_all, N_t_all, N, v1, h1, x1);%直达波</span><br><span class="line">[tran_x,tran_y,one_tran_t] = transform_wave_count(angle, sigma_C, dt, N, v1,v2,h1,x1,xmax,xmin, direct_time, k_dir );%透射波</span><br><span class="line">[reflect_x,reflect_y] = reflect_wave_count(angle, N, t_all, N_t_all, v1,h1,x1, direct_time, k_dir);%反射波</span><br><span class="line">[refract_x_ri, refract_x_le,refract_y_ri, refract_y_le, refract_x, refract_y] = refract_wave_count(sigma_C, dt, t_all, N_t_all, v1,v2,h1,x1,xmax,xmin);%折射波</span><br><span class="line">[slide_x, slide_y] = Slide__wave_count(t_all, N_t_all, v1, v2, h1, x1, sigma_C);</span><br><span class="line"></span><br><span class="line">% 时间场绘图</span><br><span class="line">h = figure(1);</span><br><span class="line">h.Position = [0 0 1000 600];% 设置图片在显示器上的位置</span><br><span class="line">hold on;</span><br><span class="line">ax1 = gca;</span><br><span class="line">set(ax1,&#x27;XColor&#x27;,&#x27;k&#x27;,&#x27;YColor&#x27;,&#x27;k&#x27;);</span><br><span class="line">INTERFACE = interface(xmax, xmin,h1);</span><br><span class="line">DWH = image( DW_x, DW_y,&#x27;r-&#x27;,&#x27;直达波时间场&#x27;);</span><br><span class="line">TRH = image( tran_x, tran_y,&#x27;g-&#x27;,&#x27;透射波时间场&#x27;);</span><br><span class="line">REFLH = image( reflect_x, reflect_y,&#x27;b-&#x27;,&#x27;反射波时间场&#x27;);   </span><br><span class="line">REFRH = image( refract_x_ri, refract_y_ri,&#x27;c-&#x27;, &#x27; &#x27;);</span><br><span class="line">REFRH = image( refract_x_le, refract_y_le,&#x27;c-&#x27;,&#x27;折射波时间场&#x27;);</span><br><span class="line">SLID=plot(slide_x, slide_y,&#x27;r--o&#x27;,&#x27;DisplayName&#x27;,&#x27;滑行波时间场&#x27;);</span><br><span class="line">set(gca, &#x27;XAxisLocation&#x27;, &#x27;origin&#x27;);</span><br><span class="line">legend([DWH(1), TRH(1), REFLH(1), REFRH(1), SLID, INTERFACE],&#x27;Location&#x27;,&#x27;NorthEastOutside&#x27;);</span><br><span class="line">xlabel(&#x27;x/m&#x27;);</span><br><span class="line">ylabel(&#x27;H/m&#x27;);</span><br><span class="line"></span><br><span class="line">title([&#x27;层状双层均匀介质模型时间场与时距曲线 震源点坐标：x=&#x27;,num2str(x1),&#x27;m&#x27;]);</span><br><span class="line"></span><br><span class="line">ax2 = axes(&#x27;Position&#x27;, get(ax1, &#x27;Position&#x27;), &#x27;YAxisLocation&#x27;, &#x27;right&#x27;, &#x27;Color&#x27;, &#x27;None&#x27;, &#x27;XColor&#x27;, &#x27;None&#x27;, &#x27;YColor&#x27;, &#x27;k&#x27;);</span><br><span class="line">set(ax2);</span><br><span class="line">hold on</span><br><span class="line"></span><br><span class="line">% 时距曲线绘图</span><br><span class="line">DW_x_t = zeros(2,N_t_all);</span><br><span class="line">tran_x_t = zeros(2,N_t_all);</span><br><span class="line">reflect_x_t = zeros(2,N_t_all);</span><br><span class="line">refract_x_t = zeros(2,N_t_all);</span><br><span class="line">DW_x_t = t_x(DW_x, DW_y, DW_x_t, dangle);</span><br><span class="line">reflect_x_t = t_x(reflect_x, reflect_y, reflect_x_t,dangle);</span><br><span class="line">refract_x_t = t_x(refract_x, refract_y, refract_x_t,dangle);</span><br><span class="line">axis([0,3500,-1.0,1.5]);</span><br><span class="line"></span><br><span class="line">% 直达波拟合</span><br><span class="line">[DW_T_FIT1, DW_T_FIT1_E]= polyfit(DW_x_t(1,:), t_all, 1);  % 2表示为x1右侧的曲线</span><br><span class="line">DW_NEW_T = polyval(DW_T_FIT1, DW_x_t(1,:));</span><br><span class="line">DW_T_FIT1=vpa(poly2sym(DW_T_FIT1));</span><br><span class="line">plot(DW_x_t(1,:), DW_NEW_T, &#x27;k-&#x27;);</span><br><span class="line"></span><br><span class="line">[DW_T_FIT2, DW_T_FIT2_E]= polyfit(DW_x_t(2,:), t_all, 1);</span><br><span class="line">DW_NEW_T = polyval(DW_T_FIT2, DW_x_t(2,:));</span><br><span class="line">DW_T_FIT2=vpa(poly2sym(DW_T_FIT2));</span><br><span class="line">py1=plot(DW_x_t(2,:), DW_NEW_T, &#x27;k-&#x27;, &#x27;DisplayName&#x27;,&#x27;直达波拟合时距曲线&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">% 折射波拟合</span><br><span class="line">x_effictive1 = [];</span><br><span class="line">t_effictive1 = [];</span><br><span class="line">x_effictive2 = [];</span><br><span class="line">t_effictive2 = [];</span><br><span class="line">[row, col]=size(refract_x_t);</span><br><span class="line">for i=1:col</span><br><span class="line">    if isnan(refract_x_t(1,i)) == 0</span><br><span class="line">        x_effictive1 = [x_effictive1, refract_x_t(1,i)];</span><br><span class="line">        t_effictive1 = [t_effictive1, t_all(i)];</span><br><span class="line">    else</span><br><span class="line">        continue</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">for i=1:col</span><br><span class="line">    if isnan(refract_x_t(2,i)) == 0</span><br><span class="line">        x_effictive2 = [x_effictive2, refract_x_t(2,i)];</span><br><span class="line">        t_effictive2 = [t_effictive2, t_all(i)];</span><br><span class="line">    else</span><br><span class="line">        continue</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">[RER_T_FIT2, RER_T_FIT2_E]= polyfit(x_effictive1, t_effictive1, 1);</span><br><span class="line">RER_NEW_T = polyval(RER_T_FIT2, x_effictive1);</span><br><span class="line">RER_T_FIT2=vpa(poly2sym(RER_T_FIT2));</span><br><span class="line">plot(x_effictive1, RER_NEW_T, &#x27;r-&#x27;);</span><br><span class="line"></span><br><span class="line">[RER_T_FIT1, RER_T_FIT1_E]= polyfit(x_effictive2, t_effictive2, 1);</span><br><span class="line">RER_NEW_T = polyval(RER_T_FIT1, x_effictive2);</span><br><span class="line">RER_T_FIT1=vpa(poly2sym(RER_T_FIT1));</span><br><span class="line">py2=plot(x_effictive2, RER_NEW_T, &#x27;r-&#x27;, &#x27;DisplayName&#x27;,&#x27;折射波拟合时距曲线&#x27;);</span><br><span class="line">legend([py1, py2],&#x27;Location&#x27;,&#x27;NorthEast&#x27;);</span><br><span class="line"></span><br><span class="line">% 有效点绘制</span><br><span class="line">plot([DW_x_t(2,:), DW_x_t(1,:)],[t_all, t_all], &#x27;b.&#x27;, &#x27;DisplayName&#x27;,&#x27;直达波时距曲线有效点&#x27;);</span><br><span class="line">plot([reflect_x_t(1,:), reflect_x_t(2,:)],[t_all,t_all], &#x27;k*&#x27;,&#x27;DisplayName&#x27;,&#x27;反射波时距曲线有效点&#x27;);</span><br><span class="line">plot([refract_x_t(1,:),refract_x_t(2,:)],[t_all, t_all], &#x27;r.&#x27;, &#x27;DisplayName&#x27;,&#x27;折射波时距曲线有效点&#x27;);</span><br><span class="line"></span><br><span class="line">% 拟合反射波时距曲线为双曲线</span><br><span class="line">[x_effictive, t_effictive, a, b]=reflect_wave_t_x([reflect_x_t(1,:), reflect_x_t(2,:)],[t_all,t_all], x1);</span><br><span class="line">a=1/a;</span><br><span class="line">b=1/b;</span><br><span class="line">reflect_x_nihe = [xmin+1:1:xmax];</span><br><span class="line">reflect_t_nihe = zeros(1,xmax);</span><br><span class="line">for i= xmin+1:1:xmax</span><br><span class="line">    reflect_t_nihe(i) = sqrt(a*(1+(reflect_x_nihe(i)-x1).^2/b));</span><br><span class="line">end</span><br><span class="line">plot(reflect_x_nihe, reflect_t_nihe, &#x27;k-&#x27;,&#x27;DisplayName&#x27;,&#x27;反射波拟合时距曲线&#x27;);</span><br><span class="line">xlabel(&#x27;x/m&#x27;);</span><br><span class="line">ylabel(&#x27;t/s&#x27;);</span><br><span class="line">legend(&quot;show&quot;,&#x27;Location&#x27;,&#x27;NorthEast&#x27;);</span><br><span class="line"></span><br><span class="line">% 特殊点计算</span><br><span class="line">fprintf(&quot;直达波拟合曲线方程：\n&quot;);</span><br><span class="line">DW_T_FIT1</span><br><span class="line">DW_T_FIT2</span><br><span class="line">fprintf(&quot;直达波拟合曲线震源点右侧曲线残差范数：%f\n直达波拟合曲线震源点左侧曲线残差范数：%f\n&quot;, DW_T_FIT1_E.normr, DW_T_FIT2_E.normr);</span><br><span class="line"></span><br><span class="line">fprintf(&quot;折射波拟合曲线方程：\n&quot;);</span><br><span class="line">RER_T_FIT1</span><br><span class="line">RER_T_FIT2</span><br><span class="line">fprintf(&quot;折射波拟合曲线震源点右侧曲线残差范数：%f\n折射波拟合曲线震源点左侧曲线残差范数：%f\n&quot;, RER_T_FIT1_E.normr, RER_T_FIT2_E.normr);</span><br><span class="line"></span><br><span class="line">fprintf(&quot;反射波拟合曲线方程：\n&quot;);</span><br><span class="line">P=a;Q=b;R=x1;</span><br><span class="line">REF_T_FIT=@(x)(P*(1+(x-R).^2/Q)).^(1/2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">% 直达波与折射波震源点右侧交点</span><br><span class="line">DW_T_FIT1=matlabFunction(DW_T_FIT1);</span><br><span class="line">RER_T_FIT1=matlabFunction(RER_T_FIT1);</span><br><span class="line">DWRERZERO1=fsolve(@(x)(DW_T_FIT1(x)-RER_T_FIT1(x)), [x1, xmax]);</span><br><span class="line">fprintf(&quot;直达波拟合时距曲线与折射波拟合时距曲线 震源点右侧交点x坐标值: %6.3f\n&quot;, DWRERZERO1(1));</span><br><span class="line"></span><br><span class="line">% 直达波与折射波震源点左侧交点</span><br><span class="line">DW_T_FIT2=matlabFunction(DW_T_FIT2);</span><br><span class="line">RER_T_FIT2=matlabFunction(RER_T_FIT2);</span><br><span class="line">DWRERZERO2=fsolve(@(x)(DW_T_FIT2(x)-RER_T_FIT2(x)), [xmin, x1]);</span><br><span class="line"></span><br><span class="line">fprintf(&quot;直达波拟合时距曲线与折射波拟合时距曲线 震源点左侧交点x坐标值: %6.3f\n&quot;, DWRERZERO2(1));</span><br><span class="line"></span><br><span class="line">% 折射波与震源点所在纵轴交点</span><br><span class="line">fprintf(&quot;折射波拟合时距曲线与震源点所在纵轴交点t坐标值: %f、%f\n&quot;, RER_T_FIT1(x1),RER_T_FIT2(x1));</span><br><span class="line">% 直达波与震源点所在纵轴交点</span><br><span class="line">fprintf(&quot;直达波拟合时距曲线与震源点所在纵轴交点t坐标值: %f、%f\n&quot;, DW_T_FIT1(x1),DW_T_FIT2(x1));</span><br><span class="line">% 反射波与震源点所在纵轴交点</span><br><span class="line">fprintf(&quot;反射波拟合时距曲线与震源点所在纵轴交点t坐标值: %f\n&quot;, REF_T_FIT(x1));</span><br><span class="line"></span><br><span class="line">% 折射波时距曲线与反射波时距曲线交点</span><br><span class="line">REFRERZERO1=fsolve(@(x)(REF_T_FIT(x)-RER_T_FIT2(x)), [xmin, x1]);</span><br><span class="line">REFERZERO2=fsolve(@(x)(REF_T_FIT(x)-RER_T_FIT1(x)), [x1, xmax]);</span><br><span class="line">fprintf(&quot;折射波拟合左侧时距曲线与反射波时距曲线交点x坐标值: [%f \t%f]\n折射波拟合右侧时距曲线与反射波时距曲线交点x坐标值:[%f \t%f]\n&quot;, REFRERZERO1(:),REFERZERO2(:));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DW_T_THEO1=@(x)((x-x1)/v1); % 直达波时距曲线理论方程震源点右侧</span><br><span class="line">DW_T_THEO2=@(x)(-(x-x1)/v1); % 直达波时距曲线理论方程震源点左侧</span><br><span class="line"></span><br><span class="line">RER_T_THEO1=@(x)((x-x1)/v2+2*h1*cos(sigma_C)/v1); % 折射波时距曲线理论方程震源点右侧</span><br><span class="line">RER_T_THEO2=@(x)(-(x-x1)/v2+2*h1*cos(sigma_C)/v1); % 折射波时距曲线理论方程震源点左侧</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REF_T_THEO=@(x)(((2*h1/v1).^2*(1+(x-x1).^2/((2*h1).^2))).^(1/2)); % 反射波时距曲线理论方程</span><br><span class="line"></span><br><span class="line">% 折射波理论时距曲线与直达波理论时距曲线交点</span><br><span class="line">DWRER_THEO_ZERO1=fsolve(@(x)(DW_T_THEO1(x)-RER_T_THEO1(x)), [x1, xmax]);</span><br><span class="line">fprintf(&quot;折射波理论时距曲线与直达波理论时距曲线震源点右侧交点x坐标值: %f\n&quot;, DWRER_THEO_ZERO1(1));</span><br><span class="line"></span><br><span class="line">DWRER_THEO_ZERO2=fsolve(@(x)(DW_T_THEO2(x)-RER_T_THEO2(x)), [xmin, x1]);</span><br><span class="line">fprintf(&quot;折射波理论时距曲线与直达波理论时距曲线震源点左侧交点x坐标值: %f\n&quot;, DWRER_THEO_ZERO2(1));</span><br><span class="line"></span><br><span class="line">% 折射波理论时距曲线与反射波理论时距曲线交点</span><br><span class="line">REF_THEO_ZERO1=fsolve(@(x)(REF_T_THEO(x)-RER_T_THEO1(x)), [x1, xmax]);</span><br><span class="line">fprintf(&quot;折射波理论时距曲线与直达波理论时距曲线震源点右侧交点x坐标值: %f %f\n&quot;, REF_THEO_ZERO1);</span><br><span class="line">REF_THEO_ZERO2=fsolve(@(x)(REF_T_THEO(x)-RER_T_THEO2(x)), [xmin, x1]);</span><br><span class="line">fprintf(&quot;折射波理论时距曲线与直达波理论时距曲线震源点左侧交点x坐标值: %f %f\n&quot;, REF_THEO_ZERO2);</span><br><span class="line"></span><br><span class="line">fprintf(&quot;直达波理论时距曲线与震源点所在纵轴交点t坐标值: %f、%f\n&quot;, DW_T_THEO1(x1),DW_T_THEO2(x1));</span><br><span class="line">fprintf(&quot;折射波理论时距曲线与震源点所在纵轴交点t坐标值: %f、%f\n&quot;, RER_T_THEO1(x1),RER_T_THEO2(x1));</span><br><span class="line">fprintf(&quot;反射波理论时距曲线与震源点所在纵轴交点t坐标值: %f\n&quot;, REF_T_THEO(x1));</span><br><span class="line"></span><br><span class="line">%% 直达波时间场计算</span><br><span class="line">function [DW_x, DW_y, direct_time,k_dir] = direct_wave_count(angle, t_all, N_t_all, N, v1,h1,x1)</span><br><span class="line"></span><br><span class="line">    k_dir = tan(angle);   % 斜率计算</span><br><span class="line">    DW_x = zeros(N, N_t_all);  % 存储所有射线和时间的x值 纵坐标为angle，横坐标为time</span><br><span class="line">    DW_y = zeros(N, N_t_all);</span><br><span class="line">    for i = 1 : N  % angle循环</span><br><span class="line">        for j = 1 : N_t_all  % time循环</span><br><span class="line">            if angle(i) &lt; pi/2</span><br><span class="line">                x = x1 + ( (v1*t_all(j))^2/(1 + k_dir(i)^2))^0.5;</span><br><span class="line">                if k_dir(i)*(x - x1) &lt; h1 </span><br><span class="line">                    DW_x(i, j) = x;</span><br><span class="line">                    DW_y(i, j) = k_dir(i)*(x - x1);</span><br><span class="line">                else</span><br><span class="line">                    DW_x(i, j) = NaN;  % 将不需要的x值删去</span><br><span class="line">                    DW_y(i, j) = NaN;</span><br><span class="line">                end</span><br><span class="line">            elseif angle(i) &gt; pi/2</span><br><span class="line">                x = x1 - ((v1*t_all(j))^2/(1 + k_dir(i)^2))^0.5;</span><br><span class="line">                if k_dir(i)*(x - x1) &lt; h1</span><br><span class="line">                    DW_x(i, j) = x;</span><br><span class="line">                    DW_y(i, j) = k_dir(i)*(x - x1);</span><br><span class="line">                else</span><br><span class="line">                    DW_x(i, j) = NaN;</span><br><span class="line">                    DW_y(i,j) = NaN;</span><br><span class="line">                end</span><br><span class="line">            elseif angle(i) == pi/2</span><br><span class="line">                DW_x(i, j) = x1;</span><br><span class="line">                DW_y(i,j) = t_all(j)*v1;</span><br><span class="line">            end</span><br><span class="line">    </span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    </span><br><span class="line">    direct_time = zeros(1, N);  % 计算各个角度波抵达h1边界的时间</span><br><span class="line">    for i = 1 : N</span><br><span class="line">        if angle(i) &gt;= 0 &amp;&amp; angle(i) &lt;= pi</span><br><span class="line">            direct_time(i) = h1 / v1 / abs(sin(angle(i)));</span><br><span class="line">        else</span><br><span class="line">            direct_time(i) = NaN;</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">%% 透射波时间场计算</span><br><span class="line">function [tran_x,tran_y,one_tran_t] = transform_wave_count(angle, sigma_C, dt, N, v1,v2,h1,x1,xmax,xmin, direct_time, k_dir )</span><br><span class="line">    anglep = angle;</span><br><span class="line">    for i = 1 :N</span><br><span class="line">        if angle(i)&lt;= pi/2+sigma_C &amp;&amp; angle(i) &gt;= pi/2-sigma_C</span><br><span class="line">            anglep(i) = angle(i);</span><br><span class="line">        else</span><br><span class="line">            anglep(i) = NaN;</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    </span><br><span class="line">    sigma = anglep - pi/2;   % sigma是边界之内的入射角</span><br><span class="line">    beta = asin(v2/v1.*sin(sigma)); % beta是入射角对应的透射角</span><br><span class="line">    </span><br><span class="line">    k_tran = zeros(1,N);  % 透射波射线斜率</span><br><span class="line">    for i = 1 :N</span><br><span class="line">        if beta(i) &lt;= pi/2</span><br><span class="line">            k_tran(i) = tan(pi/2-beta(i));</span><br><span class="line">        else</span><br><span class="line">            k_tran(i) = -tan(pi/2-beta(i));</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    </span><br><span class="line">    t_min = h1/v1;      % 透射波出现时的最早时间</span><br><span class="line">    </span><br><span class="line">    N_tran = 10;</span><br><span class="line">    one_tran_t = zeros(1, N_tran);   % 透射波可以只画出几条曲线即可</span><br><span class="line">    for i=1:N_tran</span><br><span class="line">        one_tran_t(i) = floor(t_min/dt)*dt + dt * i;</span><br><span class="line">    end</span><br><span class="line">    </span><br><span class="line">    tran_x = zeros(N, N_tran);</span><br><span class="line">    tran_y = zeros(N, N_tran);</span><br><span class="line">    for i=1 : N   % angle循环</span><br><span class="line">        if anglep(i)&lt;= pi/2+sigma_C &amp;&amp; anglep(i) &gt;= pi/2-sigma_C</span><br><span class="line">            for  j = 1 : N_tran  % 时间循环</span><br><span class="line">                if (one_tran_t(j) - direct_time(i)) &gt;= 0  </span><br><span class="line">                    if angle(i) ~= pi/2</span><br><span class="line">                        tran_x(i,j) = x1+h1/k_dir(i)-v2*sin(beta(i))*(one_tran_t(j)-direct_time(i));</span><br><span class="line">                        tran_y(i,j) = h1+v2*cos(beta(i))*(one_tran_t(j)-direct_time(i));</span><br><span class="line">                    else</span><br><span class="line">                        tran_x(i,j) = x1;</span><br><span class="line">                        tran_y(i,j) = h1+v2*(one_tran_t(j) - direct_time(i));</span><br><span class="line">                        continue</span><br><span class="line">                    end</span><br><span class="line">                else</span><br><span class="line">                    tran_x(i,j) = NaN;  % 当该点不符合要求时为NaN，绘图时不予考虑</span><br><span class="line">                    tran_y(i,j) = NaN;</span><br><span class="line">                end</span><br><span class="line">            end</span><br><span class="line">        else</span><br><span class="line">            tran_x(i,:) = NaN;</span><br><span class="line">            tran_y(i,:) = NaN;</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">%% 反射波时间场计算</span><br><span class="line">function [reflect_x,reflect_y] = reflect_wave_count(angle, N, t_all, N_t_all, v1, h1, x1, direct_time, k_dir )</span><br><span class="line">    rx = h1./k_dir+x1;</span><br><span class="line">    sigma = angle - pi/2;%重新设置sigma角度</span><br><span class="line">    alpha = -sigma; % 反射角</span><br><span class="line">    reflect_x = zeros(N, N_t_all);</span><br><span class="line">    reflect_y = zeros(N, N_t_all);</span><br><span class="line">    reflect_t = zeros(N, N_t_all);</span><br><span class="line">    for i = 1:N</span><br><span class="line">        for j = 1:N_t_all</span><br><span class="line">            reflect_t(i,j) = t_all(j);</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    for i = 1:N</span><br><span class="line">        for j = 1 :N_t_all</span><br><span class="line">            if (t_all(j)-direct_time(i))&gt;=0</span><br><span class="line">                reflect_x(i,j) = rx(i)+v1*sin(alpha(i))*(t_all(j)-direct_time(i));</span><br><span class="line">                reflect_y(i,j) = h1-v1*cos(alpha(i))*(t_all(j)-direct_time(i));</span><br><span class="line">                if reflect_y(i,j) &lt; 0  % 超过地表的反射波设置为NaN</span><br><span class="line">                    reflect_x(i,j)=NaN;</span><br><span class="line">                    reflect_y(i,j)=NaN;</span><br><span class="line">                else</span><br><span class="line">                    continue</span><br><span class="line">                end</span><br><span class="line">            else</span><br><span class="line">                reflect_x(i,j) = NaN;</span><br><span class="line">                reflect_y(i,j) = NaN;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line">%% 折射波时间场计算</span><br><span class="line">function  [refract_x_ri, refract_x_le,refract_y_ri, refract_y_le, refract_x, refract_y]= refract_wave_count(sigma_C, dt, t_all, N_t_all, v1,v2,h1,x1,xmax,xmin)</span><br><span class="line">    xr_min_ri = x1+h1*tan(sigma_C);  % 出现折射波的x1点右侧最小x值</span><br><span class="line">    xr_max_le = x1-h1*tan(sigma_C); %出现折射波的x1点左侧最大x值</span><br><span class="line">    t_rmin = h1/v1/cos(sigma_C);</span><br><span class="line">    dx=1; % 所取射线的间隔   </span><br><span class="line">    % 重新构造每一条折射波射线所过的点 </span><br><span class="line">    N_refract_ri = ceil((xmax-x1-h1*tan(sigma_C))/dx)*10;</span><br><span class="line">    N_refract_le = ceil((x1-h1*tan(sigma_C)-xmin)/dx)*100;</span><br><span class="line">    xr_ri = zeros(1,N_refract_ri);</span><br><span class="line">    xr_le = zeros(1,N_refract_le);</span><br><span class="line">    for i=1:N_refract_ri</span><br><span class="line">        xr_ri(i) = xr_min_ri + dx*(i-1);</span><br><span class="line">    end</span><br><span class="line">    for i=1:N_refract_ri</span><br><span class="line">        xr_le(i) = xr_max_le - dx*(i-1);</span><br><span class="line">    end</span><br><span class="line">    % 求取每一条射线在一定时间时到达的点</span><br><span class="line">    refract_x_ri = zeros(N_refract_ri,N_t_all);</span><br><span class="line">    refract_x_le = zeros(N_refract_le,N_t_all);</span><br><span class="line">    refract_y_ri = zeros(N_refract_ri,N_t_all);</span><br><span class="line">    refract_y_le = zeros(N_refract_le,N_t_all);</span><br><span class="line">    for i = 1:N_refract_ri</span><br><span class="line">        for j = 1:N_t_all</span><br><span class="line">            if (t_all(j)-t_rmin-(xr_ri(i)-xr_min_ri)/v2)&gt;=0</span><br><span class="line">                refract_x_ri(i,j) = xr_ri(i)+v1*sin(sigma_C)*(t_all(j)-t_rmin-(xr_ri(i)-xr_min_ri)/v2);</span><br><span class="line">                refract_y_ri(i,j) = h1-v1*cos(sigma_C)*(t_all(j)-t_rmin-(xr_ri(i)-xr_min_ri)/v2);</span><br><span class="line">                 if refract_y_ri(i,j) &lt;0 || refract_y_ri(i,j)&gt;h1</span><br><span class="line">                    refract_x_ri(i,j) = NaN;</span><br><span class="line">                    refract_y_ri(i,j) = NaN;</span><br><span class="line">                else</span><br><span class="line">                    continue</span><br><span class="line">                end</span><br><span class="line">            else</span><br><span class="line">                refract_x_ri(i,j) = NaN;</span><br><span class="line">                refract_y_ri(i,j) = NaN;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    </span><br><span class="line">    for i = 1:N_refract_le</span><br><span class="line">        for j = 1:N_t_all</span><br><span class="line">            if t_all(j)-t_rmin+(xr_le(i)-xr_max_le)/v2&gt;=0</span><br><span class="line">                refract_x_le(i,j) = xr_le(i)-v1*sin(sigma_C)*(t_all(j)-t_rmin+(xr_le(i)-xr_max_le)/v2);</span><br><span class="line">                refract_y_le(i,j) = h1-v1*cos(sigma_C)*(t_all(j)-t_rmin+(xr_le(i)-xr_max_le)/v2);</span><br><span class="line">                if refract_y_le(i,j) &lt;0 || refract_y_le(i,j)&gt;h1</span><br><span class="line">                    refract_x_le(i,j) = NaN;</span><br><span class="line">                    refract_y_le(i,j) = NaN;</span><br><span class="line">                else</span><br><span class="line">                    continue</span><br><span class="line">                end</span><br><span class="line">            else</span><br><span class="line">                refract_x_le(i,j) = NaN;</span><br><span class="line">                refract_y_le(i,j) = NaN;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    </span><br><span class="line">    refract_x = [refract_x_le; refract_x_ri];  % 合并以方便绘图</span><br><span class="line">    refract_y = [refract_y_le; refract_y_ri];</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">%% 滑行波时间场计算</span><br><span class="line">function [slide_x, slide_y] = Slide__wave_count(t_all, N_t_all, v1, v2, h1, x1, sigma_C)</span><br><span class="line">    slide_x_ri=zeros(1,N_t_all);</span><br><span class="line">    slide_x_le=zeros(1,N_t_all);</span><br><span class="line">    slide_y_ri=h1*ones(1,N_t_all);</span><br><span class="line">    slide_y_le=h1*ones(1,N_t_all);</span><br><span class="line">    for i = 1:N_t_all</span><br><span class="line">        if (t_all(i)-h1/(v1*cos(sigma_C)))&gt;=0</span><br><span class="line">            slide_x_ri(i)=x1+h1*tan(sigma_C)+v2*(t_all(i)-h1/(v1*cos(sigma_C)));</span><br><span class="line">            slide_x_le(i)=x1-h1*tan(sigma_C)-v2*(t_all(i)-h1/(v1*cos(sigma_C)));</span><br><span class="line">        else</span><br><span class="line">            slide_x_ri(i)=NaN;</span><br><span class="line">            slide_x_le(i)=NaN;</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    slide_x = [slide_x_le, slide_x_ri];</span><br><span class="line">    slide_y = [slide_y_le, slide_y_ri];</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">%% 时间场绘图函数</span><br><span class="line">function H = image( x, y, color, Name)   </span><br><span class="line">    [~, N_all] = size(x);</span><br><span class="line">    H=zeros(1, N_all);</span><br><span class="line">    for i = 1 : N_all</span><br><span class="line">        x_dir = x(:,i).&#x27;;</span><br><span class="line">        y_dir = y(:,i).&#x27;;</span><br><span class="line">        H(i)=plot(x_dir, y_dir, color, &#x27;DisplayName&#x27;, Name);</span><br><span class="line">    end</span><br><span class="line">    </span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">%% 时距曲线点计算</span><br><span class="line">function x_t = t_x(x,y,x_t,dangle)   % 计算时距曲线的相关点</span><br><span class="line">    [N,N_t_all]=size(x); </span><br><span class="line">    x_t(1,1)=x(1);</span><br><span class="line">    y_test=100*ones(2,N_t_all);  %设置一个测试值</span><br><span class="line">    for j=1:N_t_all</span><br><span class="line">        for i=1:floor(N/2)</span><br><span class="line">            if y(i,j)&lt;=18*dangle  % 由于精度问题，当y&lt;一定值的时候可以认为它出射地表</span><br><span class="line">                if abs(y(i,j))&lt;=abs(y_test(1,j)) % 如果有比它更优的点，择取最优值</span><br><span class="line">                    x_t(1,j)=x(i,j);  </span><br><span class="line">                    y_test(1,j) = y(i,j);</span><br><span class="line">                else</span><br><span class="line">                    continue</span><br><span class="line">                end</span><br><span class="line">            else</span><br><span class="line">                continue</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">        for i=floor(N/2)-1:N</span><br><span class="line">            if y(i,j)&lt;=20*dangle</span><br><span class="line">                if abs(y(i,j))&lt;=abs(y_test(2, j))</span><br><span class="line">                    x_t(2,j)=x(i,j);</span><br><span class="line">                    y_test(2, j) = y(i,j);</span><br><span class="line">                else</span><br><span class="line">                    continue</span><br><span class="line">                end</span><br><span class="line">            else</span><br><span class="line">               continue</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    for j=1:N_t_all</span><br><span class="line">        for i=1:2</span><br><span class="line">            if x_t(i,j) == 0</span><br><span class="line">                x_t(i,j) = NaN;</span><br><span class="line">            else</span><br><span class="line">                continue</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">%% 反射波拟合函数，对反射波进行双曲线拟合，得到一条光滑曲线</span><br><span class="line">function [x_effictive,t_effictive, a, b]=reflect_wave_t_x(x,t, x1)  </span><br><span class="line">    x_effictive = [];</span><br><span class="line">    t_effictive = [];</span><br><span class="line">    for i=1:length(x)</span><br><span class="line">        if isnan(x(i)) == 0</span><br><span class="line">            x_effictive = [x_effictive, x(i)];</span><br><span class="line">            t_effictive = [t_effictive, t(i)];</span><br><span class="line">        else</span><br><span class="line">            continue</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">    K = floor(length(x_effictive)/2);</span><br><span class="line">    A=zeros(1,K);</span><br><span class="line">    B=zeros(1,K);</span><br><span class="line">    for i=1:K</span><br><span class="line">        A(i)=(-(x_effictive(i+K)-x1).^2+(x_effictive(i)-x1).^2)/(-(x_effictive(i+K)-x1).^2*t_effictive(i).^2+(x_effictive(i)-x1).^2*t_effictive(i+K).^2);</span><br><span class="line">        B(i)=(-t_effictive(i+K).^2+t_effictive(i).^2)/(-(x_effictive(i+K)-x1).^2*t_effictive(i).^2+(x_effictive(i)-x1).^2*t_effictive(i+K).^2);</span><br><span class="line">    end</span><br><span class="line">   a=mean(A);</span><br><span class="line">   b=mean(B);</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">%% 反射界面绘制函数</span><br><span class="line">function INTER = interface(xmax, xmin,h1)</span><br><span class="line">    xx = zeros(1,(xmax-xmin)/0.01);</span><br><span class="line">    for i = 1:(xmax-xmin)/0.01</span><br><span class="line">        xx(i) = i*0.01;</span><br><span class="line">    end</span><br><span class="line">    INTER = plot(xx, h1*ones(1,(xmax-xmin)/0.01), &#x27;r--&#x27;,&#x27;DisplayName&#x27;,&#x27;反射界面&#x27;);</span><br><span class="line">    set(gca,&#x27;YDir&#x27;,&#x27;reverse&#x27;, &#x27;XAxisLocation&#x27;, &#x27;top&#x27;);</span><br><span class="line">    axis([xmin,xmax,-1500,1000]);</span><br><span class="line">end</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="报告"><a href="#报告" class="headerlink" title="报告"></a>报告</h2><p><a href="https://github.com/ZhiyuanShi1901/seismic_exploration_homework/blob/main/%E5%B1%82%E7%8A%B6%E4%BB%8B%E8%B4%A8%E6%97%B6%E9%97%B4%E5%9C%BA%E6%A8%A1%E6%8B%9F.pdf">下载链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 作业布置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> seismic exploration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git学习笔记</title>
      <link href="/2022/07/30/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/07/30/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="This-is-the-learning-notes-of-how-to-git"><a href="#This-is-the-learning-notes-of-how-to-git" class="headerlink" title="This is the learning notes of how to git."></a>This is the learning notes of how to git.</h1><h2 id="First-chapter–How-to-make-a-local-repository"><a href="#First-chapter–How-to-make-a-local-repository" class="headerlink" title="First chapter–How to make a local repository."></a>First chapter–How to make a local repository.</h2><h3 id="获取SSH，本地git连接到github库"><a href="#获取SSH，本地git连接到github库" class="headerlink" title="获取SSH，本地git连接到github库"></a>获取SSH，本地git连接到github库</h3><pre><code>git config --global user.name &quot;你的名字&quot;git config --global user.email &quot;你的邮箱&quot;ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code></pre><p>多次回车之后可以找到文件id_rsa.pub，或者使用<code>cat ~/.ssh/id_rsa.pub</code>查看你的ssh。<br>复制下来，粘贴到github网站的设置&#x2F;SSH and GPG Keys对应位置上。确认即可。</p><pre><code>ssh -T git@github.com</code></pre><p>确认已经完成连接</p><span id="more"></span><h3 id="Basic-operate"><a href="#Basic-operate" class="headerlink" title="Basic operate"></a>Basic operate</h3><h4 id="1-初始化仓库-在你想创建仓库的文件夹下运行git-bash"><a href="#1-初始化仓库-在你想创建仓库的文件夹下运行git-bash" class="headerlink" title="1. 初始化仓库  (在你想创建仓库的文件夹下运行git bash)"></a>1. 初始化仓库  (在你想创建仓库的文件夹下运行git bash)</h4><pre><code>mkdir (仓库名)cd (仓库名)git init</code></pre><h4 id="2-查看仓库状态"><a href="#2-查看仓库状态" class="headerlink" title="2. 查看仓库状态"></a>2. 查看仓库状态</h4><pre><code>git status</code></pre><h4 id="3-创建一个md文件，用于说明仓库用途。"><a href="#3-创建一个md文件，用于说明仓库用途。" class="headerlink" title="3. 创建一个md文件，用于说明仓库用途。"></a>3. 创建一个md文件，用于说明仓库用途。</h4><pre><code>touch README.md</code></pre><h4 id="4-向暂存区中添加文件"><a href="#4-向暂存区中添加文件" class="headerlink" title="4. 向暂存区中添加文件"></a>4. 向暂存区中添加文件</h4><pre><code>git add (文件名)git add . (将所有文件添加到暂存区)</code></pre><h4 id="5-提交保存信息"><a href="#5-提交保存信息" class="headerlink" title="5. 提交保存信息"></a>5. 提交保存信息</h4><pre><code>git commit -m &quot;描述信息&quot;git commit  //打开编辑器详细编辑信息</code></pre><h4 id="6-查看提交日志"><a href="#6-查看提交日志" class="headerlink" title="6. 查看提交日志"></a>6. 查看提交日志</h4><pre><code>git loggit log --pretty=short  //只显示第一行的简述信息git log -p [文件名]     //显示所有文件[该文件]的改动（能够显示文件前后差别）git diff                //查看当前工作树与暂存区的差别git diff HEAD           //查看与最新提交的差别  （***养成提交前查看的好习惯***）</code></pre><h3 id="Branch-operate"><a href="#Branch-operate" class="headerlink" title="Branch operate"></a>Branch operate</h3><h4 id="1-显示分支"><a href="#1-显示分支" class="headerlink" title="1. 显示分支"></a>1. 显示分支</h4><pre><code>git branch    //显示分支一览表git checkout -b   //创建、切换分支git log --graph   //图表形式查看分支</code></pre><h4 id="2-切换分支"><a href="#2-切换分支" class="headerlink" title="2. 切换分支"></a>2. 切换分支</h4><pre><code>git checkout -b (需要切换到的分支名)  //切换到对应的分支//同样效果的命令git branch (需要切换的分支名)git checkout (需要切换的分支名)git checkout -    //切换回上一个分支</code></pre><h4 id="3-合并分支"><a href="#3-合并分支" class="headerlink" title="3. 合并分支"></a>3. 合并分支</h4><pre><code>git checkout (需要合并到的分支名)  //先切换到目标分支，将其他分支合并到该分支git merge --no-ff (被合并的分支)  //该被合并的分支被合并到上行分支</code></pre><h3 id="Change-operate"><a href="#Change-operate" class="headerlink" title="Change operate"></a>Change operate</h3><h4 id="1-回溯历史版本"><a href="#1-回溯历史版本" class="headerlink" title="1. 回溯历史版本"></a>1. 回溯历史版本</h4><pre><code>git reset --hard (回溯时间点的哈希值)   //所有内容回溯到之前的状态</code></pre><h4 id="2-推进历史"><a href="#2-推进历史" class="headerlink" title="2. 推进历史"></a>2. 推进历史</h4><pre><code>git reflog      //查看当前仓库执行过的操作日志git reset --hard (需要推进到的时间点的哈希值) //推进到该哈希值时间点</code></pre><h3 id="3-消除回溯导致的冲突"><a href="#3-消除回溯导致的冲突" class="headerlink" title="3. 消除回溯导致的冲突"></a>3. 消除回溯导致的冲突</h3><pre><code>//进入文件中修改，提交即可</code></pre><h3 id="4-修改提交信息"><a href="#4-修改提交信息" class="headerlink" title="4. 修改提交信息"></a>4. 修改提交信息</h3><pre><code>git commit --amend   //启动编辑器//修改提交信息，保存按 在末行模式下，输入命令:wq关闭即可</code></pre><h3 id="5-压缩历史（更改历史）"><a href="#5-压缩历史（更改历史）" class="headerlink" title="5. 压缩历史（更改历史）"></a>5. 压缩历史（更改历史）</h3><pre><code>git rebase -i HEAD~2  //编辑器打开2条最新的历史记录//使用编辑器修改</code></pre><h3 id="Push-to-internal-storage"><a href="#Push-to-internal-storage" class="headerlink" title="Push to internal storage"></a>Push to internal storage</h3><h4 id="1-添加远程仓库"><a href="#1-添加远程仓库" class="headerlink" title="1.添加远程仓库"></a>1.添加远程仓库</h4><pre><code>git remote add origin (仓库的SSH)</code></pre><h4 id="2-推送"><a href="#2-推送" class="headerlink" title="2. 推送"></a>2. 推送</h4><pre><code>git push -u origin （分支名）  //推送该分支git push -b (分支名)   //创建并推送分支</code></pre><h3 id="Pull-storage"><a href="#Pull-storage" class="headerlink" title="Pull storage"></a>Pull storage</h3><h4 id="1-获取远程仓库"><a href="#1-获取远程仓库" class="headerlink" title="1. 获取远程仓库"></a>1. 获取远程仓库</h4><pre><code>//在另一个目录下运行git bashgit clone (SSH)  //将网络仓库克隆到本地git checkout -b (本地新建分支名) origin/(远程分支名)  //将远程仓库的分支克隆git push  //直接推送处于该情况下的分支</code></pre><h4 id="2-获取最新的远程仓库分支"><a href="#2-获取最新的远程仓库分支" class="headerlink" title="2. 获取最新的远程仓库分支"></a>2. 获取最新的远程仓库分支</h4><pre><code>git pull origin (分支名)</code></pre><h3 id="Use-Pull-Request"><a href="#Use-Pull-Request" class="headerlink" title="Use Pull Request"></a>Use Pull Request</h3><h4 id="1-WIP-means-Work-in-progress-正在开发中"><a href="#1-WIP-means-Work-in-progress-正在开发中" class="headerlink" title="1. [WIP] means Work in progress 正在开发中"></a>1. [WIP] means Work in progress 正在开发中</h4><h4 id="2-保持本地fork仓库的最新状态"><a href="#2-保持本地fork仓库的最新状态" class="headerlink" title="2. 保持本地fork仓库的最新状态"></a>2. 保持本地fork仓库的最新状态</h4><pre><code>cd (本地仓库路径)git remote add (原仓库新名称) (原仓库SSH)git fetch (原仓库新名称)       //获取最新数据git merge (原仓库新名称)/master   //合并</code></pre><h4 id="3-接收Pull-Request"><a href="#3-接收Pull-Request" class="headerlink" title="3. 接收Pull Request"></a>3. 接收Pull Request</h4><pre><code>git remote add PR发送者 (发送者远程仓库SSH) git fetch PR发送者    //将发送方仓库设置为本地仓库的远程仓库git checkout -b pr1  //创建用于检查的分支git merge PR发送者/workname   //合并分支git branch -D pr1   //删除分支</code></pre><h4 id="4-采纳"><a href="#4-采纳" class="headerlink" title="4. 采纳"></a>4. 采纳</h4><pre><code>git checkout (主分支名)git merge PR发送者/workgit diff origin/(主分支名)git push     //推送</code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
